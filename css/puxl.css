@charset "UTF-8";

/*  PUXL v1-beta (https://puxl.io/)
 *  Created by @MrKanuel. Brought by The Puxl Clan, with love from Basque Country.
 *  Puxl is licensed under the MIT License (MIT) - Copyright (c) 2018 Puxl
 *  (https://github.com/puxl/puxl-framework/blob/master/LICENSE) */
bdo[dir=ltr],
html,
html[dir=ltr] {
    direction: ltr
}

bdo[dir=rtl],
html[dir=rtl] {
    direction: rtl
}

[type=checkbox],
[type=radio],
body,
legend {
    padding: 0
}

blockquote,
body {
    background-color: var(--body--background-color)
}

blockquote,
dfn,
em,
i,
q {
    font-style: italic
}

progress,
sub,
sup {
    vertical-align: baseline
}

.txt:hover,
:root {
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset
}

.bar ul,
.breadcrumbs > ol,
.card .list,
ol.h,
ol.unlisted,
ul.h,
ul.unlisted {
    list-style: none
}

.input-group .addon svg,
.swc .thumb > svg,
[class*=btn-icn] > svg,
[class*=lbl-btn-icn] > span > svg {
    fill: currentColor
}

:root {
    --body--background-color: #fff;
    --body--color: #333;
    --box-shadow--color: rgba(0, 0, 0, .15);
    --color--primary: #005AE6;
    --color--secondary: #DDD;
    --color--success: #1CB25D;
    --color--info: #FDE642;
    --color--warning: #E67800;
    --color--danger: #DD1F26;
    --font-family--mono: "Lucida Sans Typewriter", "Courier New", "Monaco", monospace;
    --font-family--sans: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", "Tahoma", "Verdana", "Arial", sans-serif;
    --font-family--serif: "Times New Roman", "Georgia", "Palatino", serif;
    --body--font-family--mono: var(--font-family--mono);
    --body--font-family--sans: var(--font-family--sans);
    --body--font-family--serif: var(--font-family--serif);
    --body--font-size: 16px;
    --body--line-height: 24px;
    --control__box--border-width: .0625rem;
    --control__box--shape--capsule: 1em;
    --control__box--shape--round: .375em;
    --control__box--shape--square: 0;
    --control__box--shape: var(--control__box--shape--round);
    --control__box--size--xs: .75rem;
    --control__box--size--sm: 1rem;
    --control__box--size--md: 1.25rem;
    --control__box--size--lg: 1.5rem;
    --control__box--size: var(--control__box--size--sm);
    --btn--bg-c: transparent;
    --btn--bd-c: transparent;
    --btn--c: var(--color--primary);
    --txt--bg-c: #fff;
    --txt--bd-c: transparent transparent rgba(0, 0, 0, .25);
    --txt--c: var(--body--color);
    --breakpoint--xs: 480px;
    --breakpoint--sm: 576px;
    --breakpoint--md: 768px;
    --breakpoint--lg: 992px;
    --breakpoint--xl: 1200px;
    --mobile-threshold: 768px;
    --z--main-content: 0;
    --z--card: 1;
    --z--app-bar: 4;
    --z--fab: 6;
    --z--menu: 10;
    --z--drawer: 16;
    --z--p-i-p: 20;
    --z--modal: 24;
    --status-bar--height: 1.5rem;
    --app-bar--height: 3.5rem;
    --app-bar--top: 0;
    --app-bar--bottom: 0;
    --font-family--dyslexia--mono: OpenDyslexicMono, "Lucida Sans Typewriter", "Courier New", "Monaco", monospace;
    --font-family--dyslexia--sans: OpenDyslexic, -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", "Tahoma", "Verdana", "Arial", sans-serif
}

@keyframes focus--outline {

    0%,
    100% {
        outline-color: transparent;
        outline-width: 0
    }

    25% {
        outline-color: rgba(0, 0, 0, .35);
        outline-width: .5rem
    }

    60% {
        outline-color: transparent
    }

    80% {
        outline-width: 0
    }
}

.chk > input:active + span,
.chk > input:focus + span,
.swc > input:active + span,
.swc > input:focus + span,
[class*=lbl-btn] > input:active + span,
[class*=lbl-btn] > input:focus + span,
body :focus {
    outline-color: rgba(0, 0, 0, .5);
    outline-offset: 0;
    outline-style: solid;
    outline-width: .125rem;
    animation: focus--outline ease 3s;
    animation-iteration-count: infinite;
    transform-origin: 50% 50%
}

.card,
.drawer,
.rng,
.rng > input::-moz-range-thumb,
.rng > input::-ms-thumb,
.rng > input::-webkit-slider-thumb,
.sel,
.sel-mul,
.sel-mul > select,
.sel > select,
.swc,
.swc .thumb,
.tabs > div:first-of-type > button,
.txt,
.txt > input,
.txta,
.txta > textarea,
[class*=btn],
[class*=lbl-btn] > span,
a {
    transition: all .15s ease
}

.circle {
    border-radius: 50%
}

.grid-fluid::after,
.grid-fluid::before,
.grid::after,
.grid::before {
    content: ' ';
    display: table
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
img,
main,
menu,
nav,
section,
summary {
    display: block
}

.grid-fluid::after,
.grid::after {
    clear: both
}

.chk > input,
.input-group .txt > small,
.input-group .txt > span,
.jump-link,
.sr,
.swc > input,
.tabs > div:first-of-type > button.tab-icn > span,
.text--hide.rng > small,
.text--hide.rng > span,
.text--hide.sel-mul > small,
.text--hide.sel-mul > span,
.text--hide.sel > small,
.text--hide.sel > span,
.text--hide.swc > span:first-of-type,
.text--hide.txt > small,
.text--hide.txt > span,
.text--hide.txta > small,
.text--hide.txta > span,
[class*=btn-icn] > span,
[class*=lbl-btn-icn] > span > span,
[class*=lbl-btn] > input,
div.flyout.text--hide .title {
    border: 0;
    clip: rect(0, 0, 0, 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px
}

html:not([dir=ltr]):not([dir=rtl])::before,
html:not([lang])::before,
iframe:not([title])::before,
main:not([id])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

body,
button,
input,
select,
textarea {
    margin: 0
}

html,
img {
    height: auto
}

html:not([dir=ltr]):not([dir=rtl]),
html:not([lang]),
iframe:not([title]),
main:not([id]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.jump-link:active,
.jump-link:focus,
[class*=btn-icn-txt] > span,
[class*=lbl-btn-icn-txt] > span > span,
[class*=lbl-btn-icn] > span {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: relative;
    width: auto
}

.grid,
body,
html {
    width: 100%
}

[class*=btn],
[class*=lbl-btn] > span {
    -moz-user-select: none;
    -ms-user-select: none;
    -webkit-user-select: none;
    user-select: none
}

html {
    box-sizing: border-box;
    font-size: var(--body--font-size);
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%
}

html:not([dir=ltr]):not([dir=rtl])::before {
    content: 'Missing attribute dir="" in this <html> tag. The dir="" attribute value defines the horizontal direction of the text flow, it can be dir="ltr" fot Left To Right OR dir="rtl" for Right To Left. Example: <html dir="ltr"> OR <html dir="rtl">.'
}

html:not([lang])::before {
    content: 'Missing attribute lang="" in this <html> tag. Example: <html lang="[ Use ISO 639-1 Language Code ]">.'
}

html[dir] {
    unicode-bidi: embed
}

*,
::after,
::before {
    box-sizing: inherit
}

::-moz-focusring {
    color: transparent;
    text-shadow: 0 0 0 transparent;
    transition: color 0s
}

::-moz-focus-inner {
    border: 0;
    color: transparent;
    padding: 0
}

body {
    color: var(--body--color);
    font-family: var(--body--font-family--sans, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", Tahoma, Verdana, Arial, sans-serif);
    font-size: 1rem;
    font-weight: 400;
    height: 100%;
    line-height: var(--body--line-height);
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased
}

main:not([id])::before {
    content: 'Missing attribute id="" in this <main> tag. Remember to use a "skip-to-main" link as first child of body. Example: <main id="[ some ID ]">.'
}

bdo {
    unicode-bidi: bidi-override
}

audio,
canvas,
progress,
video {
    display: inline-block
}

audio:not([controls]) {
    display: none;
    height: 0
}

button,
input,
optgroup,
select,
textarea {
    font-family: inherit
}

optgroup {
    font-weight: 700
}

button,
input,
select {
    overflow: visible
}

button,
select {
    text-transform: none
}

[type=button],
[type=reset],
[type=submit],
button {
    cursor: pointer
}

[type=reset],
[type=submit],
button,
html [type=button] {
    -webkit-appearance: button
}

code,
kbd,
pre,
samp {
    font-family: var(--body--font-family--mono, "Lucida Sans Typewriter", "Courier New", Monaco, monospace);
    font-size: 1em
}

iframe {
    border: 0
}

iframe:not([title])::before {
    content: 'This <iframe> tag must have a non-empty title="" attribute. Example: <iframe title="[ some TITLE ]">.'
}

img {
    border: 0;
    -ms-interpolation-mode: bicubic;
    max-width: 100%
}

legend {
    color: inherit;
    max-width: 100%;
    white-space: normal
}

svg:not(:root) {
    overflow: hidden
}

[hidden],
template {
    display: none
}

textarea {
    overflow: auto
}

[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
    height: auto
}

[type=search] {
    -webkit-appearance: textfield
}

[type=search]::-webkit-search-cancel-button,
[type=search]::-webkit-search-decoration {
    -webkit-appearance: none
}

.grid-fluid {
    width: 100%;
    padding: 0 .75rem
}

.grid-fluid:first-child {
    padding-top: .75rem
}

.grid-fluid:last-child {
    padding-bottom: .75rem
}

.grid {
    padding: 0 .75rem;
    margin-left: auto;
    margin-right: auto
}

.col-xs-1,
.col-xs-10,
.col-xs-11,
.col-xs-12,
.col-xs-2,
.col-xs-3,
.col-xs-4,
.col-xs-5,
.col-xs-7,
.col-xs-8,
.col-xs-9 {
    margin: .75rem
}

.grid:first-child {
    padding-top: .75rem
}

.grid:last-child {
    padding-bottom: .75rem
}

@media (min-width:480px) {
    .grid {
        max-width: 480px
    }
}

@media (min-width:576px) {
    .grid {
        max-width: 576px
    }
}

@media (min-width:768px) {
    .grid {
        max-width: 768px
    }
}

[class*=grid] > [class*=col] {
    min-height: 1px;
    position: relative
}

[dir=ltr] [class*=grid] > [class*=col] {
    float: left
}

[dir=rtl] [class*=grid] > [class*=col] {
    float: right
}

.col-xs-1 {
    width: calc((100% * .08333) - 1.5rem)
}

.col-xs-2 {
    width: calc((100% * .16667) - 1.5rem)
}

.col-xs-3 {
    width: calc((100% * .25) - 1.5rem)
}

.col-xs-4 {
    width: calc((100% * .33333) - 1.5rem)
}

.col-xs-5 {
    width: calc((100% * .41667) - 1.5rem)
}

.col-xs-6 {
    margin: .75rem;
    width: calc((100% * .5) - 1.5rem)
}

.col-xs-7 {
    width: calc((100% * .58333) - 1.5rem)
}

.col-xs-8 {
    width: calc((100% * .66667) - 1.5rem)
}

.col-xs-9 {
    width: calc((100% * .75) - 1.5rem)
}

.col-xs-10 {
    width: calc((100% * .83333) - 1.5rem)
}

.col-xs-11 {
    width: calc((100% * .91667) - 1.5rem)
}

.col-xs-12 {
    width: calc((100% * 1) - 1.5rem)
}

@media (min-width:576px) {
    .col-sm-1 {
        margin: .75rem;
        width: calc((100% * .08333) - 1.5rem)
    }

    .col-sm-2 {
        margin: .75rem;
        width: calc((100% * .16667) - 1.5rem)
    }

    .col-sm-3 {
        margin: .75rem;
        width: calc((100% * .25) - 1.5rem)
    }

    .col-sm-4 {
        margin: .75rem;
        width: calc((100% * .33333) - 1.5rem)
    }

    .col-sm-5 {
        margin: .75rem;
        width: calc((100% * .41667) - 1.5rem)
    }

    .col-sm-6 {
        margin: .75rem;
        width: calc((100% * .5) - 1.5rem)
    }

    .col-sm-7 {
        margin: .75rem;
        width: calc((100% * .58333) - 1.5rem)
    }

    .col-sm-8 {
        margin: .75rem;
        width: calc((100% * .66667) - 1.5rem)
    }

    .col-sm-9 {
        margin: .75rem;
        width: calc((100% * .75) - 1.5rem)
    }

    .col-sm-10 {
        margin: .75rem;
        width: calc((100% * .83333) - 1.5rem)
    }

    .col-sm-11 {
        margin: .75rem;
        width: calc((100% * .91667) - 1.5rem)
    }

    .col-sm-12 {
        margin: .75rem;
        width: calc((100% * 1) - 1.5rem)
    }
}

@media (min-width:768px) {
    .col-md-1 {
        margin: .75rem;
        width: calc((100% * .08333) - 1.5rem)
    }

    .col-md-2 {
        margin: .75rem;
        width: calc((100% * .16667) - 1.5rem)
    }

    .col-md-3 {
        margin: .75rem;
        width: calc((100% * .25) - 1.5rem)
    }

    .col-md-4 {
        margin: .75rem;
        width: calc((100% * .33333) - 1.5rem)
    }

    .col-md-5 {
        margin: .75rem;
        width: calc((100% * .41667) - 1.5rem)
    }

    .col-md-6 {
        margin: .75rem;
        width: calc((100% * .5) - 1.5rem)
    }

    .col-md-7 {
        margin: .75rem;
        width: calc((100% * .58333) - 1.5rem)
    }

    .col-md-8 {
        margin: .75rem;
        width: calc((100% * .66667) - 1.5rem)
    }

    .col-md-9 {
        margin: .75rem;
        width: calc((100% * .75) - 1.5rem)
    }

    .col-md-10 {
        margin: .75rem;
        width: calc((100% * .83333) - 1.5rem)
    }

    .col-md-11 {
        margin: .75rem;
        width: calc((100% * .91667) - 1.5rem)
    }

    .col-md-12 {
        margin: .75rem;
        width: calc((100% * 1) - 1.5rem)
    }
}

@media (min-width:992px) {
    .grid {
        max-width: 992px
    }

    .col-lg-1 {
        margin: .75rem;
        width: calc((100% * .08333) - 1.5rem)
    }

    .col-lg-2 {
        margin: .75rem;
        width: calc((100% * .16667) - 1.5rem)
    }

    .col-lg-3 {
        margin: .75rem;
        width: calc((100% * .25) - 1.5rem)
    }

    .col-lg-4 {
        margin: .75rem;
        width: calc((100% * .33333) - 1.5rem)
    }

    .col-lg-5 {
        margin: .75rem;
        width: calc((100% * .41667) - 1.5rem)
    }

    .col-lg-6 {
        margin: .75rem;
        width: calc((100% * .5) - 1.5rem)
    }

    .col-lg-7 {
        margin: .75rem;
        width: calc((100% * .58333) - 1.5rem)
    }

    .col-lg-8 {
        margin: .75rem;
        width: calc((100% * .66667) - 1.5rem)
    }

    .col-lg-9 {
        margin: .75rem;
        width: calc((100% * .75) - 1.5rem)
    }

    .col-lg-10 {
        margin: .75rem;
        width: calc((100% * .83333) - 1.5rem)
    }

    .col-lg-11 {
        margin: .75rem;
        width: calc((100% * .91667) - 1.5rem)
    }

    .col-lg-12 {
        margin: .75rem;
        width: calc((100% * 1) - 1.5rem)
    }
}

@media (min-width:1200px) {
    .grid {
        max-width: 1200px
    }

    .col-xl-1 {
        margin: .75rem;
        width: calc((100% * .08333) - 1.5rem)
    }

    .col-xl-2 {
        margin: .75rem;
        width: calc((100% * .16667) - 1.5rem)
    }

    .col-xl-3 {
        margin: .75rem;
        width: calc((100% * .25) - 1.5rem)
    }

    .col-xl-4 {
        margin: .75rem;
        width: calc((100% * .33333) - 1.5rem)
    }

    .col-xl-5 {
        margin: .75rem;
        width: calc((100% * .41667) - 1.5rem)
    }

    .col-xl-6 {
        margin: .75rem;
        width: calc((100% * .5) - 1.5rem)
    }

    .col-xl-7 {
        margin: .75rem;
        width: calc((100% * .58333) - 1.5rem)
    }

    .col-xl-8 {
        margin: .75rem;
        width: calc((100% * .66667) - 1.5rem)
    }

    .col-xl-9 {
        margin: .75rem;
        width: calc((100% * .75) - 1.5rem)
    }

    .col-xl-10 {
        margin: .75rem;
        width: calc((100% * .83333) - 1.5rem)
    }

    .col-xl-11 {
        margin: .75rem;
        width: calc((100% * .91667) - 1.5rem)
    }

    .col-xl-12 {
        margin: .75rem;
        width: calc((100% * 1) - 1.5rem)
    }
}

[dir=ltr] .col-xs-offset-0 {
    margin-left: calc((100% * 0) + (1.5rem / 2))
}

[dir=rtl] .col-xs-offset-0 {
    margin-right: calc((100% * 0) + (1.5rem / 2))
}

[dir=ltr] .col-xs-offset-1 {
    margin-left: calc((100% * .08333) + (1.5rem / 2))
}

[dir=rtl] .col-xs-offset-1 {
    margin-right: calc((100% * .08333) + (1.5rem / 2))
}

[dir=ltr] .col-xs-offset-2 {
    margin-left: calc((100% * .16667) + (1.5rem / 2))
}

[dir=rtl] .col-xs-offset-2 {
    margin-right: calc((100% * .16667) + (1.5rem / 2))
}

[dir=ltr] .col-xs-offset-3 {
    margin-left: calc((100% * .25) + (1.5rem / 2))
}

[dir=rtl] .col-xs-offset-3 {
    margin-right: calc((100% * .25) + (1.5rem / 2))
}

[dir=ltr] .col-xs-offset-4 {
    margin-left: calc((100% * .33333) + (1.5rem / 2))
}

[dir=rtl] .col-xs-offset-4 {
    margin-right: calc((100% * .33333) + (1.5rem / 2))
}

[dir=ltr] .col-xs-offset-5 {
    margin-left: calc((100% * .41667) + (1.5rem / 2))
}

[dir=rtl] .col-xs-offset-5 {
    margin-right: calc((100% * .41667) + (1.5rem / 2))
}

[dir=ltr] .col-xs-offset-6 {
    margin-left: calc((100% * .5) + (1.5rem / 2))
}

[dir=rtl] .col-xs-offset-6 {
    margin-right: calc((100% * .5) + (1.5rem / 2))
}

[dir=ltr] .col-xs-offset-7 {
    margin-left: calc((100% * .58333) + (1.5rem / 2))
}

[dir=rtl] .col-xs-offset-7 {
    margin-right: calc((100% * .58333) + (1.5rem / 2))
}

[dir=ltr] .col-xs-offset-8 {
    margin-left: calc((100% * .66667) + (1.5rem / 2))
}

[dir=rtl] .col-xs-offset-8 {
    margin-right: calc((100% * .66667) + (1.5rem / 2))
}

[dir=ltr] .col-xs-offset-9 {
    margin-left: calc((100% * .75) + (1.5rem / 2))
}

[dir=rtl] .col-xs-offset-9 {
    margin-right: calc((100% * .75) + (1.5rem / 2))
}

[dir=ltr] .col-xs-offset-10 {
    margin-left: calc((100% * .83333) + (1.5rem / 2))
}

[dir=rtl] .col-xs-offset-10 {
    margin-right: calc((100% * .83333) + (1.5rem / 2))
}

[dir=ltr] .col-xs-offset-11 {
    margin-left: calc((100% * .91667) + (1.5rem / 2))
}

[dir=rtl] .col-xs-offset-11 {
    margin-right: calc((100% * .91667) + (1.5rem / 2))
}

@media (min-width:576px) {
    [dir=ltr] .col-sm-offset-0 {
        margin-left: calc((100% * 0) + (1.5rem / 2))
    }

    [dir=rtl] .col-sm-offset-0 {
        margin-right: calc((100% * 0) + (1.5rem / 2))
    }

    [dir=ltr] .col-sm-offset-1 {
        margin-left: calc((100% * .08333) + (1.5rem / 2))
    }

    [dir=rtl] .col-sm-offset-1 {
        margin-right: calc((100% * .08333) + (1.5rem / 2))
    }

    [dir=ltr] .col-sm-offset-2 {
        margin-left: calc((100% * .16667) + (1.5rem / 2))
    }

    [dir=rtl] .col-sm-offset-2 {
        margin-right: calc((100% * .16667) + (1.5rem / 2))
    }

    [dir=ltr] .col-sm-offset-3 {
        margin-left: calc((100% * .25) + (1.5rem / 2))
    }

    [dir=rtl] .col-sm-offset-3 {
        margin-right: calc((100% * .25) + (1.5rem / 2))
    }

    [dir=ltr] .col-sm-offset-4 {
        margin-left: calc((100% * .33333) + (1.5rem / 2))
    }

    [dir=rtl] .col-sm-offset-4 {
        margin-right: calc((100% * .33333) + (1.5rem / 2))
    }

    [dir=ltr] .col-sm-offset-5 {
        margin-left: calc((100% * .41667) + (1.5rem / 2))
    }

    [dir=rtl] .col-sm-offset-5 {
        margin-right: calc((100% * .41667) + (1.5rem / 2))
    }

    [dir=ltr] .col-sm-offset-6 {
        margin-left: calc((100% * .5) + (1.5rem / 2))
    }

    [dir=rtl] .col-sm-offset-6 {
        margin-right: calc((100% * .5) + (1.5rem / 2))
    }

    [dir=ltr] .col-sm-offset-7 {
        margin-left: calc((100% * .58333) + (1.5rem / 2))
    }

    [dir=rtl] .col-sm-offset-7 {
        margin-right: calc((100% * .58333) + (1.5rem / 2))
    }

    [dir=ltr] .col-sm-offset-8 {
        margin-left: calc((100% * .66667) + (1.5rem / 2))
    }

    [dir=rtl] .col-sm-offset-8 {
        margin-right: calc((100% * .66667) + (1.5rem / 2))
    }

    [dir=ltr] .col-sm-offset-9 {
        margin-left: calc((100% * .75) + (1.5rem / 2))
    }

    [dir=rtl] .col-sm-offset-9 {
        margin-right: calc((100% * .75) + (1.5rem / 2))
    }

    [dir=ltr] .col-sm-offset-10 {
        margin-left: calc((100% * .83333) + (1.5rem / 2))
    }

    [dir=rtl] .col-sm-offset-10 {
        margin-right: calc((100% * .83333) + (1.5rem / 2))
    }

    [dir=ltr] .col-sm-offset-11 {
        margin-left: calc((100% * .91667) + (1.5rem / 2))
    }

    [dir=rtl] .col-sm-offset-11 {
        margin-right: calc((100% * .91667) + (1.5rem / 2))
    }
}

@media (min-width:768px) {
    [dir=ltr] .col-md-offset-0 {
        margin-left: calc((100% * 0) + (1.5rem / 2))
    }

    [dir=rtl] .col-md-offset-0 {
        margin-right: calc((100% * 0) + (1.5rem / 2))
    }

    [dir=ltr] .col-md-offset-1 {
        margin-left: calc((100% * .08333) + (1.5rem / 2))
    }

    [dir=rtl] .col-md-offset-1 {
        margin-right: calc((100% * .08333) + (1.5rem / 2))
    }

    [dir=ltr] .col-md-offset-2 {
        margin-left: calc((100% * .16667) + (1.5rem / 2))
    }

    [dir=rtl] .col-md-offset-2 {
        margin-right: calc((100% * .16667) + (1.5rem / 2))
    }

    [dir=ltr] .col-md-offset-3 {
        margin-left: calc((100% * .25) + (1.5rem / 2))
    }

    [dir=rtl] .col-md-offset-3 {
        margin-right: calc((100% * .25) + (1.5rem / 2))
    }

    [dir=ltr] .col-md-offset-4 {
        margin-left: calc((100% * .33333) + (1.5rem / 2))
    }

    [dir=rtl] .col-md-offset-4 {
        margin-right: calc((100% * .33333) + (1.5rem / 2))
    }

    [dir=ltr] .col-md-offset-5 {
        margin-left: calc((100% * .41667) + (1.5rem / 2))
    }

    [dir=rtl] .col-md-offset-5 {
        margin-right: calc((100% * .41667) + (1.5rem / 2))
    }

    [dir=ltr] .col-md-offset-6 {
        margin-left: calc((100% * .5) + (1.5rem / 2))
    }

    [dir=rtl] .col-md-offset-6 {
        margin-right: calc((100% * .5) + (1.5rem / 2))
    }

    [dir=ltr] .col-md-offset-7 {
        margin-left: calc((100% * .58333) + (1.5rem / 2))
    }

    [dir=rtl] .col-md-offset-7 {
        margin-right: calc((100% * .58333) + (1.5rem / 2))
    }

    [dir=ltr] .col-md-offset-8 {
        margin-left: calc((100% * .66667) + (1.5rem / 2))
    }

    [dir=rtl] .col-md-offset-8 {
        margin-right: calc((100% * .66667) + (1.5rem / 2))
    }

    [dir=ltr] .col-md-offset-9 {
        margin-left: calc((100% * .75) + (1.5rem / 2))
    }

    [dir=rtl] .col-md-offset-9 {
        margin-right: calc((100% * .75) + (1.5rem / 2))
    }

    [dir=ltr] .col-md-offset-10 {
        margin-left: calc((100% * .83333) + (1.5rem / 2))
    }

    [dir=rtl] .col-md-offset-10 {
        margin-right: calc((100% * .83333) + (1.5rem / 2))
    }

    [dir=ltr] .col-md-offset-11 {
        margin-left: calc((100% * .91667) + (1.5rem / 2))
    }

    [dir=rtl] .col-md-offset-11 {
        margin-right: calc((100% * .91667) + (1.5rem / 2))
    }
}

@media (min-width:992px) {
    [dir=ltr] .col-lg-offset-0 {
        margin-left: calc((100% * 0) + (1.5rem / 2))
    }

    [dir=rtl] .col-lg-offset-0 {
        margin-right: calc((100% * 0) + (1.5rem / 2))
    }

    [dir=ltr] .col-lg-offset-1 {
        margin-left: calc((100% * .08333) + (1.5rem / 2))
    }

    [dir=rtl] .col-lg-offset-1 {
        margin-right: calc((100% * .08333) + (1.5rem / 2))
    }

    [dir=ltr] .col-lg-offset-2 {
        margin-left: calc((100% * .16667) + (1.5rem / 2))
    }

    [dir=rtl] .col-lg-offset-2 {
        margin-right: calc((100% * .16667) + (1.5rem / 2))
    }

    [dir=ltr] .col-lg-offset-3 {
        margin-left: calc((100% * .25) + (1.5rem / 2))
    }

    [dir=rtl] .col-lg-offset-3 {
        margin-right: calc((100% * .25) + (1.5rem / 2))
    }

    [dir=ltr] .col-lg-offset-4 {
        margin-left: calc((100% * .33333) + (1.5rem / 2))
    }

    [dir=rtl] .col-lg-offset-4 {
        margin-right: calc((100% * .33333) + (1.5rem / 2))
    }

    [dir=ltr] .col-lg-offset-5 {
        margin-left: calc((100% * .41667) + (1.5rem / 2))
    }

    [dir=rtl] .col-lg-offset-5 {
        margin-right: calc((100% * .41667) + (1.5rem / 2))
    }

    [dir=ltr] .col-lg-offset-6 {
        margin-left: calc((100% * .5) + (1.5rem / 2))
    }

    [dir=rtl] .col-lg-offset-6 {
        margin-right: calc((100% * .5) + (1.5rem / 2))
    }

    [dir=ltr] .col-lg-offset-7 {
        margin-left: calc((100% * .58333) + (1.5rem / 2))
    }

    [dir=rtl] .col-lg-offset-7 {
        margin-right: calc((100% * .58333) + (1.5rem / 2))
    }

    [dir=ltr] .col-lg-offset-8 {
        margin-left: calc((100% * .66667) + (1.5rem / 2))
    }

    [dir=rtl] .col-lg-offset-8 {
        margin-right: calc((100% * .66667) + (1.5rem / 2))
    }

    [dir=ltr] .col-lg-offset-9 {
        margin-left: calc((100% * .75) + (1.5rem / 2))
    }

    [dir=rtl] .col-lg-offset-9 {
        margin-right: calc((100% * .75) + (1.5rem / 2))
    }

    [dir=ltr] .col-lg-offset-10 {
        margin-left: calc((100% * .83333) + (1.5rem / 2))
    }

    [dir=rtl] .col-lg-offset-10 {
        margin-right: calc((100% * .83333) + (1.5rem / 2))
    }

    [dir=ltr] .col-lg-offset-11 {
        margin-left: calc((100% * .91667) + (1.5rem / 2))
    }

    [dir=rtl] .col-lg-offset-11 {
        margin-right: calc((100% * .91667) + (1.5rem / 2))
    }
}

@media (min-width:1200px) {
    [dir=ltr] .col-xl-offset-0 {
        margin-left: calc((100% * 0) + (1.5rem / 2))
    }

    [dir=rtl] .col-xl-offset-0 {
        margin-right: calc((100% * 0) + (1.5rem / 2))
    }

    [dir=ltr] .col-xl-offset-1 {
        margin-left: calc((100% * .08333) + (1.5rem / 2))
    }

    [dir=rtl] .col-xl-offset-1 {
        margin-right: calc((100% * .08333) + (1.5rem / 2))
    }

    [dir=ltr] .col-xl-offset-2 {
        margin-left: calc((100% * .16667) + (1.5rem / 2))
    }

    [dir=rtl] .col-xl-offset-2 {
        margin-right: calc((100% * .16667) + (1.5rem / 2))
    }

    [dir=ltr] .col-xl-offset-3 {
        margin-left: calc((100% * .25) + (1.5rem / 2))
    }

    [dir=rtl] .col-xl-offset-3 {
        margin-right: calc((100% * .25) + (1.5rem / 2))
    }

    [dir=ltr] .col-xl-offset-4 {
        margin-left: calc((100% * .33333) + (1.5rem / 2))
    }

    [dir=rtl] .col-xl-offset-4 {
        margin-right: calc((100% * .33333) + (1.5rem / 2))
    }

    [dir=ltr] .col-xl-offset-5 {
        margin-left: calc((100% * .41667) + (1.5rem / 2))
    }

    [dir=rtl] .col-xl-offset-5 {
        margin-right: calc((100% * .41667) + (1.5rem / 2))
    }

    [dir=ltr] .col-xl-offset-6 {
        margin-left: calc((100% * .5) + (1.5rem / 2))
    }

    [dir=rtl] .col-xl-offset-6 {
        margin-right: calc((100% * .5) + (1.5rem / 2))
    }

    [dir=ltr] .col-xl-offset-7 {
        margin-left: calc((100% * .58333) + (1.5rem / 2))
    }

    [dir=rtl] .col-xl-offset-7 {
        margin-right: calc((100% * .58333) + (1.5rem / 2))
    }

    [dir=ltr] .col-xl-offset-8 {
        margin-left: calc((100% * .66667) + (1.5rem / 2))
    }

    [dir=rtl] .col-xl-offset-8 {
        margin-right: calc((100% * .66667) + (1.5rem / 2))
    }

    [dir=ltr] .col-xl-offset-9 {
        margin-left: calc((100% * .75) + (1.5rem / 2))
    }

    [dir=rtl] .col-xl-offset-9 {
        margin-right: calc((100% * .75) + (1.5rem / 2))
    }

    [dir=ltr] .col-xl-offset-10 {
        margin-left: calc((100% * .83333) + (1.5rem / 2))
    }

    [dir=rtl] .col-xl-offset-10 {
        margin-right: calc((100% * .83333) + (1.5rem / 2))
    }

    [dir=ltr] .col-xl-offset-11 {
        margin-left: calc((100% * .91667) + (1.5rem / 2))
    }

    [dir=rtl] .col-xl-offset-11 {
        margin-right: calc((100% * .91667) + (1.5rem / 2))
    }
}

abbr {
    border: 0
}

abbr[title] {
    cursor: help;
    text-decoration: underline dotted
}

blockquote {
    border-radius: .125em;
    margin: 0 0 var(--body--line-height)
}

[dir=ltr] blockquote {
    border-left: solid .125em rgba(221, 221, 221, .5);
    border-right: 0;
    padding: .5em .5em .5em 1.5em;
    text-align: left
}

[dir=rtl] blockquote {
    border-right: solid .125em rgba(221, 221, 221, .5);
    border-left: 0;
    padding: .5em 1.5em .5em .5em;
    text-align: right
}

blockquote::before {
    color: rgba(221, 221, 221, .5);
    display: block;
    font-family: var(--font-family--serif);
    font-size: 3em;
    font-weight: 400;
    height: .25em;
    line-height: .5em;
    position: relative;
    top: .125em;
    width: .25em
}

[dir=ltr] blockquote::before {
    content: "“";
    left: -.5em
}

[dir=rtl] blockquote::before {
    content: "”";
    right: -.25em
}

blockquote:last-child,
dl dd:last-child,
dl:last-child {
    margin-bottom: 0
}

blockquote blockquote,
blockquote ol,
blockquote p,
blockquote ul {
    margin-bottom: 0;
    margin-top: 1em;
    max-width: 100%
}

blockquote blockquote:first-child,
blockquote ol:first-child,
blockquote p:first-child,
blockquote ul:first-child {
    margin-top: 0
}

[dir=ltr] blockquote blockquote {
    margin-left: .25em
}

[dir=rtl] blockquote blockquote {
    margin-right: .25em
}

blockquote footer {
    border-top: dotted .0625em rgba(255, 255, 255, .5);
    font-size: .875em;
    margin-top: .5em;
    padding-top: .5em
}

[dir=ltr] blockquote footer {
    text-align: right
}

[dir=rtl] blockquote footer {
    text-align: left
}

blockquote cite,
h1 small,
h2 small,
h3 small,
h4 small,
h5 small,
h6 small {
    color: #737373
}

code,
kbd {
    background-color: #fff;
    color: #333
}

b,
strong {
    font-weight: inherit;
    font-weight: bolder
}

code {
    border: .0625em solid #f2f2f2;
    border-radius: .25em;
    padding: .125em
}

dl {
    margin: 0 0 var(--body--line-height)
}

@media (min-width:768px) {
    dl.h dt {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        width: 20%
    }

    [dir=ltr] dl.h dt {
        clear: left;
        float: left
    }

    [dir=rtl] dl.h dt {
        clear: right;
        float: right
    }

    [dir=ltr] dl.h dd {
        margin-left: 21%;
        margin-right: 0
    }

    [dir=rtl] dl.h dd {
        margin-left: 0;
        margin-right: 21%
    }
}

dl dt {
    font-weight: 700
}

dl dd {
    margin: 0 0 var(--body--line-height)1em
}

@media (min-width:768px) {
    dl dd {
        margin-left: 2em
    }
}

h1,
h2,
h3,
h4,
h5,
h6,
ol,
ul {
    margin: 0 0 var(--body--line-height)
}

h1 {
    font-size: calc(1vw + 2em)
}

h2 {
    font-size: calc(1vw + 1.75em)
}

h3 {
    font-size: calc(1vw + 1.5em)
}

h4 {
    font-size: calc(1vw + 1.25em)
}

h5 {
    font-size: calc(1vw + 1em)
}

h6 {
    font-size: calc(1vw + .75em)
}

h1,
h2,
h3,
h4,
h5,
h6 {
    line-height: 1.125em
}

kbd {
    border-color: rgba(0, 0, 0, .1);
    border-radius: .25em;
    border-style: solid;
    border-width: .0625em;
    box-shadow: 0 -.125em 0 var(--box-shadow--color)inset;
    display: inline-block;
    padding: 0 .375em
}

a:not([class*=bar]):not([class*=btn]):not([class*=card]):not([class*=home]),
a:not([class*=bar]):not([class*=btn]):not([class*=card]):not([class*=home]):link {
    background-color: transparent;
    border-bottom: solid .0625em var(--color--primary);
    border-radius: .125em;
    color: var(--color--primary);
    cursor: pointer;
    padding: 0 .125em;
    text-decoration: none
}

a:not([class*=bar]):not([class*=btn]):not([class*=card]):not([class*=home]):visited {
    color: #003280
}

a:not([class*=bar]):not([class*=btn]):not([class*=card]):not([class*=home]):focus,
a:not([class*=bar]):not([class*=btn]):not([class*=card]):not([class*=home]):hover {
    background-color: #005AE6;
    border-bottom-color: #005AE6;
    color: #fff
}

a:not([class*=bar]):not([class*=btn]):not([class*=card]):not([class*=home]):active {
    background-color: #0046b3;
    border-bottom-color: #0046b3;
    color: #fff
}

a:not([class*=bar]):not([class*=btn]):not([class*=card]):not([class*=home])[href="#"] {
    position: relative
}

a:not([class*=bar]):not([class*=btn]):not([class*=card]):not([class*=home])[href="#"]::after {
    box-shadow: 0 1px 2px var(--box-shadow--color), 0 2px 4px var(--box-shadow--color);
    background-color: #fef3a7;
    color: #000;
    content: 'href="#"!';
    font-family: var(--body--font-family--mono);
    font-size: .75rem;
    left: -.25rem;
    padding: 0 .25rem;
    position: absolute;
    top: .125rem;
    transform: rotate(-20deg);
    transform-origin: 50% 50%
}

.swc,
sub,
sup {
    position: relative
}

a:not([class*=bar]):not([class*=btn]):not([class*=card]):not([class*=home]).block {
    background: 0 0;
    border: 0;
    color: inherit;
    display: block;
    padding: 0;
    text-decoration: none
}

[class*=btn],
ol.h li,
ul.h li {
    display: inline-block
}

a:not([class*=bar]):not([class*=btn]):not([class*=card]):not([class*=home]).external {
    background-repeat: no-repeat;
    background-size: .75em
}

[dir=ltr] a:not([class*=bar]):not([class*=btn]):not([class*=card]):not([class*=home]).external {
    background-position: center right .25em;
    padding-right: 1.5em
}

[dir=rtl] ol.h,
[dir=rtl] ol.unlisted,
[dir=rtl] ul.h,
[dir=rtl] ul.unlisted {
    padding-right: 0
}

[dir=rtl] a:not([class*=bar]):not([class*=btn]):not([class*=card]):not([class*=home]).external {
    background-position: .25em center;
    padding-left: 1.5em
}

[dir=ltr] ol.h,
[dir=ltr] ol.unlisted,
[dir=ltr] ul.h,
[dir=ltr] ul.unlisted {
    padding-left: 0
}

a:not([class*=bar]):not([class*=btn]):not([class*=card]):not([class*=home]).external,
a:not([class*=bar]):not([class*=btn]):not([class*=card]):not([class*=home]).external:link {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(0,90,230)"%3E%3Cpath d="M31 18c-.6 0-1 .4-1 1v11H2V2h11c.6 0 1-.4 1-1s-.4-1-1-1H1C.4 0 0 .4 0 1v30c0 .6.4 1 1 1h30c.6 0 1-.4 1-1V19c0-.6-.4-1-1-1z"/%3E%3Cpath d="M15.3 15.3c-.4.4-.4 1 0 1.4.4.4 1 .4 1.4 0L30 3.4V11c0 .6.4 1 1 1s1-.4 1-1V1c0-.6-.4-1-1-1H21c-.6 0-1 .4-1 1s.4 1 1 1h7.6L15.3 15.3z"/%3E%3C/svg%3E')
}

a:not([class*=bar]):not([class*=btn]):not([class*=card]):not([class*=home]).external:visited {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(0,50,128)"%3E%3Cpath d="M31 18c-.6 0-1 .4-1 1v11H2V2h11c.6 0 1-.4 1-1s-.4-1-1-1H1C.4 0 0 .4 0 1v30c0 .6.4 1 1 1h30c.6 0 1-.4 1-1V19c0-.6-.4-1-1-1z"/%3E%3Cpath d="M15.3 15.3c-.4.4-.4 1 0 1.4.4.4 1 .4 1.4 0L30 3.4V11c0 .6.4 1 1 1s1-.4 1-1V1c0-.6-.4-1-1-1H21c-.6 0-1 .4-1 1s.4 1 1 1h7.6L15.3 15.3z"/%3E%3C/svg%3E')
}

a:not([class*=bar]):not([class*=btn]):not([class*=card]):not([class*=home]).external:active,
a:not([class*=bar]):not([class*=btn]):not([class*=card]):not([class*=home]).external:focus,
a:not([class*=bar]):not([class*=btn]):not([class*=card]):not([class*=home]).external:hover {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(255,255,255)"%3E%3Cpath d="M31 18c-.6 0-1 .4-1 1v11H2V2h11c.6 0 1-.4 1-1s-.4-1-1-1H1C.4 0 0 .4 0 1v30c0 .6.4 1 1 1h30c.6 0 1-.4 1-1V19c0-.6-.4-1-1-1z"/%3E%3Cpath d="M15.3 15.3c-.4.4-.4 1 0 1.4.4.4 1 .4 1.4 0L30 3.4V11c0 .6.4 1 1 1s1-.4 1-1V1c0-.6-.4-1-1-1H21c-.6 0-1 .4-1 1s.4 1 1 1h7.6L15.3 15.3z"/%3E%3C/svg%3E')
}

ol ol,
ol ul,
ol:last-child,
p:last-child,
pre:last-child,
ul ol,
ul ul,
ul:last-child {
    margin-bottom: 0
}

ol.h,
ul.h {
    padding: 0
}

[dir=ltr] ol {
    padding-left: 2em
}

[dir=rtl] ol {
    padding-right: 2em
}

[dir=ltr] ul {
    padding-left: 1.25em
}

[dir=rtl] ul {
    padding-right: 1.25em
}

[class*=btn-icn-txt],
[class*=btn] {
    padding: calc(.5em - .0625rem) calc(1em - .0625rem)
}

p,
pre {
    margin: 0 0 var(--body--line-height)
}

mark {
    background-color: rgba(254, 243, 167, .75);
    color: #000;
    border-radius: .125em
}

p {
    max-width: 65ch
}

.card > .content > p,
.tbl,
[class^=alert] p,
figure > * {
    max-width: 100%
}

pre {
    padding: .25em;
    overflow-x: scroll
}

small {
    font-size: 80%
}

sub,
sup {
    font-size: 75%;
    line-height: 0
}

sub {
    bottom: -.25em
}

sup {
    top: -.5em
}

hr {
    background: linear-gradient(to right, transparent, #DDD, transparent);
    border: 0;
    box-sizing: content-box;
    height: .125em;
    overflow: visible;
    margin: var(--body--line-height)0
}

.chk > span,
.sel > select,
.txt > input {
    background-repeat: no-repeat;
    background-size: 1em
}

hr.margin--no {
    margin: 0
}

.swc .thumb,
[class*=btn],
[class*=lbl-btn] > span {
    border-radius: var(--control__box--shape);
    border-style: solid;
    border-width: var(--control__box--border-width);
    cursor: pointer;
    text-shadow: none;
    vertical-align: middle
}

[class*=btn] {
    background-color: var(--btn--bg-c);
    border-color: var(--btn--bd-c);
    color: var(--btn--c);
    font-size: var(--control__box--size);
    min-height: 2em;
    line-height: 1em;
    text-align: center
}

[class*=btn]:focus,
[class*=btn]:hover {
    --btn--bg-c: rgba(0, 0, 0, .05);
    --btn--bd-c: transparent
}

[class*=btn]:focus:hover {
    --btn--bd-c: rgba(0, 0, 0, .05)
}

[class*=btn]:active {
    --btn--bg-c: #F9F9F9;
    --btn--bd-c: rgba(0, 0, 0, .15) transparent transparent;
    --btn--c: #003280
}

[class*=btn]:active:hover {
    --btn--bd-c: rgba(0, 0, 0, .15)
}

[aria-disabled=true][class*=btn],
[aria-disabled=true][class*=btn]:active,
[aria-disabled=true][class*=btn]:hover,
[class*=btn]:disabled,
[class*=btn]:disabled:active,
[class*=btn]:disabled:hover {
    --btn--bg-c: #F2F2F2;
    --btn--bd-c: #F2F2F2;
    --btn--c: #515151
}

.primary.ghost[class*=btn] {
    --btn--bg-c: transparent;
    --btn--bd-c: #005AE6;
    --btn--c: #005AE6
}

.primary.ghost[class*=btn]:focus,
.primary.ghost[class*=btn]:hover {
    --btn--bg-c: rgba(0, 90, 230, .1);
    --btn--c: #003280
}

.primary.ghost[class*=btn]:focus:hover {
    --btn--bd-c: #0046b3
}

.primary.ghost[class*=btn]:active {
    --btn--bg-c: rgba(0, 80, 205, .25);
    --btn--bd-c: #003280 #0050cd #0050cd;
    --btn--c: #003280
}

.primary.ghost[class*=btn]:active:hover {
    --btn--bd-c: #003280
}

.primary.ghost[aria-disabled][class*=btn],
.primary.ghost[aria-disabled][class*=btn]:active,
.primary.ghost[aria-disabled][class*=btn]:hover,
.primary.ghost[class*=btn]:disabled,
.primary.ghost[class*=btn]:disabled:active,
.primary.ghost[class*=btn]:disabled:hover {
    --btn--bg-c: transparent;
    --btn--bd-c: #1a74ff;
    --btn--c: #1a74ff
}

.secondary.ghost[class*=btn] {
    --btn--bg-c: transparent;
    --btn--bd-c: #747474;
    --btn--c: #747474
}

.secondary.ghost[class*=btn]:focus,
.secondary.ghost[class*=btn]:hover {
    --btn--bg-c: rgba(116, 116, 116, .1);
    --btn--c: #414141
}

.secondary.ghost[class*=btn]:focus:hover {
    --btn--bd-c: #5b5b5b
}

.secondary.ghost[class*=btn]:active {
    --btn--bg-c: rgba(104, 104, 104, .25);
    --btn--bd-c: #414141 #686868 #686868;
    --btn--c: #414141
}

.secondary.ghost[class*=btn]:active:hover {
    --btn--bd-c: #414141
}

.secondary.ghost[aria-disabled][class*=btn],
.secondary.ghost[aria-disabled][class*=btn]:active,
.secondary.ghost[aria-disabled][class*=btn]:hover,
.secondary.ghost[class*=btn]:disabled,
.secondary.ghost[class*=btn]:disabled:active,
.secondary.ghost[class*=btn]:disabled:hover {
    --btn--bg-c: transparent;
    --btn--bd-c: #8e8e8e;
    --btn--c: #8e8e8e
}

.success.ghost[class*=btn] {
    --btn--bg-c: transparent;
    --btn--bd-c: #158646;
    --btn--c: #158646
}

.success.ghost[class*=btn]:focus,
.success.ghost[class*=btn]:hover {
    --btn--bg-c: rgba(21, 134, 70, .1);
    --btn--c: #072e18
}

.success.ghost[class*=btn]:focus:hover {
    --btn--bd-c: #0e5a2f
}

.success.ghost[class*=btn]:active {
    --btn--bg-c: rgba(18, 112, 58, .25);
    --btn--bd-c: #072e18 #12703a #12703a;
    --btn--c: #072e18
}

.success.ghost[class*=btn]:active:hover {
    --btn--bd-c: #072e18
}

.success.ghost[aria-disabled][class*=btn],
.success.ghost[aria-disabled][class*=btn]:active,
.success.ghost[aria-disabled][class*=btn]:hover,
.success.ghost[class*=btn]:disabled,
.success.ghost[class*=btn]:disabled:active,
.success.ghost[class*=btn]:disabled:hover {
    --btn--bg-c: transparent;
    --btn--bd-c: #1cb25d;
    --btn--c: #1cb25d
}

.info.ghost[class*=btn] {
    --btn--bg-c: transparent;
    --btn--bd-c: #867601;
    --btn--c: #867601
}

.info.ghost[class*=btn]:focus,
.info.ghost[class*=btn]:hover {
    --btn--bg-c: rgba(134, 118, 1, .1);
    --btn--c: #211d00
}

.info.ghost[class*=btn]:focus:hover {
    --btn--bd-c: #544901
}

.info.ghost[class*=btn]:active {
    --btn--bg-c: rgba(109, 96, 1, .25);
    --btn--bd-c: #211d00 #6d6001 #6d6001;
    --btn--c: #211d00
}

.info.ghost[class*=btn]:active:hover {
    --btn--bd-c: #211d00
}

.info.ghost[aria-disabled][class*=btn],
.info.ghost[aria-disabled][class*=btn]:active,
.info.ghost[aria-disabled][class*=btn]:hover,
.info.ghost[class*=btn]:disabled,
.info.ghost[class*=btn]:disabled:active,
.info.ghost[class*=btn]:disabled:hover {
    --btn--bg-c: transparent;
    --btn--bd-c: #b8a202;
    --btn--c: #b8a202
}

.warning.ghost[class*=btn] {
    --btn--bg-c: transparent;
    --btn--bd-c: #b35d00;
    --btn--c: #b35d00
}

.warning.ghost[class*=btn]:focus,
.warning.ghost[class*=btn]:hover {
    --btn--bg-c: rgba(179, 93, 0, .1);
    --btn--c: #4d2800
}

.warning.ghost[class*=btn]:focus:hover {
    --btn--bd-c: #804300
}

.warning.ghost[class*=btn]:active {
    --btn--bg-c: rgba(154, 80, 0, .25);
    --btn--bd-c: #4d2800 #9a5000 #9a5000;
    --btn--c: #4d2800
}

.warning.ghost[class*=btn]:active:hover {
    --btn--bd-c: #4d2800
}

.warning.ghost[aria-disabled][class*=btn],
.warning.ghost[aria-disabled][class*=btn]:active,
.warning.ghost[aria-disabled][class*=btn]:hover,
.warning.ghost[class*=btn]:disabled,
.warning.ghost[class*=btn]:disabled:active,
.warning.ghost[class*=btn]:disabled:hover {
    --btn--bg-c: transparent;
    --btn--bd-c: #e67800;
    --btn--c: #e67800
}

.danger.ghost[class*=btn] {
    --btn--bg-c: transparent;
    --btn--bd-c: #DD1F26;
    --btn--c: #DD1F26
}

.danger.ghost[class*=btn]:focus,
.danger.ghost[class*=btn]:hover {
    --btn--bg-c: rgba(221, 31, 38, .1);
    --btn--c: #841217
}

.danger.ghost[class*=btn]:focus:hover {
    --btn--bd-c: #b0191e
}

.danger.ghost[class*=btn]:active {
    --btn--bg-c: rgba(199, 28, 34, .25);
    --btn--bd-c: #841217 #c71c22 #c71c22;
    --btn--c: #841217
}

.danger.ghost[class*=btn]:active:hover {
    --btn--bd-c: #841217
}

.danger.ghost[aria-disabled][class*=btn],
.danger.ghost[aria-disabled][class*=btn]:active,
.danger.ghost[aria-disabled][class*=btn]:hover,
.danger.ghost[class*=btn]:disabled,
.danger.ghost[class*=btn]:disabled:active,
.danger.ghost[class*=btn]:disabled:hover {
    --btn--bg-c: transparent;
    --btn--bd-c: #e6494f;
    --btn--c: #e6494f
}

.primary.solid[class*=btn] {
    --btn--bg-c: var(--color--primary);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #fff
}

.primary.solid[class*=btn]:focus,
.primary.solid[class*=btn]:hover {
    --btn--bg-c: #1a74ff;
    --btn--c: #000
}

.primary.solid[class*=btn]:focus:hover {
    --btn--bd-c: #0046b3
}

.primary.solid[class*=btn]:active {
    --btn--bg-c: #005AE6;
    --btn--bd-c: #003280 #005AE6 #005AE6;
    --btn--c: #fff
}

.primary.solid[class*=btn]:active:hover {
    --btn--bd-c: #003280
}

.primary.solid[aria-disabled][class*=btn],
.primary.solid[aria-disabled][class*=btn]:active,
.primary.solid[aria-disabled][class*=btn]:hover,
.primary.solid[class*=btn]:disabled,
.primary.solid[class*=btn]:disabled:active,
.primary.solid[class*=btn]:disabled:hover {
    --btn--bg-c: #4d93ff;
    --btn--bd-c: #4d93ff;
    --btn--c: #003280
}

.secondary.solid[class*=btn] {
    --btn--bg-c: var(--color--secondary);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.secondary.solid[class*=btn]:focus,
.secondary.solid[class*=btn]:hover {
    --btn--bg-c: #f7f7f7;
    --btn--c: #000
}

.secondary.solid[class*=btn]:focus:hover {
    --btn--bd-c: #c4c4c4
}

.secondary.solid[class*=btn]:active {
    --btn--bg-c: #DDD;
    --btn--bd-c: #aaa #DDD #DDD;
    --btn--c: #000
}

.secondary.solid[class*=btn]:active:hover {
    --btn--bd-c: #aaa
}

.secondary.solid[aria-disabled][class*=btn],
.secondary.solid[aria-disabled][class*=btn]:active,
.secondary.solid[aria-disabled][class*=btn]:hover,
.secondary.solid[class*=btn]:disabled,
.secondary.solid[class*=btn]:disabled:active,
.secondary.solid[class*=btn]:disabled:hover {
    --btn--bg-c: #fff;
    --btn--bd-c: #fff;
    --btn--c: #aaa
}

.success.solid[class*=btn] {
    --btn--bg-c: var(--color--success);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.success.solid[class*=btn]:focus,
.success.solid[class*=btn]:hover {
    --btn--bg-c: #24dd74;
    --btn--c: #000
}

.success.solid[class*=btn]:focus:hover {
    --btn--bd-c: #158646
}

.success.solid[class*=btn]:active {
    --btn--bg-c: #1CB25D;
    --btn--bd-c: #0e5a2f #1CB25D #1CB25D;
    --btn--c: #000
}

.success.solid[class*=btn]:active:hover {
    --btn--bd-c: #0e5a2f
}

.success.solid[aria-disabled][class*=btn],
.success.solid[aria-disabled][class*=btn]:active,
.success.solid[aria-disabled][class*=btn]:hover,
.success.solid[class*=btn]:disabled,
.success.solid[class*=btn]:disabled:active,
.success.solid[class*=btn]:disabled:hover {
    --btn--bg-c: #50e490;
    --btn--bd-c: #50e490;
    --btn--c: #0e5a2f
}

.info.solid[class*=btn] {
    --btn--bg-c: var(--color--info);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.info.solid[class*=btn]:focus,
.info.solid[class*=btn]:hover {
    --btn--bg-c: #feed74;
    --btn--c: #000
}

.info.solid[class*=btn]:focus:hover {
    --btn--bd-c: #fcdf10
}

.info.solid[class*=btn]:active {
    --btn--bg-c: #FDE642;
    --btn--bd-c: #d7bd02 #FDE642 #FDE642;
    --btn--c: #000
}

.info.solid[class*=btn]:active:hover {
    --btn--bd-c: #d7bd02
}

.info.solid[aria-disabled][class*=btn],
.info.solid[aria-disabled][class*=btn]:active,
.info.solid[aria-disabled][class*=btn]:hover,
.info.solid[class*=btn]:disabled,
.info.solid[class*=btn]:disabled:active,
.info.solid[class*=btn]:disabled:hover {
    --btn--bg-c: #fef3a7;
    --btn--bd-c: #fef3a7;
    --btn--c: #d7bd02
}

.warning.solid[class*=btn] {
    --btn--bg-c: var(--color--warning);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.warning.solid[class*=btn]:focus,
.warning.solid[class*=btn]:hover {
    --btn--bg-c: #ff911a;
    --btn--c: #000
}

.warning.solid[class*=btn]:focus:hover {
    --btn--bd-c: #b35d00
}

.warning.solid[class*=btn]:active {
    --btn--bg-c: #E67800;
    --btn--bd-c: #804300 #E67800 #E67800;
    --btn--c: #000
}

.warning.solid[class*=btn]:active:hover {
    --btn--bd-c: #804300
}

.warning.solid[aria-disabled][class*=btn],
.warning.solid[aria-disabled][class*=btn]:active,
.warning.solid[aria-disabled][class*=btn]:hover,
.warning.solid[class*=btn]:disabled,
.warning.solid[class*=btn]:disabled:active,
.warning.solid[class*=btn]:disabled:hover {
    --btn--bg-c: #ffaa4d;
    --btn--bd-c: #ffaa4d;
    --btn--c: #804300
}

.danger.solid[class*=btn] {
    --btn--bg-c: var(--color--danger);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #fff
}

.danger.solid[class*=btn]:focus,
.danger.solid[class*=btn]:hover {
    --btn--bg-c: #e6494f;
    --btn--c: #000
}

.danger.solid[class*=btn]:focus:hover {
    --btn--bd-c: #b0191e
}

.danger.solid[class*=btn]:active {
    --btn--bg-c: #DD1F26;
    --btn--bd-c: #841217 #DD1F26 #DD1F26;
    --btn--c: #fff
}

.danger.solid[class*=btn]:active:hover {
    --btn--bd-c: #841217
}

.danger.solid[aria-disabled][class*=btn],
.danger.solid[aria-disabled][class*=btn]:active,
.danger.solid[aria-disabled][class*=btn]:hover,
.danger.solid[class*=btn]:disabled,
.danger.solid[class*=btn]:disabled:active,
.danger.solid[class*=btn]:disabled:hover {
    --btn--bg-c: #ec767b;
    --btn--bd-c: #ec767b;
    --btn--c: #841217
}

.capsule [class*=btn],
.capsule[class*=btn] {
    --control__box--shape: var(--control__box--shape--capsule)
}

.round [class*=btn],
.round[class*=btn] {
    --control__box--shape: var(--control__box--shape--round)
}

.square [class*=btn],
.square[class*=btn] {
    --control__box--shape: var(--control__box--shape--square)
}

.xs [class*=btn],
.xs[class*=btn] {
    --control__box--size: var(--control__box--size--xs)
}

.sm [class*=btn],
.sm[class*=btn] {
    --control__box--size: var(--control__box--size--sm)
}

.md [class*=btn],
.md[class*=btn] {
    --control__box--size: var(--control__box--size--md)
}

.lg [class*=btn],
.lg[class*=btn] {
    --control__box--size: var(--control__box--size--lg)
}

[class*=btn]:disabled {
    cursor: not-allowed;
    opacity: .75
}

.block[class*=btn] {
    width: 100%
}

.elevated[class*=btn] {
    box-shadow: 0 1px 2px var(--box-shadow--color), 0 2px 4px var(--box-shadow--color)
}

.elevated[class*=btn]:focus,
.elevated[class*=btn]:hover {
    box-shadow: 0 3px 6px var(--box-shadow--color), 0 6px 12px var(--box-shadow--color)
}

.elevated[class*=btn]:active {
    box-shadow: 0 4px 8px var(--box-shadow--color), 0 8px 16px var(--box-shadow--color)
}

[class*=btn-icn] {
    padding: calc((1em / 2) - .0625rem)
}

[class*=btn-icn] > img,
[class*=btn-icn] > svg {
    display: inline-block;
    height: 1em;
    margin: 0 auto -.125em;
    width: 1em
}

[dir=ltr] .v[class*=btn-icn-txt] > img,
[dir=ltr] .v[class*=btn-icn-txt] > span,
[dir=ltr] .v[class*=btn-icn-txt] > svg,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.rng > img,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.rng > span,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.rng > svg,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.sel-mul > img,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.sel-mul > span,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.sel-mul > svg,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.sel > img,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.sel > span,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.sel > svg,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.txt > img,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.txt > span,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.txt > svg,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.txta > img,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.txta > span,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.txta > svg,
[dir=rtl] .v[class*=btn-icn-txt] > img,
[dir=rtl] .v[class*=btn-icn-txt] > span,
[dir=rtl] .v[class*=btn-icn-txt] > svg,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.rng > img,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.rng > span,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.rng > svg,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.sel-mul > img,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.sel-mul > span,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.sel-mul > svg,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.sel > img,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.sel > span,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.sel > svg,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.txt > img,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.txt > span,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.txt > svg,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.txta > img,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.txta > span,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.txta > svg,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.rng > img,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.rng > span,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.rng > svg,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.sel-mul > img,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.sel-mul > span,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.sel-mul > svg,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.sel > img,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.sel > span,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.sel > svg,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.txt > img,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.txt > span,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.txt > svg,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.txta > img,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.txta > span,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.txta > svg,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.rng > img,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.rng > span,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.rng > svg,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.sel-mul > img,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.sel-mul > span,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.sel-mul > svg,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.sel > img,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.sel > span,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.sel > svg,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.txt > img,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.txt > span,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.txt > svg,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.txta > img,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.txta > span,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.txta > svg {
    margin: 0 auto
}

.v[class*=btn-icn-txt],
form.v [class*=btn-icn-txt].ctrl.rng,
form.v [class*=btn-icn-txt].ctrl.sel,
form.v [class*=btn-icn-txt].ctrl.sel-mul,
form.v [class*=btn-icn-txt].ctrl.txt,
form.v [class*=btn-icn-txt].ctrl.txta {
    height: auto
}

.v[class*=btn-icn-txt] > img,
.v[class*=btn-icn-txt] > svg,
form.v [class*=btn-icn-txt].ctrl.rng > img,
form.v [class*=btn-icn-txt].ctrl.rng > svg,
form.v [class*=btn-icn-txt].ctrl.sel-mul > img,
form.v [class*=btn-icn-txt].ctrl.sel-mul > svg,
form.v [class*=btn-icn-txt].ctrl.sel > img,
form.v [class*=btn-icn-txt].ctrl.sel > svg,
form.v [class*=btn-icn-txt].ctrl.txt > img,
form.v [class*=btn-icn-txt].ctrl.txt > svg,
form.v [class*=btn-icn-txt].ctrl.txta > img,
form.v [class*=btn-icn-txt].ctrl.txta > svg {
    display: block;
    height: 1.125em;
    width: 1.125em
}

.v[class*=btn-icn-txt] > span,
form.v [class*=btn-icn-txt].ctrl.rng > span,
form.v [class*=btn-icn-txt].ctrl.sel-mul > span,
form.v [class*=btn-icn-txt].ctrl.sel > span,
form.v [class*=btn-icn-txt].ctrl.txt > span,
form.v [class*=btn-icn-txt].ctrl.txta > span {
    display: block
}

[dir=ltr] .v[class*=btn-icn-txt] > img + span,
[dir=ltr] .v[class*=btn-icn-txt] > span + img,
[dir=ltr] .v[class*=btn-icn-txt] > span + svg,
[dir=ltr] .v[class*=btn-icn-txt] > svg + span,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.rng > img + span,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.rng > span + img,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.rng > span + svg,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.rng > svg + span,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.sel-mul > img + span,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.sel-mul > span + img,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.sel-mul > span + svg,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.sel-mul > svg + span,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.sel > img + span,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.sel > span + img,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.sel > span + svg,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.sel > svg + span,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.txt > img + span,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.txt > span + img,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.txt > span + svg,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.txt > svg + span,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.txta > img + span,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.txta > span + img,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.txta > span + svg,
[dir=ltr] form.v [class*=btn-icn-txt].ctrl.txta > svg + span,
[dir=rtl] .v[class*=btn-icn-txt] > img + span,
[dir=rtl] .v[class*=btn-icn-txt] > span + img,
[dir=rtl] .v[class*=btn-icn-txt] > span + svg,
[dir=rtl] .v[class*=btn-icn-txt] > svg + span,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.rng > img + span,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.rng > span + img,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.rng > span + svg,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.rng > svg + span,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.sel-mul > img + span,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.sel-mul > span + img,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.sel-mul > span + svg,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.sel-mul > svg + span,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.sel > img + span,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.sel > span + img,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.sel > span + svg,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.sel > svg + span,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.txt > img + span,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.txt > span + img,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.txt > span + svg,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.txt > svg + span,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.txta > img + span,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.txta > span + img,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.txta > span + svg,
[dir=rtl] form.v [class*=btn-icn-txt].ctrl.txta > svg + span,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.rng > img + span,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.rng > span + img,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.rng > span + svg,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.rng > svg + span,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.sel-mul > img + span,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.sel-mul > span + img,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.sel-mul > span + svg,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.sel-mul > svg + span,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.sel > img + span,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.sel > span + img,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.sel > span + svg,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.sel > svg + span,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.txt > img + span,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.txt > span + img,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.txt > span + svg,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.txt > svg + span,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.txta > img + span,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.txta > span + img,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.txta > span + svg,
form.v [dir=ltr] [class*=btn-icn-txt].ctrl.txta > svg + span,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.rng > img + span,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.rng > span + img,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.rng > span + svg,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.rng > svg + span,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.sel-mul > img + span,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.sel-mul > span + img,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.sel-mul > span + svg,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.sel-mul > svg + span,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.sel > img + span,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.sel > span + img,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.sel > span + svg,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.sel > svg + span,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.txt > img + span,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.txt > span + img,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.txt > span + svg,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.txt > svg + span,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.txta > img + span,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.txta > span + img,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.txta > span + svg,
form.v [dir=rtl] [class*=btn-icn-txt].ctrl.txta > svg + span {
    margin: .25em auto 0
}

[class*=btn-icn-txt] > img,
[class*=btn-icn-txt] > svg {
    height: 1em;
    width: 1em
}

.block[class*=lbl-btn],
.block[class*=lbl-btn] > span,
.chk.block {
    width: 100%
}

[dir=ltr] [class*=btn-icn-txt] > img + span,
[dir=ltr] [class*=btn-icn-txt] > span + img,
[dir=ltr] [class*=btn-icn-txt] > span + svg,
[dir=ltr] [class*=btn-icn-txt] > svg + span {
    margin-left: .25em
}

[dir=rtl] [class*=btn-icn-txt] > img + span,
[dir=rtl] [class*=btn-icn-txt] > span + img,
[dir=rtl] [class*=btn-icn-txt] > span + svg,
[dir=rtl] [class*=btn-icn-txt] > svg + span {
    margin-right: .25em
}

button[class*=btn]:not([type=button]):not([type=reset]):not([type=submit]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

button[class*=btn]:not([type=button]):not([type=reset]):not([type=submit])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This <button> tag must have a type="" attribute. Use button, reset OR submit. Example: <button type="button">, <button type="reset"> OR <button type="submit">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

a[class*=btn] {
    text-align: center;
    text-decoration: none
}

a[class*=btn][aria-disabled=true] {
    cursor: not-allowed;
    opacity: .75;
    pointer-events: none
}

a[class*=btn][aria-disabled=true]:not([tabindex="-1"]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

a[class*=btn][aria-disabled=true]:not([tabindex="-1"])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This <a class="btn" role="button" aria-disabled="true"> tag must have a tabindex="-1" attribute not to receive focus. Example: <a class="btn" role="button" aria-disabled="true" tabindex="-1">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

[class*=btn-icn] > img:not([aria-hidden=true]),
[class*=btn-icn] > svg:not([aria-hidden=true]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

[class*=btn-icn] > img:not([aria-hidden=true])::before,
[class*=btn-icn] > svg:not([aria-hidden=true])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This <img> OR <svg> tag must have aria-hidden="true". Example: <img aria-hidden="true"> OR <svg aria-hidden="true">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.chk {
    color: var(--txt--c);
    cursor: pointer;
    font-size: var(--control__box--size)
}

.chk:not([for])::before,
.chk > input:not([id]) + span::before,
.chk > input:not([type=checkbox]):not([type=radio]) + span::before {
    color: #fff;
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.chk:not([for]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.chk:not([for])::before {
    background-color: red;
    display: inline-block;
    content: 'This <label class="chk"> tag must have a non-empty for="" attribute. It must point at the child <input> ID. Example: <label class="chk" for="[ child input ID ]">.'
}

.chk > input:disabled + span,
.chk > input:disabled:active + span {
    cursor: not-allowed;
    opacity: .75;
    outline: 0
}

.chk > input + span {
    cursor: pointer
}

.chk.xs,
.xs .chk {
    --control__box--size: var(--control__box--size--xs)
}

.chk.sm,
.sm .chk {
    --control__box--size: var(--control__box--size--sm)
}

.chk.md,
.md .chk {
    --control__box--size: var(--control__box--size--md)
}

.chk.lg,
.lg .chk {
    --control__box--size: var(--control__box--size--lg)
}

.chk.block {
    display: inline-block
}

.chk.block > input + span {
    display: block
}

.chk > input:not([type=checkbox]):not([type=radio]) + span {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.chk > input:not([type=checkbox]):not([type=radio]) + span::before {
    background-color: red;
    display: inline-block;
    content: 'This <input> tag must be of type="checkbox", OR of type="radio". Example: <input type="checkbox"> OR <input type="radio">.'
}

.chk > input:not([id]) + span {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.chk > input:not([id]) + span::before {
    background-color: red;
    display: inline-block;
    content: 'This <input> tag must have a non-empty id="" attribute. Remember, the parent <label class="chk"> for="" attribute must be this <input> ID. Example: <input id="[ some ID ]">.'
}

.chk > span {
    display: inline
}

[dir=ltr] .chk > span {
    background-position: center left;
    padding-left: 1.5em
}

[dir=rtl] .chk > span {
    background-position: center right;
    padding-right: 1.5em
}

.chk [type=checkbox] + span,
.chk [type=checkbox]:disabled:hover + span {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(153,153,153)"%3E%3Cpath d="M28 4v24H4V4h24m0-4H4C1.79 0 0 1.79 0 4v24c0 2.21 1.79 4 4 4h24c2.21 0 4-1.79 4-4V4c0-2.21-1.79-4-4-4z"/%3E%3C/svg%3E'), url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(255,255,255)"%3E%3Cpath d="M28,4v24H4V4H28"/%3E%3C/svg%3E')
}

.chk [type=checkbox]:focus + span,
.chk [type=checkbox]:hover + span {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(51,51,51)"%3E%3Cpath d="M28 4v24H4V4h24m0-4H4C1.79 0 0 1.79 0 4v24c0 2.21 1.79 4 4 4h24c2.21 0 4-1.79 4-4V4c0-2.21-1.79-4-4-4z"/%3E%3C/svg%3E'), url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(255,255,255)"%3E%3Cpath d="M28,4v24H4V4H28"/%3E%3C/svg%3E')
}

.chk [type=checkbox]:checked + span,
.chk [type=checkbox]:checked:disabled:hover + span {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(0,0,0)"%3E%3Cpath d="M6.586 17.414c-.78-.78-.78-2.047 0-2.828.78-.78 2.048-.78 2.828 0L13 18.172l9.586-9.586c.78-.78 2.047-.78 2.828 0 .78.78.78 2.047 0 2.828l-11 11c-.78.78-2.047.78-2.828 0l-5-5z"/%3E%3C/svg%3E'), url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(153,153,153)"%3E%3Cpath d="M28 4v24H4V4h24m0-4H4C1.79 0 0 1.79 0 4v24c0 2.21 1.79 4 4 4h24c2.21 0 4-1.79 4-4V4c0-2.21-1.79-4-4-4z"/%3E%3C/svg%3E'), url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(255,255,255)"%3E%3Cpath d="M28,4v24H4V4H28"/%3E%3C/svg%3E')
}

.chk [type=checkbox]:checked:focus + span,
.chk [type=checkbox]:checked:hover + span {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(0,0,0)"%3E%3Cpath d="M6.586 17.414c-.78-.78-.78-2.047 0-2.828.78-.78 2.048-.78 2.828 0L13 18.172l9.586-9.586c.78-.78 2.047-.78 2.828 0 .78.78.78 2.047 0 2.828l-11 11c-.78.78-2.047.78-2.828 0l-5-5z"/%3E%3C/svg%3E'), url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(51,51,51)"%3E%3Cpath d="M28 4v24H4V4h24m0-4H4C1.79 0 0 1.79 0 4v24c0 2.21 1.79 4 4 4h24c2.21 0 4-1.79 4-4V4c0-2.21-1.79-4-4-4z"/%3E%3C/svg%3E'), url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(255,255,255)"%3E%3Cpath d="M28,4v24H4V4H28"/%3E%3C/svg%3E')
}

.chk [type=checkbox]:active + span,
.chk [type=checkbox]:checked:active + span {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(170,170,170)"%3E%3Cpath d="M6.586 17.414c-.78-.78-.78-2.047 0-2.828.78-.78 2.048-.78 2.828 0L13 18.172l9.586-9.586c.78-.78 2.047-.78 2.828 0 .78.78.78 2.047 0 2.828l-11 11c-.78.78-2.047.78-2.828 0l-5-5z"/%3E%3C/svg%3E'), url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(51,51,51)"%3E%3Cpath d="M28 4v24H4V4h24m0-4H4C1.79 0 0 1.79 0 4v24c0 2.21 1.79 4 4 4h24c2.21 0 4-1.79 4-4V4c0-2.21-1.79-4-4-4z"/%3E%3C/svg%3E'), url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(255,255,255)"%3E%3Cpath d="M28,4v24H4V4H28"/%3E%3C/svg%3E')
}

.chk [type=radio] + span,
.chk [type=radio]:disabled:hover + span {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(153,153,153)"%3E%3Cpath d="M16 4c6.627 0 12 5.373 12 12s-5.373 12-12 12S4 22.627 4 16 9.373 4 16 4m0-4C7.178 0 0 7.178 0 16s7.178 16 16 16 16-7.178 16-16S24.822 0 16 0z"/%3E%3C/svg%3E'), url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(255,255,255)"%3E%3Cpath d="M16,4c6.627,0,12,5.373,12,12s-5.373,12-12,12S4,22.627,4,16S9.373,4,16,4"/%3E%3C/svg%3E')
}

.chk [type=radio]:focus + span,
.chk [type=radio]:hover + span {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(51,51,51)"%3E%3Cpath d="M16 4c6.627 0 12 5.373 12 12s-5.373 12-12 12S4 22.627 4 16 9.373 4 16 4m0-4C7.178 0 0 7.178 0 16s7.178 16 16 16 16-7.178 16-16S24.822 0 16 0z"/%3E%3C/svg%3E'), url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(255,255,255)"%3E%3Cpath d="M16,4c6.627,0,12,5.373,12,12s-5.373,12-12,12S4,22.627,4,16S9.373,4,16,4"/%3E%3C/svg%3E')
}

.chk [type=radio]:checked + span,
.chk [type=radio]:checked:disabled:hover + span {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(0,0,0)"%3E%3Ccircle cx="16" cy="16" r="6"/%3E%3C/svg%3E'), url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(153,153,153)"%3E%3Cpath d="M16 4c6.627 0 12 5.373 12 12s-5.373 12-12 12S4 22.627 4 16 9.373 4 16 4m0-4C7.178 0 0 7.178 0 16s7.178 16 16 16 16-7.178 16-16S24.822 0 16 0z"/%3E%3C/svg%3E'), url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(255,255,255)"%3E%3Cpath d="M16,4c6.627,0,12,5.373,12,12s-5.373,12-12,12S4,22.627,4,16S9.373,4,16,4"/%3E%3C/svg%3E')
}

.chk [type=radio]:checked:focus + span,
.chk [type=radio]:checked:hover + span {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(0,0,0)"%3E%3Ccircle cx="16" cy="16" r="6"/%3E%3C/svg%3E'), url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(51,51,51)"%3E%3Cpath d="M16 4c6.627 0 12 5.373 12 12s-5.373 12-12 12S4 22.627 4 16 9.373 4 16 4m0-4C7.178 0 0 7.178 0 16s7.178 16 16 16 16-7.178 16-16S24.822 0 16 0z"/%3E%3C/svg%3E'), url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(255,255,255)"%3E%3Cpath d="M16,4c6.627,0,12,5.373,12,12s-5.373,12-12,12S4,22.627,4,16S9.373,4,16,4"/%3E%3C/svg%3E')
}

.chk [type=radio]:active + span,
.chk [type=radio]:checked:active + span {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(170,170,170)"%3E%3Ccircle cx="16" cy="16" r="6"/%3E%3C/svg%3E'), url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(51,51,51)"%3E%3Cpath d="M16 4c6.627 0 12 5.373 12 12s-5.373 12-12 12S4 22.627 4 16 9.373 4 16 4m0-4C7.178 0 0 7.178 0 16s7.178 16 16 16 16-7.178 16-16S24.822 0 16 0z"/%3E%3C/svg%3E'), url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(255,255,255)"%3E%3Cpath d="M16,4c6.627,0,12,5.373,12,12s-5.373,12-12,12S4,22.627,4,16S9.373,4,16,4"/%3E%3C/svg%3E')
}

[class*=lbl-btn] {
    background-color: transparent;
    border: 0;
    border-radius: var(--control__box--shape);
    display: inline-block;
    padding: 0
}

[class*=lbl-btn] > input:disabled + span,
[class*=lbl-btn] > input:disabled:active + span {
    cursor: not-allowed;
    opacity: .75;
    outline: 0
}

[class*=lbl-btn] > input + span {
    cursor: pointer
}

[class*=lbl-btn] > input:focus + span,
[class*=lbl-btn] > input:hover + span {
    --btn--bg-c: rgba(0, 0, 0, .05);
    --btn--bd-c: transparent
}

[class*=lbl-btn] > input:focus:hover + span {
    --btn--bd-c: rgba(0, 0, 0, .05)
}

[class*=lbl-btn] > input:active + span,
[class*=lbl-btn] > input:checked + span,
[class*=lbl-btn] > input[checked] + span {
    --btn--bg-c: #F9F9F9;
    --btn--bd-c: rgba(0, 0, 0, .15) transparent transparent;
    --btn--c: #003280
}

[class*=lbl-btn] > input:active:hover + span,
[class*=lbl-btn] > input:checked:hover + span,
[class*=lbl-btn] > input[checked]:hover + span {
    --btn--bd-c: rgba(0, 0, 0, .15)
}

[class*=lbl-btn] > input:disabled + span,
[class*=lbl-btn] > input:disabled:active + span,
[class*=lbl-btn] > input:disabled:hover + span {
    --btn--bg-c: #F2F2F2;
    --btn--bd-c: #F2F2F2;
    --btn--c: #515151
}

.elevated[class*=lbl-btn],
.elevated[class*=lbl-btn]:hover {
    box-shadow: none
}

.elevated[class*=lbl-btn] > input + span {
    box-shadow: 0 1px 2px var(--box-shadow--color), 0 2px 4px var(--box-shadow--color)
}

.elevated[class*=lbl-btn] > input:focus + span,
.elevated[class*=lbl-btn] > input:hover + span {
    box-shadow: 0 3px 6px var(--box-shadow--color), 0 6px 12px var(--box-shadow--color)
}

.elevated[class*=lbl-btn] > input:active + span {
    box-shadow: 0 4px 8px var(--box-shadow--color), 0 8px 16px var(--box-shadow--color)
}

.primary.ghost[class*=lbl-btn] > input + span {
    --btn--bg-c: transparent;
    --btn--bd-c: #005AE6;
    --btn--c: #005AE6
}

.primary.ghost[class*=lbl-btn] > input:focus + span,
.primary.ghost[class*=lbl-btn] > input:hover + span {
    --btn--bg-c: rgba(0, 90, 230, .1);
    --btn--c: #003280;
    cursor: pointer
}

.primary.ghost[class*=lbl-btn] > input:focus:hover + span {
    --btn--bd-c: #0046b3
}

.primary.ghost[class*=lbl-btn] > input:active + span,
.primary.ghost[class*=lbl-btn] > input[checked] + span {
    --btn--bg-c: rgba(0, 80, 205, .25);
    --btn--bd-c: #003280 #0050cd #0050cd;
    --btn--c: #003280
}

.primary.ghost[class*=lbl-btn] > input:active:hover + span,
.primary.ghost[class*=lbl-btn] > input[checked]:hover + span {
    --btn--bd-c: #003280;
    cursor: pointer
}

.primary.ghost[class*=lbl-btn] > input:disabled + span,
.primary.ghost[class*=lbl-btn] > input:disabled:active + span {
    --btn--bg-c: transparent;
    --btn--bd-c: #1a74ff;
    --btn--c: #1a74ff;
    cursor: not-allowed
}

.secondary.ghost[class*=lbl-btn] > input + span {
    --btn--bg-c: transparent;
    --btn--bd-c: #747474;
    --btn--c: #747474
}

.secondary.ghost[class*=lbl-btn] > input:focus + span,
.secondary.ghost[class*=lbl-btn] > input:hover + span {
    --btn--bg-c: rgba(116, 116, 116, .1);
    --btn--c: #414141;
    cursor: pointer
}

.secondary.ghost[class*=lbl-btn] > input:focus:hover + span {
    --btn--bd-c: #5b5b5b
}

.secondary.ghost[class*=lbl-btn] > input:active + span,
.secondary.ghost[class*=lbl-btn] > input[checked] + span {
    --btn--bg-c: rgba(104, 104, 104, .25);
    --btn--bd-c: #414141 #686868 #686868;
    --btn--c: #414141
}

.secondary.ghost[class*=lbl-btn] > input:active:hover + span,
.secondary.ghost[class*=lbl-btn] > input[checked]:hover + span {
    --btn--bd-c: #414141;
    cursor: pointer
}

.secondary.ghost[class*=lbl-btn] > input:disabled + span,
.secondary.ghost[class*=lbl-btn] > input:disabled:active + span {
    --btn--bg-c: transparent;
    --btn--bd-c: #8e8e8e;
    --btn--c: #8e8e8e;
    cursor: not-allowed
}

.success.ghost[class*=lbl-btn] > input + span {
    --btn--bg-c: transparent;
    --btn--bd-c: #158646;
    --btn--c: #158646
}

.success.ghost[class*=lbl-btn] > input:focus + span,
.success.ghost[class*=lbl-btn] > input:hover + span {
    --btn--bg-c: rgba(21, 134, 70, .1);
    --btn--c: #072e18;
    cursor: pointer
}

.success.ghost[class*=lbl-btn] > input:focus:hover + span {
    --btn--bd-c: #0e5a2f
}

.success.ghost[class*=lbl-btn] > input:active + span,
.success.ghost[class*=lbl-btn] > input[checked] + span {
    --btn--bg-c: rgba(18, 112, 58, .25);
    --btn--bd-c: #072e18 #12703a #12703a;
    --btn--c: #072e18
}

.success.ghost[class*=lbl-btn] > input:active:hover + span,
.success.ghost[class*=lbl-btn] > input[checked]:hover + span {
    --btn--bd-c: #072e18;
    cursor: pointer
}

.success.ghost[class*=lbl-btn] > input:disabled + span,
.success.ghost[class*=lbl-btn] > input:disabled:active + span {
    --btn--bg-c: transparent;
    --btn--bd-c: #1cb25d;
    --btn--c: #1cb25d;
    cursor: not-allowed
}

.info.ghost[class*=lbl-btn] > input + span {
    --btn--bg-c: transparent;
    --btn--bd-c: #867601;
    --btn--c: #867601
}

.info.ghost[class*=lbl-btn] > input:focus + span,
.info.ghost[class*=lbl-btn] > input:hover + span {
    --btn--bg-c: rgba(134, 118, 1, .1);
    --btn--c: #211d00;
    cursor: pointer
}

.info.ghost[class*=lbl-btn] > input:focus:hover + span {
    --btn--bd-c: #544901
}

.info.ghost[class*=lbl-btn] > input:active + span,
.info.ghost[class*=lbl-btn] > input[checked] + span {
    --btn--bg-c: rgba(109, 96, 1, .25);
    --btn--bd-c: #211d00 #6d6001 #6d6001;
    --btn--c: #211d00
}

.info.ghost[class*=lbl-btn] > input:active:hover + span,
.info.ghost[class*=lbl-btn] > input[checked]:hover + span {
    --btn--bd-c: #211d00;
    cursor: pointer
}

.info.ghost[class*=lbl-btn] > input:disabled + span,
.info.ghost[class*=lbl-btn] > input:disabled:active + span {
    --btn--bg-c: transparent;
    --btn--bd-c: #b8a202;
    --btn--c: #b8a202;
    cursor: not-allowed
}

.warning.ghost[class*=lbl-btn] > input + span {
    --btn--bg-c: transparent;
    --btn--bd-c: #b35d00;
    --btn--c: #b35d00
}

.warning.ghost[class*=lbl-btn] > input:focus + span,
.warning.ghost[class*=lbl-btn] > input:hover + span {
    --btn--bg-c: rgba(179, 93, 0, .1);
    --btn--c: #4d2800;
    cursor: pointer
}

.warning.ghost[class*=lbl-btn] > input:focus:hover + span {
    --btn--bd-c: #804300
}

.warning.ghost[class*=lbl-btn] > input:active + span,
.warning.ghost[class*=lbl-btn] > input[checked] + span {
    --btn--bg-c: rgba(154, 80, 0, .25);
    --btn--bd-c: #4d2800 #9a5000 #9a5000;
    --btn--c: #4d2800
}

.warning.ghost[class*=lbl-btn] > input:active:hover + span,
.warning.ghost[class*=lbl-btn] > input[checked]:hover + span {
    --btn--bd-c: #4d2800;
    cursor: pointer
}

.warning.ghost[class*=lbl-btn] > input:disabled + span,
.warning.ghost[class*=lbl-btn] > input:disabled:active + span {
    --btn--bg-c: transparent;
    --btn--bd-c: #e67800;
    --btn--c: #e67800;
    cursor: not-allowed
}

.danger.ghost[class*=lbl-btn] > input + span {
    --btn--bg-c: transparent;
    --btn--bd-c: #DD1F26;
    --btn--c: #DD1F26
}

.danger.ghost[class*=lbl-btn] > input:focus + span,
.danger.ghost[class*=lbl-btn] > input:hover + span {
    --btn--bg-c: rgba(221, 31, 38, .1);
    --btn--c: #841217;
    cursor: pointer
}

.danger.ghost[class*=lbl-btn] > input:focus:hover + span {
    --btn--bd-c: #b0191e
}

.danger.ghost[class*=lbl-btn] > input:active + span,
.danger.ghost[class*=lbl-btn] > input[checked] + span {
    --btn--bg-c: rgba(199, 28, 34, .25);
    --btn--bd-c: #841217 #c71c22 #c71c22;
    --btn--c: #841217
}

.danger.ghost[class*=lbl-btn] > input:active:hover + span,
.danger.ghost[class*=lbl-btn] > input[checked]:hover + span {
    --btn--bd-c: #841217;
    cursor: pointer
}

.danger.ghost[class*=lbl-btn] > input:disabled + span,
.danger.ghost[class*=lbl-btn] > input:disabled:active + span {
    --btn--bg-c: transparent;
    --btn--bd-c: #e6494f;
    --btn--c: #e6494f;
    cursor: not-allowed
}

.primary.solid[class*=lbl-btn] > input + span {
    --btn--bg-c: var(--color--primary);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #fff
}

.primary.solid[class*=lbl-btn] > input:focus + span,
.primary.solid[class*=lbl-btn] > input:hover + span {
    --btn--bg-c: #1a74ff;
    --btn--c: #000;
    cursor: pointer
}

.primary.solid[class*=lbl-btn] > input:focus:hover + span {
    --btn--bd-c: #0046b3
}

.primary.solid[class*=lbl-btn] > input:active + span,
.primary.solid[class*=lbl-btn] > input[checked] + span {
    --btn--bg-c: #005AE6;
    --btn--bd-c: #003280 #005AE6 #005AE6;
    --btn--c: #fff
}

.primary.solid[class*=lbl-btn] > input:active:hover + span,
.primary.solid[class*=lbl-btn] > input:checked:hover + span,
.primary.solid[class*=lbl-btn] > input[checked]:hover + span {
    --btn--bd-c: #003280;
    cursor: pointer
}

.primary.solid[class*=lbl-btn] > input:disabled + span,
.primary.solid[class*=lbl-btn] > input:disabled:active + span {
    --btn--bg-c: #4d93ff;
    --btn--bd-c: #4d93ff;
    --btn--c: #003280;
    cursor: not-allowed
}

.secondary.solid[class*=lbl-btn] > input + span {
    --btn--bg-c: var(--color--secondary);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.secondary.solid[class*=lbl-btn] > input:focus + span,
.secondary.solid[class*=lbl-btn] > input:hover + span {
    --btn--bg-c: #f7f7f7;
    --btn--c: #000;
    cursor: pointer
}

.secondary.solid[class*=lbl-btn] > input:focus:hover + span {
    --btn--bd-c: #c4c4c4
}

.secondary.solid[class*=lbl-btn] > input:active + span,
.secondary.solid[class*=lbl-btn] > input[checked] + span {
    --btn--bg-c: #DDD;
    --btn--bd-c: #aaa #DDD #DDD;
    --btn--c: #000
}

.secondary.solid[class*=lbl-btn] > input:active:hover + span,
.secondary.solid[class*=lbl-btn] > input:checked:hover + span,
.secondary.solid[class*=lbl-btn] > input[checked]:hover + span {
    --btn--bd-c: #aaa;
    cursor: pointer
}

.secondary.solid[class*=lbl-btn] > input:disabled + span,
.secondary.solid[class*=lbl-btn] > input:disabled:active + span {
    --btn--bg-c: #fff;
    --btn--bd-c: #fff;
    --btn--c: #aaa;
    cursor: not-allowed
}

.success.solid[class*=lbl-btn] > input + span {
    --btn--bg-c: var(--color--success);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.success.solid[class*=lbl-btn] > input:focus + span,
.success.solid[class*=lbl-btn] > input:hover + span {
    --btn--bg-c: #24dd74;
    --btn--c: #000;
    cursor: pointer
}

.success.solid[class*=lbl-btn] > input:focus:hover + span {
    --btn--bd-c: #158646
}

.success.solid[class*=lbl-btn] > input:active + span,
.success.solid[class*=lbl-btn] > input[checked] + span {
    --btn--bg-c: #1CB25D;
    --btn--bd-c: #0e5a2f #1CB25D #1CB25D;
    --btn--c: #000
}

.success.solid[class*=lbl-btn] > input:active:hover + span,
.success.solid[class*=lbl-btn] > input:checked:hover + span,
.success.solid[class*=lbl-btn] > input[checked]:hover + span {
    --btn--bd-c: #0e5a2f;
    cursor: pointer
}

.success.solid[class*=lbl-btn] > input:disabled + span,
.success.solid[class*=lbl-btn] > input:disabled:active + span {
    --btn--bg-c: #50e490;
    --btn--bd-c: #50e490;
    --btn--c: #0e5a2f;
    cursor: not-allowed
}

.info.solid[class*=lbl-btn] > input + span {
    --btn--bg-c: var(--color--info);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.info.solid[class*=lbl-btn] > input:focus + span,
.info.solid[class*=lbl-btn] > input:hover + span {
    --btn--bg-c: #feed74;
    --btn--c: #000;
    cursor: pointer
}

.info.solid[class*=lbl-btn] > input:focus:hover + span {
    --btn--bd-c: #fcdf10
}

.info.solid[class*=lbl-btn] > input:active + span,
.info.solid[class*=lbl-btn] > input[checked] + span {
    --btn--bg-c: #FDE642;
    --btn--bd-c: #d7bd02 #FDE642 #FDE642;
    --btn--c: #000
}

.info.solid[class*=lbl-btn] > input:active:hover + span,
.info.solid[class*=lbl-btn] > input:checked:hover + span,
.info.solid[class*=lbl-btn] > input[checked]:hover + span {
    --btn--bd-c: #d7bd02;
    cursor: pointer
}

.info.solid[class*=lbl-btn] > input:disabled + span,
.info.solid[class*=lbl-btn] > input:disabled:active + span {
    --btn--bg-c: #fef3a7;
    --btn--bd-c: #fef3a7;
    --btn--c: #d7bd02;
    cursor: not-allowed
}

.warning.solid[class*=lbl-btn] > input + span {
    --btn--bg-c: var(--color--warning);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.warning.solid[class*=lbl-btn] > input:focus + span,
.warning.solid[class*=lbl-btn] > input:hover + span {
    --btn--bg-c: #ff911a;
    --btn--c: #000;
    cursor: pointer
}

.warning.solid[class*=lbl-btn] > input:focus:hover + span {
    --btn--bd-c: #b35d00
}

.warning.solid[class*=lbl-btn] > input:active + span,
.warning.solid[class*=lbl-btn] > input[checked] + span {
    --btn--bg-c: #E67800;
    --btn--bd-c: #804300 #E67800 #E67800;
    --btn--c: #000
}

.warning.solid[class*=lbl-btn] > input:active:hover + span,
.warning.solid[class*=lbl-btn] > input:checked:hover + span,
.warning.solid[class*=lbl-btn] > input[checked]:hover + span {
    --btn--bd-c: #804300;
    cursor: pointer
}

.warning.solid[class*=lbl-btn] > input:disabled + span,
.warning.solid[class*=lbl-btn] > input:disabled:active + span {
    --btn--bg-c: #ffaa4d;
    --btn--bd-c: #ffaa4d;
    --btn--c: #804300;
    cursor: not-allowed
}

.danger.solid[class*=lbl-btn] > input + span {
    --btn--bg-c: var(--color--danger);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #fff
}

.danger.solid[class*=lbl-btn] > input:focus + span,
.danger.solid[class*=lbl-btn] > input:hover + span {
    --btn--bg-c: #e6494f;
    --btn--c: #000;
    cursor: pointer
}

.danger.solid[class*=lbl-btn] > input:focus:hover + span {
    --btn--bd-c: #b0191e
}

.danger.solid[class*=lbl-btn] > input:active + span,
.danger.solid[class*=lbl-btn] > input[checked] + span {
    --btn--bg-c: #DD1F26;
    --btn--bd-c: #841217 #DD1F26 #DD1F26;
    --btn--c: #fff
}

.danger.solid[class*=lbl-btn] > input:active:hover + span,
.danger.solid[class*=lbl-btn] > input:checked:hover + span,
.danger.solid[class*=lbl-btn] > input[checked]:hover + span {
    --btn--bd-c: #841217;
    cursor: pointer
}

.danger.solid[class*=lbl-btn] > input:disabled + span,
.danger.solid[class*=lbl-btn] > input:disabled:active + span {
    --btn--bg-c: #ec767b;
    --btn--bd-c: #ec767b;
    --btn--c: #841217;
    cursor: not-allowed
}

.capsule [class*=lbl-btn],
.capsule[class*=lbl-btn] {
    --control__box--shape: var(--control__box--shape--capsule)
}

.round [class*=lbl-btn],
.round[class*=lbl-btn] {
    --control__box--shape: var(--control__box--shape--round)
}

.square [class*=lbl-btn],
.square[class*=lbl-btn] {
    --control__box--shape: var(--control__box--shape--square)
}

.xs [class*=lbl-btn],
.xs[class*=lbl-btn] {
    --control__box--size: var(--control__box--size--xs)
}

.sm [class*=lbl-btn],
.sm[class*=lbl-btn] {
    --control__box--size: var(--control__box--size--sm)
}

.md [class*=lbl-btn],
.md[class*=lbl-btn] {
    --control__box--size: var(--control__box--size--md)
}

.lg [class*=lbl-btn],
.lg[class*=lbl-btn] {
    --control__box--size: var(--control__box--size--lg)
}

[class*=lbl-btn] > span {
    background-color: var(--btn--bg-c);
    border-color: var(--btn--bd-c);
    color: var(--btn--c);
    display: inline-block;
    font-size: var(--control__box--size);
    height: 100%;
    line-height: 1em;
    padding: calc(.5em - .0625rem) calc(1em - .0625rem);
    text-align: center;
    width: 100%
}

[class*=lbl-btn-icn] > span {
    padding: calc((1em / 2) - .0625rem)
}

[class*=lbl-btn-icn] > span > img,
[class*=lbl-btn-icn] > span > svg {
    height: 1em;
    margin: 0 auto -.125em;
    width: 1em
}

.v[class*=lbl-btn-icn-txt],
form.v [class*=lbl-btn-icn-txt].ctrl.rng,
form.v [class*=lbl-btn-icn-txt].ctrl.sel,
form.v [class*=lbl-btn-icn-txt].ctrl.sel-mul,
form.v [class*=lbl-btn-icn-txt].ctrl.txt,
form.v [class*=lbl-btn-icn-txt].ctrl.txta {
    padding: 0
}

.v[class*=lbl-btn-icn-txt] > span > img,
.v[class*=lbl-btn-icn-txt] > span > svg,
form.v [class*=lbl-btn-icn-txt].ctrl.rng > span > img,
form.v [class*=lbl-btn-icn-txt].ctrl.rng > span > svg,
form.v [class*=lbl-btn-icn-txt].ctrl.sel-mul > span > img,
form.v [class*=lbl-btn-icn-txt].ctrl.sel-mul > span > svg,
form.v [class*=lbl-btn-icn-txt].ctrl.sel > span > img,
form.v [class*=lbl-btn-icn-txt].ctrl.sel > span > svg,
form.v [class*=lbl-btn-icn-txt].ctrl.txt > span > img,
form.v [class*=lbl-btn-icn-txt].ctrl.txt > span > svg,
form.v [class*=lbl-btn-icn-txt].ctrl.txta > span > img,
form.v [class*=lbl-btn-icn-txt].ctrl.txta > span > svg {
    display: block;
    height: 1.125em;
    width: 1.125em
}

[dir=ltr] .v[class*=lbl-btn-icn-txt] > span > img,
[dir=ltr] .v[class*=lbl-btn-icn-txt] > span > svg,
[dir=ltr] form.v [class*=lbl-btn-icn-txt].ctrl.rng > span > img,
[dir=ltr] form.v [class*=lbl-btn-icn-txt].ctrl.rng > span > svg,
[dir=ltr] form.v [class*=lbl-btn-icn-txt].ctrl.sel-mul > span > img,
[dir=ltr] form.v [class*=lbl-btn-icn-txt].ctrl.sel-mul > span > svg,
[dir=ltr] form.v [class*=lbl-btn-icn-txt].ctrl.sel > span > img,
[dir=ltr] form.v [class*=lbl-btn-icn-txt].ctrl.sel > span > svg,
[dir=ltr] form.v [class*=lbl-btn-icn-txt].ctrl.txt > span > img,
[dir=ltr] form.v [class*=lbl-btn-icn-txt].ctrl.txt > span > svg,
[dir=ltr] form.v [class*=lbl-btn-icn-txt].ctrl.txta > span > img,
[dir=ltr] form.v [class*=lbl-btn-icn-txt].ctrl.txta > span > svg,
[dir=rtl] .v[class*=lbl-btn-icn-txt] > span > img,
[dir=rtl] .v[class*=lbl-btn-icn-txt] > span > svg,
[dir=rtl] form.v [class*=lbl-btn-icn-txt].ctrl.rng > span > img,
[dir=rtl] form.v [class*=lbl-btn-icn-txt].ctrl.rng > span > svg,
[dir=rtl] form.v [class*=lbl-btn-icn-txt].ctrl.sel-mul > span > img,
[dir=rtl] form.v [class*=lbl-btn-icn-txt].ctrl.sel-mul > span > svg,
[dir=rtl] form.v [class*=lbl-btn-icn-txt].ctrl.sel > span > img,
[dir=rtl] form.v [class*=lbl-btn-icn-txt].ctrl.sel > span > svg,
[dir=rtl] form.v [class*=lbl-btn-icn-txt].ctrl.txt > span > img,
[dir=rtl] form.v [class*=lbl-btn-icn-txt].ctrl.txt > span > svg,
[dir=rtl] form.v [class*=lbl-btn-icn-txt].ctrl.txta > span > img,
[dir=rtl] form.v [class*=lbl-btn-icn-txt].ctrl.txta > span > svg,
form.v [dir=ltr] [class*=lbl-btn-icn-txt].ctrl.rng > span > img,
form.v [dir=ltr] [class*=lbl-btn-icn-txt].ctrl.rng > span > svg,
form.v [dir=ltr] [class*=lbl-btn-icn-txt].ctrl.sel-mul > span > img,
form.v [dir=ltr] [class*=lbl-btn-icn-txt].ctrl.sel-mul > span > svg,
form.v [dir=ltr] [class*=lbl-btn-icn-txt].ctrl.sel > span > img,
form.v [dir=ltr] [class*=lbl-btn-icn-txt].ctrl.sel > span > svg,
form.v [dir=ltr] [class*=lbl-btn-icn-txt].ctrl.txt > span > img,
form.v [dir=ltr] [class*=lbl-btn-icn-txt].ctrl.txt > span > svg,
form.v [dir=ltr] [class*=lbl-btn-icn-txt].ctrl.txta > span > img,
form.v [dir=ltr] [class*=lbl-btn-icn-txt].ctrl.txta > span > svg,
form.v [dir=rtl] [class*=lbl-btn-icn-txt].ctrl.rng > span > img,
form.v [dir=rtl] [class*=lbl-btn-icn-txt].ctrl.rng > span > svg,
form.v [dir=rtl] [class*=lbl-btn-icn-txt].ctrl.sel-mul > span > img,
form.v [dir=rtl] [class*=lbl-btn-icn-txt].ctrl.sel-mul > span > svg,
form.v [dir=rtl] [class*=lbl-btn-icn-txt].ctrl.sel > span > img,
form.v [dir=rtl] [class*=lbl-btn-icn-txt].ctrl.sel > span > svg,
form.v [dir=rtl] [class*=lbl-btn-icn-txt].ctrl.txt > span > img,
form.v [dir=rtl] [class*=lbl-btn-icn-txt].ctrl.txt > span > svg,
form.v [dir=rtl] [class*=lbl-btn-icn-txt].ctrl.txta > span > img,
form.v [dir=rtl] [class*=lbl-btn-icn-txt].ctrl.txta > span > svg {
    margin-bottom: 0;
    margin-left: auto;
    margin-right: auto
}

.v[class*=lbl-btn-icn-txt] > span > span,
form.v [class*=lbl-btn-icn-txt].ctrl.rng > span > span,
form.v [class*=lbl-btn-icn-txt].ctrl.sel-mul > span > span,
form.v [class*=lbl-btn-icn-txt].ctrl.sel > span > span,
form.v [class*=lbl-btn-icn-txt].ctrl.txt > span > span,
form.v [class*=lbl-btn-icn-txt].ctrl.txta > span > span {
    display: block;
    margin: 0 auto
}

.v[class*=lbl-btn-icn-txt] > span > img + span,
.v[class*=lbl-btn-icn-txt] > span > span + img,
.v[class*=lbl-btn-icn-txt] > span > span + svg,
.v[class*=lbl-btn-icn-txt] > span > svg + span,
form.v [class*=lbl-btn-icn-txt].ctrl.rng > span > img + span,
form.v [class*=lbl-btn-icn-txt].ctrl.rng > span > span + img,
form.v [class*=lbl-btn-icn-txt].ctrl.rng > span > span + svg,
form.v [class*=lbl-btn-icn-txt].ctrl.rng > span > svg + span,
form.v [class*=lbl-btn-icn-txt].ctrl.sel-mul > span > img + span,
form.v [class*=lbl-btn-icn-txt].ctrl.sel-mul > span > span + img,
form.v [class*=lbl-btn-icn-txt].ctrl.sel-mul > span > span + svg,
form.v [class*=lbl-btn-icn-txt].ctrl.sel-mul > span > svg + span,
form.v [class*=lbl-btn-icn-txt].ctrl.sel > span > img + span,
form.v [class*=lbl-btn-icn-txt].ctrl.sel > span > span + img,
form.v [class*=lbl-btn-icn-txt].ctrl.sel > span > span + svg,
form.v [class*=lbl-btn-icn-txt].ctrl.sel > span > svg + span,
form.v [class*=lbl-btn-icn-txt].ctrl.txt > span > img + span,
form.v [class*=lbl-btn-icn-txt].ctrl.txt > span > span + img,
form.v [class*=lbl-btn-icn-txt].ctrl.txt > span > span + svg,
form.v [class*=lbl-btn-icn-txt].ctrl.txt > span > svg + span,
form.v [class*=lbl-btn-icn-txt].ctrl.txta > span > img + span,
form.v [class*=lbl-btn-icn-txt].ctrl.txta > span > span + img,
form.v [class*=lbl-btn-icn-txt].ctrl.txta > span > span + svg,
form.v [class*=lbl-btn-icn-txt].ctrl.txta > span > svg + span {
    margin-top: .25em
}

[class*=lbl-btn-icn-txt] > span {
    padding: calc(.5em - .0625rem) calc(1em - .0625rem)
}

[class*=lbl-btn]:not([for])::before,
[class*=lbl-btn] > input:not([id])::before {
    display: inline-block;
    color: #fff;
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

[class*=lbl-btn-icn-txt] > span > img,
[class*=lbl-btn-icn-txt] > span > svg {
    height: 1em;
    width: 1em
}

.block.sel,
.block.sel-mul,
.block.txt,
.block.txta {
    width: 100%
}

[dir=ltr] [class*=lbl-btn-icn-txt] > span > img + span,
[dir=ltr] [class*=lbl-btn-icn-txt] > span > span + img,
[dir=ltr] [class*=lbl-btn-icn-txt] > span > span + svg,
[dir=ltr] [class*=lbl-btn-icn-txt] > span > svg + span {
    margin-left: .25em
}

[dir=rtl] [class*=lbl-btn-icn-txt] > span > img + span,
[dir=rtl] [class*=lbl-btn-icn-txt] > span > span + img,
[dir=rtl] [class*=lbl-btn-icn-txt] > span > span + svg,
[dir=rtl] [class*=lbl-btn-icn-txt] > span > svg + span {
    margin-right: .25em
}

[class*=lbl-btn]:not([for]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

[class*=lbl-btn]:not([for])::before {
    background-color: red;
    content: 'This <label class="lbl-btn"> tag must have a non-empty for="" attribute. It must point at the child <input> ID. Example: <label class="lbl-btn" for="[ child input ID ]">.'
}

[class*=lbl-btn] > input:not([id]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

[class*=lbl-btn] > input:not([id])::before {
    background-color: red;
    content: 'This <input> tag must have a non-empty id="" attribute. Remember, the parent <label class="lbl-btn"> for="" attribute must be this <input> ID. Example: <input id="[ some ID ]">.'
}

[class*=lbl-btn-icn] > span > img:not([aria-hidden=true]),
[class*=lbl-btn-icn] > span > svg:not([aria-hidden=true]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

[class*=lbl-btn-icn] > span > img:not([aria-hidden=true])::before,
[class*=lbl-btn-icn] > span > svg:not([aria-hidden=true])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This <img> OR <svg> tag must have aria-hidden="true". Example: <img aria-hidden="true"> OR <svg aria-hidden="true">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.txt,
.txta {
    border-radius: var(--control__box--shape);
    display: inline-flex
}

.txt > input,
.txta > textarea {
    color: var(--txt--c);
    background-color: var(--txt--bg-c);
    border-color: var(--txt--bd-c);
    box-shadow: var(--txt--sh)
}

.sel-mul > select,
.txt > input,
.txta > textarea {
    border-radius: var(--control__box--shape);
    border-style: solid;
    border-width: var(--control__box--border-width);
    cursor: text
}

.txt {
    align-items: baseline;
    cursor: pointer;
    font-size: var(--control__box--size);
    height: 2em;
    vertical-align: middle
}

.txt:hover {
    --txt--bd-c: rgba(0, 0, 0, .5)
}

.txt > input:focus {
    --txt--bd-c: rgba(0, 0, 0, .5);
    --txt--sh: 0 0 0 transparent inset
}

.disabled.txt,
.txt > input:disabled {
    --txt--bg-c: #ccc;
    --txt--bd-c: #ccc;
    --txt--sh: 0 0 0 transparent inset;
    --txt--c: rgba(0, 0, 0, .75)
}

.txt > input[readonly] {
    --txt--bg-c: #f2f2f2;
    --txt--bd-c: #e6e6e6;
    --txt--c: var(--body--color)
}

.txt > input[readonly]:hover {
    --txt--bd-c: rgba(0, 0, 0, .5);
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset
}

.danger.ghost.txt,
.info.ghost.txt,
.primary.ghost.txt,
.secondary.ghost.txt,
.success.ghost.txt,
.warning.ghost.txt {
    --txt--sh: 0 0 0 transparent inset
}

.primary.ghost.txt {
    --txt--bg-c: transparent;
    --txt--bd-c: transparent transparent var(--color--primary);
    --txt--c: #005AE6
}

.primary.ghost.txt:hover,
.primary.ghost.txt > input:focus {
    --txt--bd-c: #0046b3
}

.primary.ghost.disabled.txt,
.primary.ghost.txt > input:disabled {
    --txt--bg-c: rgba(77, 147, 255, .25);
    --txt--bd-c: rgba(77, 147, 255, .25);
    --txt--c: var(--color--primary)
}

.primary.ghost.txt > input[readonly] {
    --txt--bg-c: rgba(77, 147, 255, .25);
    --txt--bd-c: var(--color--primary);
    --txt--c: #005AE6
}

.primary.ghost.txt > input[readonly]:hover {
    --txt--bd-c: #0046b3
}

.secondary.ghost.txt {
    --txt--bg-c: transparent;
    --txt--bd-c: transparent transparent var(--color--secondary);
    --txt--c: #747474
}

.secondary.ghost.txt:hover,
.secondary.ghost.txt > input:focus {
    --txt--bd-c: #c4c4c4
}

.secondary.ghost.disabled.txt,
.secondary.ghost.txt > input:disabled {
    --txt--bg-c: rgba(255, 255, 255, .25);
    --txt--bd-c: rgba(255, 255, 255, .25);
    --txt--c: var(--color--secondary)
}

.secondary.ghost.txt > input[readonly] {
    --txt--bg-c: rgba(255, 255, 255, .25);
    --txt--bd-c: var(--color--secondary);
    --txt--c: #747474
}

.secondary.ghost.txt > input[readonly]:hover {
    --txt--bd-c: #c4c4c4
}

.success.ghost.txt {
    --txt--bg-c: transparent;
    --txt--bd-c: transparent transparent var(--color--success);
    --txt--c: #158646
}

.success.ghost.txt:hover,
.success.ghost.txt > input:focus {
    --txt--bd-c: #158646
}

.success.ghost.disabled.txt,
.success.ghost.txt > input:disabled {
    --txt--bg-c: rgba(80, 228, 144, .25);
    --txt--bd-c: rgba(80, 228, 144, .25);
    --txt--c: var(--color--success)
}

.success.ghost.txt > input[readonly] {
    --txt--bg-c: rgba(80, 228, 144, .25);
    --txt--bd-c: var(--color--success);
    --txt--c: #158646
}

.success.ghost.txt > input[readonly]:hover {
    --txt--bd-c: #158646
}

.info.ghost.txt {
    --txt--bg-c: transparent;
    --txt--bd-c: transparent transparent var(--color--info);
    --txt--c: #867601
}

.info.ghost.txt:hover,
.info.ghost.txt > input:focus {
    --txt--bd-c: #fcdf10
}

.info.ghost.disabled.txt,
.info.ghost.txt > input:disabled {
    --txt--bg-c: rgba(254, 243, 167, .25);
    --txt--bd-c: rgba(254, 243, 167, .25);
    --txt--c: var(--color--info)
}

.info.ghost.txt > input[readonly] {
    --txt--bg-c: rgba(254, 243, 167, .25);
    --txt--bd-c: var(--color--info);
    --txt--c: #867601
}

.info.ghost.txt > input[readonly]:hover {
    --txt--bd-c: #fcdf10
}

.warning.ghost.txt {
    --txt--bg-c: transparent;
    --txt--bd-c: transparent transparent var(--color--warning);
    --txt--c: #b35d00
}

.warning.ghost.txt:hover,
.warning.ghost.txt > input:focus {
    --txt--bd-c: #b35d00
}

.warning.ghost.disabled.txt,
.warning.ghost.txt > input:disabled {
    --txt--bg-c: rgba(255, 170, 77, .25);
    --txt--bd-c: rgba(255, 170, 77, .25);
    --txt--c: var(--color--warning)
}

.warning.ghost.txt > input[readonly] {
    --txt--bg-c: rgba(255, 170, 77, .25);
    --txt--bd-c: var(--color--warning);
    --txt--c: #b35d00
}

.warning.ghost.txt > input[readonly]:hover {
    --txt--bd-c: #b35d00
}

.danger.ghost.txt {
    --txt--bg-c: transparent;
    --txt--bd-c: transparent transparent var(--color--danger);
    --txt--c: #DD1F26
}

.primary.solid.txt,
.primary.solid.txt:hover {
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset
}

.danger.ghost.txt:hover,
.danger.ghost.txt > input:focus {
    --txt--bd-c: #b0191e
}

.danger.ghost.disabled.txt,
.danger.ghost.txt > input:disabled {
    --txt--bg-c: rgba(236, 118, 123, .25);
    --txt--bd-c: rgba(236, 118, 123, .25);
    --txt--c: var(--color--danger)
}

.danger.ghost.txt > input[readonly] {
    --txt--bg-c: rgba(236, 118, 123, .25);
    --txt--bd-c: var(--color--danger);
    --txt--c: #DD1F26
}

.danger.ghost.txt > input[readonly]:hover {
    --txt--bd-c: #b0191e
}

.primary.solid.txt {
    --txt--bg-c: #fff;
    --txt--bd-c: transparent transparent var(--color--primary);
    --txt--c: #005AE6
}

.primary.solid.txt:hover {
    --txt--bd-c: #0046b3
}

.primary.solid.txt > input:focus {
    --txt--bd-c: #0046b3;
    --txt--sh: 0 0 0 transparent inset
}

.primary.solid.disabled.txt,
.primary.solid.txt > input:disabled {
    --txt--bg-c: #4d93ff;
    --txt--bd-c: #4d93ff;
    --txt--sh: 0 0 0 transparent inset;
    --txt--c: #003280
}

.primary.solid.txt > input[readonly]:hover,
.secondary.solid.txt,
.secondary.solid.txt:hover {
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset
}

.primary.solid.txt > input[readonly] {
    --txt--bg-c: #4d93ff;
    --txt--bd-c: var(--color--primary);
    --txt--c: #005AE6
}

.primary.solid.txt > input[readonly]:hover {
    --txt--bd-c: #0046b3
}

.secondary.solid.txt {
    --txt--bg-c: #fff;
    --txt--bd-c: transparent transparent var(--color--secondary);
    --txt--c: #747474
}

.secondary.solid.txt:hover {
    --txt--bd-c: #c4c4c4
}

.secondary.solid.txt > input:focus {
    --txt--bd-c: #c4c4c4;
    --txt--sh: 0 0 0 transparent inset
}

.secondary.solid.disabled.txt,
.secondary.solid.txt > input:disabled {
    --txt--bg-c: #fff;
    --txt--bd-c: #fff;
    --txt--sh: 0 0 0 transparent inset;
    --txt--c: #aaa
}

.secondary.solid.txt > input[readonly]:hover,
.success.solid.txt,
.success.solid.txt:hover {
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset
}

.secondary.solid.txt > input[readonly] {
    --txt--bg-c: #fff;
    --txt--bd-c: var(--color--secondary);
    --txt--c: #747474
}

.secondary.solid.txt > input[readonly]:hover {
    --txt--bd-c: #c4c4c4
}

.success.solid.txt {
    --txt--bg-c: #fff;
    --txt--bd-c: transparent transparent var(--color--success);
    --txt--c: #158646
}

.success.solid.txt:hover {
    --txt--bd-c: #158646
}

.success.solid.txt > input:focus {
    --txt--bd-c: #158646;
    --txt--sh: 0 0 0 transparent inset
}

.success.solid.disabled.txt,
.success.solid.txt > input:disabled {
    --txt--bg-c: #50e490;
    --txt--bd-c: #50e490;
    --txt--sh: 0 0 0 transparent inset;
    --txt--c: #0e5a2f
}

.info.solid.txt,
.info.solid.txt:hover,
.success.solid.txt > input[readonly]:hover {
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset
}

.success.solid.txt > input[readonly] {
    --txt--bg-c: #50e490;
    --txt--bd-c: var(--color--success);
    --txt--c: #158646
}

.success.solid.txt > input[readonly]:hover {
    --txt--bd-c: #158646
}

.info.solid.txt {
    --txt--bg-c: #fff;
    --txt--bd-c: transparent transparent var(--color--info);
    --txt--c: #867601
}

.info.solid.txt:hover {
    --txt--bd-c: #fcdf10
}

.info.solid.txt > input:focus {
    --txt--bd-c: #fcdf10;
    --txt--sh: 0 0 0 transparent inset
}

.info.solid.disabled.txt,
.info.solid.txt > input:disabled {
    --txt--bg-c: #fef3a7;
    --txt--bd-c: #fef3a7;
    --txt--sh: 0 0 0 transparent inset;
    --txt--c: #d7bd02
}

.info.solid.txt > input[readonly]:hover,
.warning.solid.txt,
.warning.solid.txt:hover {
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset
}

.info.solid.txt > input[readonly] {
    --txt--bg-c: #fef3a7;
    --txt--bd-c: var(--color--info);
    --txt--c: #867601
}

.info.solid.txt > input[readonly]:hover {
    --txt--bd-c: #fcdf10
}

.warning.solid.txt {
    --txt--bg-c: #fff;
    --txt--bd-c: transparent transparent var(--color--warning);
    --txt--c: #b35d00
}

.warning.solid.txt:hover {
    --txt--bd-c: #b35d00
}

.warning.solid.txt > input:focus {
    --txt--bd-c: #b35d00;
    --txt--sh: 0 0 0 transparent inset
}

.warning.solid.disabled.txt,
.warning.solid.txt > input:disabled {
    --txt--bg-c: #ffaa4d;
    --txt--bd-c: #ffaa4d;
    --txt--sh: 0 0 0 transparent inset;
    --txt--c: #804300
}

.danger.solid.txt,
.danger.solid.txt:hover,
.warning.solid.txt > input[readonly]:hover {
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset
}

.warning.solid.txt > input[readonly] {
    --txt--bg-c: #ffaa4d;
    --txt--bd-c: var(--color--warning);
    --txt--c: #b35d00
}

.warning.solid.txt > input[readonly]:hover {
    --txt--bd-c: #b35d00
}

.danger.solid.txt {
    --txt--bg-c: #fff;
    --txt--bd-c: transparent transparent var(--color--danger);
    --txt--c: #DD1F26
}

.danger.solid.txt:hover {
    --txt--bd-c: #b0191e
}

.danger.solid.txt > input:focus {
    --txt--bd-c: #b0191e;
    --txt--sh: 0 0 0 transparent inset
}

.danger.solid.disabled.txt,
.danger.solid.txt > input:disabled {
    --txt--bg-c: #ec767b;
    --txt--bd-c: #ec767b;
    --txt--sh: 0 0 0 transparent inset;
    --txt--c: #841217
}

.danger.solid.txt > input[readonly]:hover,
.txta:hover {
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset
}

.danger.solid.txt > input[readonly] {
    --txt--bg-c: #ec767b;
    --txt--bd-c: var(--color--danger);
    --txt--c: #DD1F26
}

.danger.solid.txt > input[readonly]:hover {
    --txt--bd-c: #b0191e
}

.capsule .txt,
.capsule.txt {
    --control__box--shape: var(--control__box--shape--capsule)
}

.round .txt,
.round.txt {
    --control__box--shape: var(--control__box--shape--round)
}

.square .txt,
.square.txt {
    --control__box--shape: var(--control__box--shape--square)
}

.xs .txt,
.xs.txt {
    --control__box--size: var(--control__box--size--xs)
}

.sm .txt,
.sm.txt {
    --control__box--size: var(--control__box--size--sm)
}

.md .txt,
.md.txt {
    --control__box--size: var(--control__box--size--md)
}

.lg .txt,
.lg.txt {
    --control__box--size: var(--control__box--size--lg)
}

.disabled.txt {
    cursor: not-allowed
}

.disabled.txt > small,
.disabled.txt > span {
    opacity: .75
}

.block.txt > input {
    flex-grow: 1
}

[dir=ltr] .icon--before.txt input {
    background-position: .5em center;
    padding-left: 2em
}

[dir=ltr] .icon--after.txt input,
[dir=rtl] .icon--before.txt input {
    background-position: right .5em center;
    padding-right: 2em
}

[dir=rtl] .icon--after.txt input {
    background-position: .5em center;
    padding-left: 2em
}

.icon--after.txt input[type=email],
.icon--before.txt input[type=email] {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(170,170,170)"%3E%3Cpath d="M31 6H1c-.6 0-1 .4-1 1v18c0 .6.4 1 1 1h30c.6 0 1-.4 1-1V7c0-.6-.4-1-1-1zM16 19L1 7h30L16 19zM1 25V8.3l14.4 11.5c.2.1.4.2.6.2s.4-.1.6-.2L31 8.3V25H1z"/%3E%3C/svg%3E')
}

.icon--after.txt input[type=number],
.icon--before.txt input[type=number] {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(170,170,170)"%3E%3Cpath d="M25 2c.553 0 1 .45 1 1v2c0 .55-.447 1-1 1h-2c-.553 0-1-.45-1-1V3c0-.55.447-1 1-1h2m-8 0c.553 0 1 .45 1 1v2c0 .55-.447 1-1 1h-2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h2M9 2c.55 0 1 .45 1 1v2c0 .55-.45 1-1 1H7c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h2m16 8c.553 0 1 .45 1 1v2c0 .55-.447 1-1 1h-2c-.553 0-1-.45-1-1v-2c0-.55.447-1 1-1h2m-8 0c.553 0 1 .45 1 1v2c0 .55-.447 1-1 1h-2c-.55 0-1-.45-1-1v-2c0-.55.45-1 1-1h2m-8 0c.55 0 1 .45 1 1v2c0 .55-.45 1-1 1H7c-.55 0-1-.45-1-1v-2c0-.55.45-1 1-1h2m16 8c.553 0 1 .448 1 1v2c0 .552-.447 1-1 1h-2c-.553 0-1-.448-1-1v-2c0-.552.447-1 1-1h2m-8 0c.553 0 1 .448 1 1v2c0 .552-.447 1-1 1h-2c-.55 0-1-.448-1-1v-2c0-.552.45-1 1-1h2m-8 0c.55 0 1 .448 1 1v2c0 .552-.45 1-1 1H7c-.55 0-1-.448-1-1v-2c0-.552.45-1 1-1h2m8 8c.553 0 1 .448 1 1v2c0 .552-.447 1-1 1h-2c-.55 0-1-.448-1-1v-2c0-.552.45-1 1-1h2"/%3E%3C/svg%3E')
}

.icon--after.txt input[type=password],
.icon--before.txt input[type=password] {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(170,170,170)"%3E%3Cpath d="M29.8 9c.662 0 1.2.538 1.2 1.2v11.6c0 .665-.538 1.2-1.2 1.2H2.2c-.663 0-1.2-.535-1.2-1.2V10.2C1 9.538 1.537 9 2.2 9h27.6m0-1H2.2C.987 8 0 8.987 0 10.2v11.6C0 23.015.987 24 2.2 24h27.6c1.214 0 2.2-.986 2.2-2.2V10.2c0-1.213-.986-2.2-2.2-2.2z"/%3E%3Cpath d="M10.28 16.316L8 15l2.28-1.316c.24-.138.32-.444.183-.683-.14-.24-.446-.32-.683-.182L7.5 14.133V11.5c0-.276-.224-.5-.5-.5s-.5.224-.5.5v2.634l-2.28-1.317c-.24-.14-.546-.057-.684.183s-.056.545.183.683L6 15l-2.28 1.316c-.24.14-.322.445-.184.684.14.24.446.32.683.183l2.28-1.317V18.5c0 .276.224.5.5.5s.5-.224.5-.5v-2.634l2.28 1.316c.24.14.544.057.683-.183.14-.24.057-.545-.183-.684zM19.28 16.316L17 15l2.28-1.316c.24-.138.32-.444.183-.683-.14-.24-.445-.32-.684-.182l-2.28 1.315V11.5c0-.276-.224-.5-.5-.5s-.5.224-.5.5v2.634l-2.28-1.317c-.24-.14-.545-.057-.684.183-.138.24-.056.545.183.683L15 15l-2.28 1.316c-.24.138-.32.444-.183.684.14.24.446.32.683.183l2.28-1.317V18.5c0 .276.225.5.5.5s.5-.224.5-.5v-2.634l2.28 1.316c.24.14.545.057.684-.183s.056-.545-.184-.684zM28.28 16.316L26 15l2.28-1.316c.24-.138.32-.444.183-.683-.14-.24-.445-.32-.684-.182l-2.28 1.315V11.5c0-.276-.224-.5-.5-.5s-.5.224-.5.5v2.634l-2.28-1.317c-.24-.14-.546-.057-.685.183-.138.24-.056.545.184.683L24 15l-2.28 1.316c-.24.138-.32.444-.184.684.14.24.446.32.683.183l2.28-1.317V18.5c0 .276.224.5.5.5s.5-.224.5-.5v-2.634l2.28 1.316c.24.14.544.057.683-.183s.057-.545-.183-.684z"/%3E%3C/svg%3E')
}

.icon--after.txt input[type=search],
.icon--before.txt input[type=search] {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(170,170,170)"%3E%3Cpath d="M31.12 26.878l-5.982-5.983c-.924-.924-2.3-1.12-3.415-.586l-2.268-2.27c3.605-4.32 3.383-10.76-.676-14.816-4.296-4.296-11.26-4.296-15.557 0s-4.296 11.26 0 15.555c4.057 4.058 10.495 4.282 14.817.68l2.268 2.266c-.53 1.114-.336 2.488.587 3.41l5.984 5.985c1.17 1.172 3.07 1.172 4.24 0 1.173-1.17 1.173-3.07 0-4.242zm-13.757-9.515c-3.514 3.516-9.213 3.516-12.73 0-3.513-3.514-3.513-9.213 0-12.727 3.515-3.515 9.214-3.515 12.73 0 3.516 3.514 3.516 9.214 0 12.727zm13.05 13.05c-.78.78-2.047.78-2.827 0l-5.984-5.983c-.78-.78-.78-2.048 0-2.828s2.048-.78 2.828 0l5.984 5.984c.78.78.78 2.048 0 2.828z"/%3E%3C/svg%3E')
}

.icon--after.txt input[type=tel],
.icon--before.txt input[type=tel] {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(170,170,170)"%3E%3Cpath d="M7 1l6 8-4 4 10 10 4-4 8 6-7 6C10 22 10 22 1 8l6-7m0-1c-.292 0-.57.127-.76.35l-6 7c-.287.334-.32.82-.08 1.19 9.117 14.183 9.117 14.183 23.3 23.3.165.107.352.16.54.16.232 0 .465-.08.65-.24l7-6c.23-.197.354-.488.35-.79-.006-.306-.157-.588-.4-.77l-8-6c-.18-.136-.39-.2-.6-.2-.257 0-.514.1-.707.293L19 21.586 10.414 13l3.293-3.293c.352-.352.392-.91.093-1.307l-6-8C7.618.157 7.336.01 7.033 0H7z"/%3E%3C/svg%3E')
}

.icon--after.txt input[type=url],
.icon--before.txt input[type=url] {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(170,170,170)"%3E%3Cpath d="M1.326 9.62c-3.523 8.103.188 17.528 8.292 21.053 8.103 3.522 17.53-.19 21.054-8.293 3.52-8.103-.19-17.53-8.293-21.053-8.106-3.524-17.53.19-21.054 8.293zm29.39 3.51l-3.528-1.534c.11-2.655-.342-5.04-1.324-6.896 2.532 2.212 4.22 5.198 4.853 8.43zm-.786 8.382l-4.574-1.988c.975-2.348 1.56-4.676 1.77-6.86l3.77 1.64c.268 2.37-.027 4.84-.966 7.208zm-5.022 6.54l-3.77-1.64c1.454-1.643 2.763-3.662 3.817-5.973l4.574 1.99c-1.09 2.3-2.695 4.2-4.622 5.623zm-10.445 2.87c2.027-.55 4.08-1.844 5.945-3.736l3.53 1.535c-2.795 1.742-6.13 2.546-9.475 2.2zm-1.396-6.928l6.34 2.756c-2.888 2.79-6.18 4.068-8.915 3.166l2.575-5.922zm3.19-7.336l7.782 3.383c-1.063 2.315-2.405 4.33-3.892 5.942l-6.688-2.905 2.798-6.42zm3.19-7.337l6.682 2.906c-.167 2.187-.724 4.543-1.692 6.897L16.66 15.74l2.787-6.42zm2.975-6.838c2.523 1.385 3.834 4.666 3.764 8.68l-6.34-2.757 2.576-5.923zM7.09 3.948l3.77 1.64C9.404 7.23 8.097 9.25 7.04 11.56L2.466 9.57c1.092-2.3 2.697-4.2 4.624-5.622zm10.444-2.87c-2.026.55-4.08 1.844-5.944 3.736L8.06 3.28c2.795-1.742 6.128-2.546 9.474-2.2zm1.396 6.927L12.592 5.25c2.885-2.79 6.18-4.067 8.912-3.166l-2.574 5.92zm-3.19 7.337L7.96 11.96c1.06-2.316 2.402-4.33 3.89-5.942l6.68 2.905-2.79 6.42zm-3.19 7.336l-6.682-2.904c.166-2.188.723-4.542 1.69-6.896l7.782 3.383-2.79 6.418zM5.81 20.84l6.338 2.756-2.575 5.922c-2.522-1.385-3.835-4.664-3.763-8.678zM1.28 18.87l3.53 1.534c-.112 2.654.34 5.04 1.322 6.895C3.6 25.087 1.914 22.1 1.28 18.87zm.786-8.383l4.576 1.99c-.97 2.348-1.555 4.68-1.765 6.867l-3.77-1.64c-.274-2.38.02-4.848.96-7.217z"/%3E%3C/svg%3E')
}

.v.txt,
form.v .txt.ctrl {
    align-items: stretch;
    flex-direction: column;
    height: auto
}

.v.txt > span,
form.v .txt.ctrl > span {
    margin: 0 0 .25em
}

[dir=ltr] .v.txt > span,
[dir=ltr] form.v .txt.ctrl > span,
form.v [dir=ltr] .txt.ctrl > span {
    margin-right: 0
}

[dir=rtl] .v.txt > span,
[dir=rtl] form.v .txt.ctrl > span,
form.v [dir=rtl] .txt.ctrl > span {
    margin-left: 0
}

.v.txt > small,
form.v .txt.ctrl > small {
    margin: .25em 0 0
}

[dir=ltr] .v.txt > small,
[dir=ltr] form.v .txt.ctrl > small,
form.v [dir=ltr] .txt.ctrl > small {
    margin-left: 0
}

[dir=ltr] .txt > small,
[dir=rtl] .txt > span {
    margin-left: .5em
}

[dir=rtl] .v.txt > small,
[dir=rtl] form.v .txt.ctrl > small,
form.v [dir=rtl] .txt.ctrl > small {
    margin-right: 0
}

[dir=ltr] .txt > span,
[dir=rtl] .txt > small {
    margin-right: .5em
}

.txt > input {
    font-size: 1em;
    height: 2em
}

[dir=ltr] .txt > input {
    padding: calc(.25em - .0625rem) 0 calc(.25em - .0625rem) calc(.5em - .0625rem)
}

[dir=rtl] .txt > input {
    padding: calc(.25em - .0625rem) calc(.5em - .0625rem) calc(.25em - .0625rem) 0
}

.txt > input[type=number],
.txta > textarea {
    padding: calc(.25em - .0625rem) calc(.5em - .0625rem)
}

.txt > input:disabled,
.txt > input:disabled + small {
    cursor: not-allowed;
    opacity: .75
}

.txt > small {
    color: var(--txt--c);
    font-size: .875em;
    line-height: 1.25em
}

.txta {
    align-items: baseline;
    cursor: pointer;
    font-size: var(--control__box--size);
    vertical-align: top
}

.txta:hover {
    --txt--bd-c: rgba(0, 0, 0, .5)
}

.txta > textarea:focus {
    --txt--bd-c: rgba(0, 0, 0, .5);
    --txt--sh: 0 0 0 transparent inset
}

.disabled.txta,
.txta > textarea:disabled {
    --txt--bg-c: #ccc;
    --txt--bd-c: #ccc;
    --txt--sh: 0 0 0 transparent inset;
    --txt--c: rgba(0, 0, 0, .75)
}

.txta > textarea[readonly] {
    --txt--bg-c: #f2f2f2;
    --txt--bd-c: #e6e6e6;
    --txt--c: var(--body--color)
}

.txta > textarea[readonly]:hover {
    --txt--bd-c: rgba(0, 0, 0, .5);
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset
}

.danger.ghost.txta,
.info.ghost.txta,
.primary.ghost.txta,
.secondary.ghost.txta,
.success.ghost.txta,
.warning.ghost.txta {
    --txt--sh: 0 0 0 transparent inset
}

.primary.ghost.txta {
    --txt--bg-c: transparent;
    --txt--bd-c: transparent transparent var(--color--primary);
    --txt--c: #005AE6
}

.primary.ghost.txta:hover,
.primary.ghost.txta > textarea:focus {
    --txt--bd-c: #0046b3
}

.primary.ghost.disabled.txta,
.primary.ghost.txta > textarea:disabled {
    --txt--bg-c: rgba(77, 147, 255, .25);
    --txt--bd-c: rgba(77, 147, 255, .25);
    --txt--c: var(--color--primary)
}

.primary.ghost.txta > textarea[readonly] {
    --txt--bg-c: rgba(77, 147, 255, .25);
    --txt--bd-c: var(--color--primary);
    --txt--c: #005AE6
}

.primary.ghost.txta > textarea[readonly]:hover {
    --txt--bd-c: #0046b3
}

.secondary.ghost.txta {
    --txt--bg-c: transparent;
    --txt--bd-c: transparent transparent var(--color--secondary);
    --txt--c: #747474
}

.secondary.ghost.txta:hover,
.secondary.ghost.txta > textarea:focus {
    --txt--bd-c: #c4c4c4
}

.secondary.ghost.disabled.txta,
.secondary.ghost.txta > textarea:disabled {
    --txt--bg-c: rgba(255, 255, 255, .25);
    --txt--bd-c: rgba(255, 255, 255, .25);
    --txt--c: var(--color--secondary)
}

.secondary.ghost.txta > textarea[readonly] {
    --txt--bg-c: rgba(255, 255, 255, .25);
    --txt--bd-c: var(--color--secondary);
    --txt--c: #747474
}

.secondary.ghost.txta > textarea[readonly]:hover {
    --txt--bd-c: #c4c4c4
}

.success.ghost.txta {
    --txt--bg-c: transparent;
    --txt--bd-c: transparent transparent var(--color--success);
    --txt--c: #158646
}

.success.ghost.txta:hover,
.success.ghost.txta > textarea:focus {
    --txt--bd-c: #158646
}

.success.ghost.disabled.txta,
.success.ghost.txta > textarea:disabled {
    --txt--bg-c: rgba(80, 228, 144, .25);
    --txt--bd-c: rgba(80, 228, 144, .25);
    --txt--c: var(--color--success)
}

.success.ghost.txta > textarea[readonly] {
    --txt--bg-c: rgba(80, 228, 144, .25);
    --txt--bd-c: var(--color--success);
    --txt--c: #158646
}

.success.ghost.txta > textarea[readonly]:hover {
    --txt--bd-c: #158646
}

.info.ghost.txta {
    --txt--bg-c: transparent;
    --txt--bd-c: transparent transparent var(--color--info);
    --txt--c: #867601
}

.info.ghost.txta:hover,
.info.ghost.txta > textarea:focus {
    --txt--bd-c: #fcdf10
}

.info.ghost.disabled.txta,
.info.ghost.txta > textarea:disabled {
    --txt--bg-c: rgba(254, 243, 167, .25);
    --txt--bd-c: rgba(254, 243, 167, .25);
    --txt--c: var(--color--info)
}

.info.ghost.txta > textarea[readonly] {
    --txt--bg-c: rgba(254, 243, 167, .25);
    --txt--bd-c: var(--color--info);
    --txt--c: #867601
}

.info.ghost.txta > textarea[readonly]:hover {
    --txt--bd-c: #fcdf10
}

.warning.ghost.txta {
    --txt--bg-c: transparent;
    --txt--bd-c: transparent transparent var(--color--warning);
    --txt--c: #b35d00
}

.warning.ghost.txta:hover,
.warning.ghost.txta > textarea:focus {
    --txt--bd-c: #b35d00
}

.warning.ghost.disabled.txta,
.warning.ghost.txta > textarea:disabled {
    --txt--bg-c: rgba(255, 170, 77, .25);
    --txt--bd-c: rgba(255, 170, 77, .25);
    --txt--c: var(--color--warning)
}

.warning.ghost.txta > textarea[readonly] {
    --txt--bg-c: rgba(255, 170, 77, .25);
    --txt--bd-c: var(--color--warning);
    --txt--c: #b35d00
}

.warning.ghost.txta > textarea[readonly]:hover {
    --txt--bd-c: #b35d00
}

.danger.ghost.txta {
    --txt--bg-c: transparent;
    --txt--bd-c: transparent transparent var(--color--danger);
    --txt--c: #DD1F26
}

.primary.solid.txta,
.primary.solid.txta:hover {
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset
}

.danger.ghost.txta:hover,
.danger.ghost.txta > textarea:focus {
    --txt--bd-c: #b0191e
}

.danger.ghost.disabled.txta,
.danger.ghost.txta > textarea:disabled {
    --txt--bg-c: rgba(236, 118, 123, .25);
    --txt--bd-c: rgba(236, 118, 123, .25);
    --txt--c: var(--color--danger)
}

.danger.ghost.txta > textarea[readonly] {
    --txt--bg-c: rgba(236, 118, 123, .25);
    --txt--bd-c: var(--color--danger);
    --txt--c: #DD1F26
}

.danger.ghost.txta > textarea[readonly]:hover {
    --txt--bd-c: #b0191e
}

.primary.solid.txta {
    --txt--bg-c: #fff;
    --txt--bd-c: transparent transparent var(--color--primary);
    --txt--c: #005AE6
}

.primary.solid.txta:hover {
    --txt--bd-c: #0046b3
}

.primary.solid.txta > textarea:focus {
    --txt--bd-c: #0046b3;
    --txt--sh: 0 0 0 transparent inset
}

.primary.solid.disabled.txta,
.primary.solid.txta > textarea:disabled {
    --txt--bg-c: #4d93ff;
    --txt--bd-c: #4d93ff;
    --txt--sh: 0 0 0 transparent inset;
    --txt--c: #003280
}

.primary.solid.txta > textarea[readonly]:hover,
.secondary.solid.txta,
.secondary.solid.txta:hover {
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset
}

.primary.solid.txta > textarea[readonly] {
    --txt--bg-c: #4d93ff;
    --txt--bd-c: var(--color--primary);
    --txt--c: #005AE6
}

.primary.solid.txta > textarea[readonly]:hover {
    --txt--bd-c: #0046b3
}

.secondary.solid.txta {
    --txt--bg-c: #fff;
    --txt--bd-c: transparent transparent var(--color--secondary);
    --txt--c: #747474
}

.secondary.solid.txta:hover {
    --txt--bd-c: #c4c4c4
}

.secondary.solid.txta > textarea:focus {
    --txt--bd-c: #c4c4c4;
    --txt--sh: 0 0 0 transparent inset
}

.secondary.solid.disabled.txta,
.secondary.solid.txta > textarea:disabled {
    --txt--bg-c: #fff;
    --txt--bd-c: #fff;
    --txt--sh: 0 0 0 transparent inset;
    --txt--c: #aaa
}

.secondary.solid.txta > textarea[readonly]:hover,
.success.solid.txta,
.success.solid.txta:hover {
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset
}

.secondary.solid.txta > textarea[readonly] {
    --txt--bg-c: #fff;
    --txt--bd-c: var(--color--secondary);
    --txt--c: #747474
}

.secondary.solid.txta > textarea[readonly]:hover {
    --txt--bd-c: #c4c4c4
}

.success.solid.txta {
    --txt--bg-c: #fff;
    --txt--bd-c: transparent transparent var(--color--success);
    --txt--c: #158646
}

.success.solid.txta:hover {
    --txt--bd-c: #158646
}

.success.solid.txta > textarea:focus {
    --txt--bd-c: #158646;
    --txt--sh: 0 0 0 transparent inset
}

.success.solid.disabled.txta,
.success.solid.txta > textarea:disabled {
    --txt--bg-c: #50e490;
    --txt--bd-c: #50e490;
    --txt--sh: 0 0 0 transparent inset;
    --txt--c: #0e5a2f
}

.info.solid.txta,
.info.solid.txta:hover,
.success.solid.txta > textarea[readonly]:hover {
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset
}

.success.solid.txta > textarea[readonly] {
    --txt--bg-c: #50e490;
    --txt--bd-c: var(--color--success);
    --txt--c: #158646
}

.success.solid.txta > textarea[readonly]:hover {
    --txt--bd-c: #158646
}

.info.solid.txta {
    --txt--bg-c: #fff;
    --txt--bd-c: transparent transparent var(--color--info);
    --txt--c: #867601
}

.info.solid.txta:hover {
    --txt--bd-c: #fcdf10
}

.info.solid.txta > textarea:focus {
    --txt--bd-c: #fcdf10;
    --txt--sh: 0 0 0 transparent inset
}

.info.solid.disabled.txta,
.info.solid.txta > textarea:disabled {
    --txt--bg-c: #fef3a7;
    --txt--bd-c: #fef3a7;
    --txt--sh: 0 0 0 transparent inset;
    --txt--c: #d7bd02
}

.info.solid.txta > textarea[readonly]:hover,
.warning.solid.txta,
.warning.solid.txta:hover {
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset
}

.info.solid.txta > textarea[readonly] {
    --txt--bg-c: #fef3a7;
    --txt--bd-c: var(--color--info);
    --txt--c: #867601
}

.info.solid.txta > textarea[readonly]:hover {
    --txt--bd-c: #fcdf10
}

.warning.solid.txta {
    --txt--bg-c: #fff;
    --txt--bd-c: transparent transparent var(--color--warning);
    --txt--c: #b35d00
}

.warning.solid.txta:hover {
    --txt--bd-c: #b35d00
}

.warning.solid.txta > textarea:focus {
    --txt--bd-c: #b35d00;
    --txt--sh: 0 0 0 transparent inset
}

.warning.solid.disabled.txta,
.warning.solid.txta > textarea:disabled {
    --txt--bg-c: #ffaa4d;
    --txt--bd-c: #ffaa4d;
    --txt--sh: 0 0 0 transparent inset;
    --txt--c: #804300
}

.danger.solid.txta,
.danger.solid.txta:hover,
.warning.solid.txta > textarea[readonly]:hover {
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset
}

.warning.solid.txta > textarea[readonly] {
    --txt--bg-c: #ffaa4d;
    --txt--bd-c: var(--color--warning);
    --txt--c: #b35d00
}

.warning.solid.txta > textarea[readonly]:hover {
    --txt--bd-c: #b35d00
}

.danger.solid.txta {
    --txt--bg-c: #fff;
    --txt--bd-c: transparent transparent var(--color--danger);
    --txt--c: #DD1F26
}

.danger.solid.txta:hover {
    --txt--bd-c: #b0191e
}

.danger.solid.txta > textarea:focus {
    --txt--bd-c: #b0191e;
    --txt--sh: 0 0 0 transparent inset
}

.danger.solid.disabled.txta,
.danger.solid.txta > textarea:disabled {
    --txt--bg-c: #ec767b;
    --txt--bd-c: #ec767b;
    --txt--sh: 0 0 0 transparent inset;
    --txt--c: #841217
}

.danger.solid.txta > textarea[readonly]:hover,
.sel-mul:hover {
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset
}

.danger.solid.txta > textarea[readonly] {
    --txt--bg-c: #ec767b;
    --txt--bd-c: var(--color--danger);
    --txt--c: #DD1F26
}

.danger.solid.txta > textarea[readonly]:hover {
    --txt--bd-c: #b0191e
}

.sel-mul:hover,
.sel-mul > select:focus {
    --txt--bd-c: rgba(0, 0, 0, .5)
}

.capsule .txta,
.capsule.txta {
    --control__box--shape: var(--control__box--shape--capsule)
}

.round .txta,
.round.txta {
    --control__box--shape: var(--control__box--shape--round)
}

.square .txta,
.square.txta {
    --control__box--shape: var(--control__box--shape--square)
}

.xs .txta,
.xs.txta {
    --control__box--size: var(--control__box--size--xs)
}

.sm .txta,
.sm.txta {
    --control__box--size: var(--control__box--size--sm)
}

.md .txta,
.md.txta {
    --control__box--size: var(--control__box--size--md)
}

.lg .txta,
.lg.txta {
    --control__box--size: var(--control__box--size--lg)
}

.disabled.txta {
    cursor: not-allowed
}

.disabled.txta > small,
.disabled.txta > span {
    opacity: .75
}

.block.txta > input {
    flex-grow: 1
}

.v.txta,
form.v .txta.ctrl {
    align-items: stretch;
    flex-direction: column;
    height: auto
}

.v.txta > span,
form.v .txta.ctrl > span {
    margin: 0 0 .25em
}

[dir=ltr] .v.txta > span,
[dir=ltr] form.v .txta.ctrl > span,
form.v [dir=ltr] .txta.ctrl > span {
    margin-right: 0
}

[dir=rtl] .v.txta > span,
[dir=rtl] form.v .txta.ctrl > span,
form.v [dir=rtl] .txta.ctrl > span {
    margin-left: 0
}

.v.txta > small,
form.v .txta.ctrl > small {
    margin: .25em 0 0
}

[dir=ltr] .v.txta > small,
[dir=ltr] form.v .txta.ctrl > small,
form.v [dir=ltr] .txta.ctrl > small {
    margin-left: 0
}

[dir=ltr] .txta > small,
[dir=rtl] .txta > span {
    margin-left: .5em
}

[dir=rtl] .v.txta > small,
[dir=rtl] form.v .txta.ctrl > small,
form.v [dir=rtl] .txta.ctrl > small {
    margin-right: 0
}

[dir=ltr] .txta > span,
[dir=rtl] .txta > small {
    margin-right: .5em
}

.txta > textarea {
    flex-grow: 1;
    font-size: 1em;
    line-height: 1.5em
}

.sel,
.swc {
    align-items: baseline
}

.txt:not([for]),
.txt > input:not([id]),
.txt > small:not([id]),
.txta:not([for]),
.txta > small:not([id]),
.txta > textarea:not([id]) {
    border: .25rem dotted red !important
}

.txta > textarea:disabled,
.txta > textarea:disabled + small {
    cursor: not-allowed;
    opacity: .75
}

.txta > small {
    color: var(--txt--c);
    font-size: .875em;
    line-height: 1.25em
}

.txt:not([for])::before,
.txt > input:not([id])::before,
.txt > small:not([id])::before,
.txta:not([for])::before,
.txta > small:not([id])::before,
.txta > textarea:not([id])::before {
    display: inline-block;
    color: #fff;
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.txt:not([for]) {
    background-color: rgba(255, 0, 0, .1)
}

.txt:not([for])::before {
    background-color: red;
    content: 'This <label class="txt"> tag must have a non-empty for="" attribute. It must point at the child <input> ID. Example: <label class="txt" for="[ child input ID ]">.'
}

.txt > input:not([id]) {
    background-color: rgba(255, 0, 0, .1)
}

.txt > input:not([id])::before {
    background-color: red;
    content: 'This <input> tag must have a non-empty id="" attribute. Remember, the parent <label> for="" attribute must be this <input> ID. Example: <input id="[ some ID ]">.'
}

.txt > small:not([id]) {
    background-color: rgba(255, 0, 0, .1)
}

.txt > small:not([id])::before {
    background-color: red;
    content: 'This <small> tag must have a non-empty id="" attribute. Remember, the precedent <input> tag must have a aria-describedby="" attribute whose value is this <small> tag ID. Example: <small id="[ some ID ]">.'
}

.txta:not([for]) {
    background-color: rgba(255, 0, 0, .1)
}

.txta:not([for])::before {
    background-color: red;
    content: 'This <label class="txta"> tag must have a non-empty for="" attribute. It must point at the child <textarea> ID. Example: <label class="txta" for="[ child textarea ID ]">.'
}

.txta > textarea:not([id]) {
    background-color: rgba(255, 0, 0, .1)
}

.txta > textarea:not([id])::before {
    background-color: red;
    content: 'This <textarea> tag must have a non-empty id="" attribute. Remember, the parent <label class="txta"> for="" attribute must be this <textarea> ID. Example: <textarea id="[ some ID ]">.'
}

.txta > small:not([id]) {
    background-color: rgba(255, 0, 0, .1)
}

.txta > small:not([id])::before {
    background-color: red;
    content: 'This <small> tag must have a non-empty id="" attribute. Remember, the precedent <textarea> tag must have a aria-describedby="" attribute whose value is this <small> tag ID. Example: <small id="[ some ID ]">.'
}

.sel,
.sel-mul {
    border-radius: var(--control__box--shape);
    display: inline-flex
}

.sel > select {
    border-radius: var(--control__box--shape);
    border-style: solid;
    border-width: var(--control__box--border-width);
    cursor: pointer;
    text-shadow: none;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(0,90,230)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.sel {
    cursor: pointer;
    font-size: var(--control__box--size);
    vertical-align: middle
}

.sel:hover > select,
.sel > select:focus {
    --btn--bg-c: rgba(0, 0, 0, .05);
    --btn--bd-c: transparent
}

.sel:hover > select:focus {
    --btn--bd-c: rgba(0, 0, 0, .05)
}

.sel .disabled > select,
.sel > select:disabled {
    --btn--bg-c: #F2F2F2;
    --btn--bd-c: #F2F2F2;
    --btn--c: #515151;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(0,0,0)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.primary.ghost.sel {
    --btn--bg-c: transparent;
    --btn--bd-c: #005AE6;
    --btn--c: #005AE6;
    --txt--c: #005AE6
}

.primary.ghost.sel > select {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(0,90,230)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.primary.ghost.sel:hover > select,
.primary.ghost.sel > select:focus {
    --btn--bg-c: rgba(0, 90, 230, .1);
    --btn--bd-c: #003280;
    --btn--c: #003280;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(11,106,255)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.primary.ghost.sel:hover > select:focus {
    --btn--bd-c: #0046b3
}

.primary.ghost.disabled.sel > select,
.primary.ghost.sel > select:disabled {
    --btn--bg-c: transparent;
    --btn--bd-c: #1a74ff;
    --btn--c: #1a74ff;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(0,90,230)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.secondary.ghost.sel {
    --btn--bg-c: transparent;
    --btn--bd-c: #747474;
    --btn--c: #747474;
    --txt--c: #747474
}

.secondary.ghost.sel > select {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(116,116,116)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.secondary.ghost.sel:hover > select,
.secondary.ghost.sel > select:focus {
    --btn--bg-c: rgba(116, 116, 116, .1);
    --btn--bd-c: #414141;
    --btn--c: #414141;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(116,116,116)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.secondary.ghost.sel:hover > select:focus {
    --btn--bd-c: #5b5b5b
}

.secondary.ghost.disabled.sel > select,
.secondary.ghost.sel > select:disabled {
    --btn--bg-c: transparent;
    --btn--bd-c: #8e8e8e;
    --btn--c: #8e8e8e;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(221,221,221)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.success.ghost.sel {
    --btn--bg-c: transparent;
    --btn--bd-c: #158646;
    --btn--c: #158646;
    --txt--c: #158646
}

.success.ghost.sel > select {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(21,134,70)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.success.ghost.sel:hover > select,
.success.ghost.sel > select:focus {
    --btn--bg-c: rgba(21, 134, 70, .1);
    --btn--bd-c: #072e18;
    --btn--c: #072e18;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(21,134,70)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.success.ghost.sel:hover > select:focus {
    --btn--bd-c: #0e5a2f
}

.success.ghost.disabled.sel > select,
.success.ghost.sel > select:disabled {
    --btn--bg-c: transparent;
    --btn--bd-c: #1cb25d;
    --btn--c: #1cb25d;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(28,178,93)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.info.ghost.sel {
    --btn--bg-c: transparent;
    --btn--bd-c: #867601;
    --btn--c: #867601;
    --txt--c: #867601
}

.info.ghost.sel > select {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(134,118,1)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.info.ghost.sel:hover > select,
.info.ghost.sel > select:focus {
    --btn--bg-c: rgba(134, 118, 1, .1);
    --btn--bd-c: #211d00;
    --btn--c: #211d00;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(134,118,1)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.info.ghost.sel:hover > select:focus {
    --btn--bd-c: #544901
}

.info.ghost.disabled.sel > select,
.info.ghost.sel > select:disabled {
    --btn--bg-c: transparent;
    --btn--bd-c: #b8a202;
    --btn--c: #b8a202;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(253,230,66)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.warning.ghost.sel {
    --btn--bg-c: transparent;
    --btn--bd-c: #b35d00;
    --btn--c: #b35d00;
    --txt--c: #b35d00
}

.warning.ghost.sel > select {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(179,93,0)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.warning.ghost.sel:hover > select,
.warning.ghost.sel > select:focus {
    --btn--bg-c: rgba(179, 93, 0, .1);
    --btn--bd-c: #4d2800;
    --btn--c: #4d2800;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(179,93,0)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.warning.ghost.sel:hover > select:focus {
    --btn--bd-c: #804300
}

.warning.ghost.disabled.sel > select,
.warning.ghost.sel > select:disabled {
    --btn--bg-c: transparent;
    --btn--bd-c: #e67800;
    --btn--c: #e67800;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(230,120,0)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.danger.ghost.sel {
    --btn--bg-c: transparent;
    --btn--bd-c: #DD1F26;
    --btn--c: #DD1F26;
    --txt--c: #DD1F26
}

.danger.ghost.sel > select {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(221,31,38)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.danger.ghost.sel:hover > select,
.danger.ghost.sel > select:focus {
    --btn--bg-c: rgba(221, 31, 38, .1);
    --btn--bd-c: #841217;
    --btn--c: #841217;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(225,42,49)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.danger.ghost.sel:hover > select:focus {
    --btn--bd-c: #b0191e
}

.danger.ghost.disabled.sel > select,
.danger.ghost.sel > select:disabled {
    --btn--bg-c: transparent;
    --btn--bd-c: #e6494f;
    --btn--c: #e6494f;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(221,31,38)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.primary.solid.sel {
    --btn--bg-c: var(--color--primary);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #fff;
    --txt--c: #005AE6
}

.primary.solid.sel > select {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(255,255,255)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.primary.solid.sel:hover > select,
.primary.solid.sel > select:focus {
    --btn--bg-c: #1a74ff;
    --btn--c: #000;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(0,0,0)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.primary.solid.sel:hover > select:focus {
    --btn--bd-c: #0046b3
}

.primary.solid.disabled.sel > select,
.primary.solid.sel > select:disabled {
    --btn--bg-c: #4d93ff;
    --btn--bd-c: #4d93ff;
    --btn--c: #005AE6;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(0,90,230)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.secondary.solid.sel {
    --btn--bg-c: var(--color--secondary);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000;
    --txt--c: #747474
}

.secondary.solid.sel > select {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(0,0,0)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.secondary.solid.sel:hover > select,
.secondary.solid.sel > select:focus {
    --btn--bg-c: #f7f7f7;
    --btn--c: #000;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(0,0,0)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.secondary.solid.sel:hover > select:focus {
    --btn--bd-c: #c4c4c4
}

.secondary.solid.disabled.sel > select,
.secondary.solid.sel > select:disabled {
    --btn--bg-c: #fff;
    --btn--bd-c: #fff;
    --btn--c: #DDD;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(221,221,221)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.success.solid.sel {
    --btn--bg-c: var(--color--success);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000;
    --txt--c: #158646
}

.success.solid.sel > select {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(0,0,0)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.success.solid.sel:hover > select,
.success.solid.sel > select:focus {
    --btn--bg-c: #24dd74;
    --btn--c: #000;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(0,0,0)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.success.solid.sel:hover > select:focus {
    --btn--bd-c: #158646
}

.success.solid.disabled.sel > select,
.success.solid.sel > select:disabled {
    --btn--bg-c: #50e490;
    --btn--bd-c: #50e490;
    --btn--c: #1CB25D;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(28,178,93)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.info.solid.sel {
    --btn--bg-c: var(--color--info);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000;
    --txt--c: #867601
}

.info.solid.sel > select {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(0,0,0)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.info.solid.sel:hover > select,
.info.solid.sel > select:focus {
    --btn--bg-c: #feed74;
    --btn--c: #000;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(0,0,0)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.info.solid.sel:hover > select:focus {
    --btn--bd-c: #fcdf10
}

.info.solid.disabled.sel > select,
.info.solid.sel > select:disabled {
    --btn--bg-c: #fef3a7;
    --btn--bd-c: #fef3a7;
    --btn--c: #FDE642;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(253,230,66)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.warning.solid.sel {
    --btn--bg-c: var(--color--warning);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000;
    --txt--c: #b35d00
}

.warning.solid.sel > select {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(0,0,0)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.warning.solid.sel:hover > select,
.warning.solid.sel > select:focus {
    --btn--bg-c: #ff911a;
    --btn--c: #000;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(0,0,0)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.warning.solid.sel:hover > select:focus {
    --btn--bd-c: #b35d00
}

.warning.solid.disabled.sel > select,
.warning.solid.sel > select:disabled {
    --btn--bg-c: #ffaa4d;
    --btn--bd-c: #ffaa4d;
    --btn--c: #E67800;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(230,120,0)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.danger.solid.sel {
    --btn--bg-c: var(--color--danger);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #fff;
    --txt--c: #DD1F26
}

.danger.solid.sel > select {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(255,255,255)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.danger.solid.sel:hover > select,
.danger.solid.sel > select:focus {
    --btn--bg-c: #e6494f;
    --btn--c: #000;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(0,0,0)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.danger.solid.sel:hover > select:focus {
    --btn--bd-c: #b0191e
}

.danger.solid.disabled.sel > select,
.danger.solid.sel > select:disabled {
    --btn--bg-c: #ec767b;
    --btn--bd-c: #ec767b;
    --btn--c: #DD1F26;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(221,31,38)"%3E%3Cpath d="M24.004 10H8.002c-.809 0-1.54.49-1.851 1.234-.308.75-.138 1.61.436 2.179l7.999 8c.39.392.905.587 1.415.587s1.02-.195 1.41-.586l8.004-8c.569-.569.743-1.429.432-2.179C25.536 10.49 24.81 10 24.004 10z"/%3E%3C/svg%3E')
}

.capsule .sel,
.capsule.sel {
    --control__box--shape: var(--control__box--shape--capsule)
}

.round .sel,
.round.sel {
    --control__box--shape: var(--control__box--shape--round)
}

.square .sel,
.square.sel {
    --control__box--shape: var(--control__box--shape--square)
}

.xs .sel,
.xs.sel {
    --control__box--size: var(--control__box--size--xs)
}

.sm .sel,
.sm.sel {
    --control__box--size: var(--control__box--size--sm)
}

.md .sel,
.md.sel {
    --control__box--size: var(--control__box--size--md)
}

.lg .sel,
.lg.sel {
    --control__box--size: var(--control__box--size--lg)
}

.disabled.sel {
    cursor: not-allowed
}

.disabled.sel > small,
.disabled.sel > span {
    opacity: .75
}

.block.sel > select {
    flex-grow: 1
}

.elevated.sel > select {
    box-shadow: 0 1px 2px var(--box-shadow--color), 0 2px 4px var(--box-shadow--color)
}

.elevated.sel:hover > select,
.elevated.sel > select:focus {
    box-shadow: 0 3px 6px var(--box-shadow--color), 0 6px 12px var(--box-shadow--color)
}

.v.sel,
form.v .sel.ctrl {
    align-items: stretch;
    flex-direction: column;
    height: auto
}

.v.sel > span,
form.v .sel.ctrl > span {
    margin: 0 0 .25em
}

[dir=ltr] .v.sel > span,
[dir=ltr] form.v .sel.ctrl > span,
form.v [dir=ltr] .sel.ctrl > span {
    margin-right: 0
}

[dir=rtl] .v.sel > span,
[dir=rtl] form.v .sel.ctrl > span,
form.v [dir=rtl] .sel.ctrl > span {
    margin-left: 0
}

.v.sel > small,
form.v .sel.ctrl > small {
    margin: .25em 0 0
}

[dir=ltr] .v.sel > small,
[dir=ltr] form.v .sel.ctrl > small,
form.v [dir=ltr] .sel.ctrl > small {
    margin-left: 0
}

[dir=ltr] .sel > small,
[dir=rtl] .sel > span {
    margin-left: .5em
}

[dir=rtl] .v.sel > small,
[dir=rtl] form.v .sel.ctrl > small,
form.v [dir=rtl] .sel.ctrl > small {
    margin-right: 0
}

[dir=ltr] .sel > span,
[dir=rtl] .sel > small {
    margin-right: .5em
}

.sel > select {
    appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none;
    background-color: var(--btn--bg-c);
    border-color: var(--btn--bd-c);
    color: var(--btn--c);
    font-size: 1em;
    height: 2em
}

.sel > select optgroup,
.sel > select option {
    background-color: #fff;
    color: #333
}

[dir=ltr] .sel > select {
    background-position: center right .5em;
    padding: calc(.25em - .0625rem) calc(2 * 1em) calc(.25em - .0625rem) calc(.5em - .0625rem)
}

[dir=rtl] .sel > select {
    background-position: .5em center;
    padding: calc(.25em - .0625rem) calc(.5em - .0625rem) calc(.25em - .0625rem) calc(2 * 1em)
}

.sel > select:disabled {
    cursor: not-allowed;
    opacity: .75
}

.sel > select option {
    font-size: 1em;
    padding: .125em
}

.sel > small {
    color: var(--txt--c);
    font-size: .875em;
    line-height: 1.25em
}

.sel-mul {
    cursor: pointer;
    font-size: var(--control__box--size);
    line-height: 1.5em;
    vertical-align: top
}

.rng,
.swc {
    vertical-align: middle
}

.danger.ghost.sel-mul,
.info.ghost.sel-mul,
.primary.ghost.sel-mul,
.secondary.ghost.sel-mul,
.sel-mul > select:focus,
.success.ghost.sel-mul,
.warning.ghost.sel-mul {
    --txt--sh: 0 0 0 transparent inset
}

.disabled.sel-mul > select,
.sel-mul > select:disabled {
    --txt--bg-c: #ccc;
    --txt--bd-c: #ccc;
    --txt--sh: 0 0 0 transparent inset;
    --txt--c: rgba(0, 0, 0, .75)
}

.primary.ghost.sel-mul {
    --txt--bg-c: transparent;
    --txt--bd-c: transparent transparent var(--color--primary);
    --txt--c: #005AE6
}

.primary.ghost.sel-mul:hover > select,
.primary.ghost.sel-mul > select:focus {
    --txt--bd-c: #0046b3
}

.primary.ghost.disabled.sel-mul > select,
.primary.ghost.sel-mul > select:disabled {
    --txt--bg-c: rgba(77, 147, 255, .25);
    --txt--bd-c: rgba(77, 147, 255, .25);
    --txt--c: var(--color--primary)
}

.secondary.ghost.sel-mul {
    --txt--bg-c: transparent;
    --txt--bd-c: transparent transparent var(--color--secondary);
    --txt--c: #747474
}

.secondary.ghost.sel-mul:hover > select,
.secondary.ghost.sel-mul > select:focus {
    --txt--bd-c: #c4c4c4
}

.secondary.ghost.disabled.sel-mul > select,
.secondary.ghost.sel-mul > select:disabled {
    --txt--bg-c: rgba(255, 255, 255, .25);
    --txt--bd-c: rgba(255, 255, 255, .25);
    --txt--c: var(--color--secondary)
}

.success.ghost.sel-mul {
    --txt--bg-c: transparent;
    --txt--bd-c: transparent transparent var(--color--success);
    --txt--c: #158646
}

.success.ghost.sel-mul:hover > select,
.success.ghost.sel-mul > select:focus {
    --txt--bd-c: #158646
}

.success.ghost.disabled.sel-mul > select,
.success.ghost.sel-mul > select:disabled {
    --txt--bg-c: rgba(80, 228, 144, .25);
    --txt--bd-c: rgba(80, 228, 144, .25);
    --txt--c: var(--color--success)
}

.info.ghost.sel-mul {
    --txt--bg-c: transparent;
    --txt--bd-c: transparent transparent var(--color--info);
    --txt--c: #867601
}

.info.ghost.sel-mul:hover > select,
.info.ghost.sel-mul > select:focus {
    --txt--bd-c: #fcdf10
}

.info.ghost.disabled.sel-mul > select,
.info.ghost.sel-mul > select:disabled {
    --txt--bg-c: rgba(254, 243, 167, .25);
    --txt--bd-c: rgba(254, 243, 167, .25);
    --txt--c: var(--color--info)
}

.warning.ghost.sel-mul {
    --txt--bg-c: transparent;
    --txt--bd-c: transparent transparent var(--color--warning);
    --txt--c: #b35d00
}

.warning.ghost.sel-mul:hover > select,
.warning.ghost.sel-mul > select:focus {
    --txt--bd-c: #b35d00
}

.warning.ghost.disabled.sel-mul > select,
.warning.ghost.sel-mul > select:disabled {
    --txt--bg-c: rgba(255, 170, 77, .25);
    --txt--bd-c: rgba(255, 170, 77, .25);
    --txt--c: var(--color--warning)
}

.danger.ghost.sel-mul {
    --txt--bg-c: transparent;
    --txt--bd-c: transparent transparent var(--color--danger);
    --txt--c: #DD1F26
}

.danger.ghost.sel-mul:hover > select,
.danger.ghost.sel-mul > select:focus {
    --txt--bd-c: #b0191e
}

.danger.ghost.disabled.sel-mul > select,
.danger.ghost.sel-mul > select:disabled {
    --txt--bg-c: rgba(236, 118, 123, .25);
    --txt--bd-c: rgba(236, 118, 123, .25);
    --txt--c: var(--color--danger)
}

.primary.solid.sel-mul {
    --txt--bg-c: #fff;
    --txt--bd-c: transparent transparent var(--color--primary);
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset;
    --txt--c: #005AE6
}

.primary.solid.sel-mul:hover > select,
.primary.solid.sel-mul > select:focus {
    --txt--bd-c: #0046b3;
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset
}

.primary.solid.disabled.sel-mul > select,
.primary.solid.sel-mul > select:disabled {
    --btn--bg-c: #4d93ff;
    --btn--bd-c: #4d93ff;
    --btn--c: #005AE6;
    --txt--bg-c: #4d93ff;
    --txt--bd-c: #4d93ff;
    --txt--sh: 0 0 0 transparent inset;
    --txt--c: #003280
}

.secondary.solid.sel-mul {
    --txt--bg-c: #fff;
    --txt--bd-c: transparent transparent var(--color--secondary);
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset;
    --txt--c: #747474
}

.secondary.solid.sel-mul:hover > select,
.secondary.solid.sel-mul > select:focus {
    --txt--bd-c: #c4c4c4;
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset
}

.secondary.solid.disabled.sel-mul > select,
.secondary.solid.sel-mul > select:disabled {
    --btn--bg-c: #fff;
    --btn--bd-c: #fff;
    --btn--c: #DDD;
    --txt--bg-c: #fff;
    --txt--bd-c: #fff;
    --txt--sh: 0 0 0 transparent inset;
    --txt--c: #aaa
}

.success.solid.sel-mul {
    --txt--bg-c: #fff;
    --txt--bd-c: transparent transparent var(--color--success);
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset;
    --txt--c: #158646
}

.success.solid.sel-mul:hover > select,
.success.solid.sel-mul > select:focus {
    --txt--bd-c: #158646;
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset
}

.success.solid.disabled.sel-mul > select,
.success.solid.sel-mul > select:disabled {
    --btn--bg-c: #50e490;
    --btn--bd-c: #50e490;
    --btn--c: #1CB25D;
    --txt--bg-c: #50e490;
    --txt--bd-c: #50e490;
    --txt--sh: 0 0 0 transparent inset;
    --txt--c: #0e5a2f
}

.info.solid.sel-mul,
.info.solid.sel-mul:hover > select,
.info.solid.sel-mul > select:focus {
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset
}

.info.solid.sel-mul {
    --txt--bg-c: #fff;
    --txt--bd-c: transparent transparent var(--color--info);
    --txt--c: #867601
}

.info.solid.sel-mul:hover > select,
.info.solid.sel-mul > select:focus {
    --txt--bd-c: #fcdf10
}

.info.solid.disabled.sel-mul > select,
.info.solid.sel-mul > select:disabled {
    --btn--bg-c: #fef3a7;
    --btn--bd-c: #fef3a7;
    --btn--c: #FDE642;
    --txt--bg-c: #fef3a7;
    --txt--bd-c: #fef3a7;
    --txt--sh: 0 0 0 transparent inset;
    --txt--c: #d7bd02
}

.warning.solid.sel-mul {
    --txt--bg-c: #fff;
    --txt--bd-c: transparent transparent var(--color--warning);
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset;
    --txt--c: #b35d00
}

.warning.solid.sel-mul:hover > select,
.warning.solid.sel-mul > select:focus {
    --txt--bd-c: #b35d00;
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset
}

.warning.solid.disabled.sel-mul > select,
.warning.solid.sel-mul > select:disabled {
    --btn--bg-c: #ffaa4d;
    --btn--bd-c: #ffaa4d;
    --btn--c: #E67800;
    --txt--bg-c: #ffaa4d;
    --txt--bd-c: #ffaa4d;
    --txt--sh: 0 0 0 transparent inset;
    --txt--c: #804300
}

.danger.solid.sel-mul {
    --txt--bg-c: #fff;
    --txt--bd-c: transparent transparent var(--color--danger);
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset;
    --txt--c: #DD1F26
}

.danger.solid.sel-mul:hover > select,
.danger.solid.sel-mul > select:focus {
    --txt--bd-c: #b0191e;
    --txt--sh: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset
}

.danger.solid.disabled.sel-mul > select,
.danger.solid.sel-mul > select:disabled {
    --btn--bg-c: #ec767b;
    --btn--bd-c: #ec767b;
    --btn--c: #DD1F26;
    --txt--bg-c: #ec767b;
    --txt--bd-c: #ec767b;
    --txt--sh: 0 0 0 transparent inset;
    --txt--c: #841217
}

.capsule .sel-mul,
.capsule.sel-mul {
    --control__box--shape: var(--control__box--shape--capsule)
}

.round .sel-mul,
.round.sel-mul {
    --control__box--shape: var(--control__box--shape--round)
}

.square .sel-mul,
.square.sel-mul {
    --control__box--shape: var(--control__box--shape--square)
}

.xs .sel-mul,
.xs.sel-mul {
    --control__box--size: var(--control__box--size--xs)
}

.sm .sel-mul,
.sm.sel-mul {
    --control__box--size: var(--control__box--size--sm)
}

.md .sel-mul,
.md.sel-mul {
    --control__box--size: var(--control__box--size--md)
}

.lg .sel-mul,
.lg.sel-mul {
    --control__box--size: var(--control__box--size--lg)
}

.disabled.sel-mul {
    cursor: not-allowed
}

.disabled.sel-mul > small,
.disabled.sel-mul > span {
    opacity: .75
}

.block.sel-mul > select {
    flex-grow: 1
}

.v.sel-mul,
form.v .sel-mul.ctrl {
    align-items: stretch;
    flex-direction: column;
    height: auto
}

.v.sel-mul > span,
form.v .sel-mul.ctrl > span {
    margin: 0 0 .25em
}

[dir=ltr] .v.sel-mul > span,
[dir=ltr] form.v .sel-mul.ctrl > span,
form.v [dir=ltr] .sel-mul.ctrl > span {
    margin-right: 0
}

[dir=rtl] .v.sel-mul > span,
[dir=rtl] form.v .sel-mul.ctrl > span,
form.v [dir=rtl] .sel-mul.ctrl > span {
    margin-left: 0
}

.v.sel-mul > small,
form.v .sel-mul.ctrl > small {
    margin: .25em 0 0
}

[dir=ltr] .v.sel-mul > small,
[dir=ltr] form.v .sel-mul.ctrl > small,
form.v [dir=ltr] .sel-mul.ctrl > small {
    margin-left: 0
}

[dir=ltr] .sel-mul > small,
[dir=rtl] .sel-mul > span,
[dir=rtl] .swc > span:first-of-type {
    margin-left: .5em
}

[dir=rtl] .v.sel-mul > small,
[dir=rtl] form.v .sel-mul.ctrl > small,
form.v [dir=rtl] .sel-mul.ctrl > small {
    margin-right: 0
}

[dir=ltr] .sel-mul > span,
[dir=ltr] .swc > span:first-of-type,
[dir=rtl] .sel-mul > small {
    margin-right: .5em
}

.sel-mul > span {
    margin-top: .25em
}

.sel-mul > select {
    background-color: var(--txt--bg-c);
    border-color: var(--txt--bd-c);
    box-shadow: var(--txt--sh);
    color: var(--txt--c);
    cursor: pointer;
    font-size: 1em;
    overflow: scroll
}

.sel-mul:not([for]),
.sel-mul > select:not([id]),
.sel-mul > select:not([multiple]),
.sel-mul > small:not([id]),
.sel:not([for]),
.sel > select:not([id]),
.sel > small:not([id]) {
    border: .25rem dotted red !important
}

.sel-mul > select:disabled,
.sel-mul > select:disabled + small {
    cursor: not-allowed;
    opacity: .75
}

.sel-mul > select option {
    line-height: 1.5em;
    padding: .25em .5em
}

.sel-mul > select optgroup {
    padding: .25em .5em
}

.sel-mul > small {
    color: var(--txt--c);
    font-size: .875em;
    line-height: 1.25em;
    margin-top: .5em
}

.sel-mul:not([for])::before,
.sel-mul > select:not([id])::before,
.sel-mul > select:not([multiple])::before,
.sel-mul > small:not([id])::before,
.sel:not([for])::before,
.sel > select:not([id])::before,
.sel > small:not([id])::before {
    display: inline-block;
    color: #fff;
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.sel:not([for]) {
    background-color: rgba(255, 0, 0, .1)
}

.sel:not([for])::before {
    background-color: red;
    content: 'This <label class="sel"> tag must have a non-empty for="" attribute. It must point at the child <select> ID. Example: <label class="sel" for="[ child select ID ]">.'
}

.sel > select:not([id]) {
    background-color: rgba(255, 0, 0, .1)
}

.sel > select:not([id])::before {
    background-color: red;
    content: 'This <select> tag must have a non-empty id="" attribute. Remember, the parent <label class="sel"> for="" attribute must be this <input> ID. Example: <select id="[ some ID ]">.'
}

.sel > small:not([id]) {
    background-color: rgba(255, 0, 0, .1)
}

.sel > small:not([id])::before {
    background-color: red;
    content: 'This <small> tag must have a non-empty id="" attribute. Remember, the precedent <select> tag must have a aria-describedby="" attribute whose value is this <small> tag ID. Example: <small id="[ some ID ]">.'
}

.sel-mul:not([for]) {
    background-color: rgba(255, 0, 0, .1)
}

.sel-mul:not([for])::before {
    background-color: red;
    content: 'This <label class="sel-mul"> tag must have a non-empty for="" attribute. It must point at the child <select> ID. Example: <label class="sel-mul" for="[ child select ID ]">.'
}

.sel-mul > select:not([id]) {
    background-color: rgba(255, 0, 0, .1)
}

.sel-mul > select:not([id])::before {
    background-color: red;
    content: 'This <select> tag must have a non-empty id="" attribute. Remember, the parent <label class="sel-mul"> for="" attribute must be this <input> ID. Example: <select id="[ some ID ]">.'
}

.sel-mul > select:not([multiple]) {
    background-color: rgba(255, 0, 0, .1)
}

.sel-mul > select:not([multiple])::before {
    background-color: red;
    content: "This <select> tag must have a multiple attribute. Example: <select multiple>."
}

.sel-mul > small:not([id]) {
    background-color: rgba(255, 0, 0, .1)
}

.swc,
.swc::before {
    border-radius: var(--control__box--shape)
}

.sel-mul > small:not([id])::before {
    background-color: red;
    content: 'This <small> tag must have a non-empty id="" attribute. Remember, the precedent <select> tag must have a aria-describedby="" attribute whose value is this <small> tag ID. Example: <small id="[ some ID ]">.'
}

.swc::before {
    box-shadow: var(--txt--sh);
    height: 1em;
    top: .5em;
    width: 3em
}

[dir=ltr] .swc::before {
    right: 0
}

[dir=rtl] .swc::before {
    left: 0
}

.swc .thumb {
    box-shadow: 0 .5px 1px var(--box-shadow--color), 0 1px 2px var(--box-shadow--color);
    background-color: var(--btn--bg-c);
    border-color: var(--btn--bd-c);
    color: var(--btn--c);
    height: 2em;
    line-height: 1em;
    padding: calc((1em / 2) - .0625rem);
    top: 0;
    width: 2em
}

.swc [dir=ltr] .thumb,
[dir=ltr] .swc .thumb {
    right: 1em
}

.swc [dir=rtl] .thumb,
[dir=rtl] .swc .thumb {
    left: 1em
}

.swc .thumb > img,
.swc .thumb > svg {
    display: block;
    height: 1em;
    width: 1em
}

.block.rng,
.block.swc,
.v.rng > input,
form.v .rng.ctrl > input {
    width: 100%
}

.swc,
.swc::before {
    display: inline-flex
}

.swc {
    cursor: pointer;
    font-size: var(--control__box--size);
    min-height: 2em
}

.swc .thumb,
.swc::before {
    position: absolute
}

.swc > input:disabled + span,
.swc > input:disabled:active + span {
    cursor: not-allowed;
    opacity: .75;
    outline: 0
}

.swc > input + span {
    cursor: pointer
}

.swc::before {
    background-color: rgba(247, 247, 247, .5);
    content: ''
}

.swc input + .thumb {
    --btn--bg-c: #fff;
    --btn--bd-c: #fff;
    --btn--c: var(--color--primary)
}

.swc input:checked + .thumb,
.swc input:hover + .thumb {
    --btn--bg-c: #f7f7f7;
    --btn--bd-c: #f7f7f7
}

.swc input:focus:hover + .thumb {
    --btn--bd-c: #f7f7f7
}

.swc input:active + .thumb {
    --btn--bg-c: #DDD;
    --btn--bd-c: #DDD #f7f7f7 #f7f7f7
}

.swc input:active:hover + .thumb {
    --btn--bd-c: #DDD
}

.swc input:disabled + .thumb,
.swc input:disabled:active + .thumb {
    --btn--bg-c: #fff;
    --btn--bd-c: #fff;
    box-shadow: none
}

.primary.swc::before {
    background-color: rgba(0, 90, 230, .25)
}

.primary.swc input + .thumb {
    --btn--bg-c: var(--color--primary);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #fff
}

.primary.swc input:checked + .thumb,
.primary.swc input:hover + .thumb {
    --btn--bg-c: #1a74ff;
    --btn--c: #000
}

.primary.swc input:focus:hover + .thumb {
    --btn--bd-c: #0046b3
}

.primary.swc input:active + .thumb {
    --btn--bg-c: #005AE6;
    --btn--bd-c: #003280 #005AE6 #005AE6;
    --btn--c: #fff
}

.primary.swc input:active:hover + .thumb {
    --btn--bd-c: #003280
}

.primary.swc input:disabled + .thumb,
.primary.swc input:disabled:active + .thumb {
    --btn--bg-c: #4d93ff;
    --btn--bd-c: #4d93ff;
    --btn--c: #003280;
    box-shadow: none
}

.secondary.swc::before {
    background-color: rgba(221, 221, 221, .25)
}

.secondary.swc input + .thumb {
    --btn--bg-c: var(--color--secondary);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.secondary.swc input:checked + .thumb,
.secondary.swc input:hover + .thumb {
    --btn--bg-c: #f7f7f7;
    --btn--c: #000
}

.secondary.swc input:focus:hover + .thumb {
    --btn--bd-c: #c4c4c4
}

.secondary.swc input:active + .thumb {
    --btn--bg-c: #DDD;
    --btn--bd-c: #aaa #DDD #DDD;
    --btn--c: #000
}

.secondary.swc input:active:hover + .thumb {
    --btn--bd-c: #aaa
}

.secondary.swc input:disabled + .thumb,
.secondary.swc input:disabled:active + .thumb {
    --btn--bg-c: #fff;
    --btn--bd-c: #fff;
    --btn--c: #aaa;
    box-shadow: none
}

.success.swc::before {
    background-color: rgba(28, 178, 93, .25)
}

.success.swc input + .thumb {
    --btn--bg-c: var(--color--success);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.success.swc input:checked + .thumb,
.success.swc input:hover + .thumb {
    --btn--bg-c: #24dd74;
    --btn--c: #000
}

.success.swc input:focus:hover + .thumb {
    --btn--bd-c: #158646
}

.success.swc input:active + .thumb {
    --btn--bg-c: #1CB25D;
    --btn--bd-c: #0e5a2f #1CB25D #1CB25D;
    --btn--c: #000
}

.success.swc input:active:hover + .thumb {
    --btn--bd-c: #0e5a2f
}

.success.swc input:disabled + .thumb,
.success.swc input:disabled:active + .thumb {
    --btn--bg-c: #50e490;
    --btn--bd-c: #50e490;
    --btn--c: #0e5a2f;
    box-shadow: none
}

.info.swc::before {
    background-color: rgba(253, 230, 66, .25)
}

.info.swc input + .thumb {
    --btn--bg-c: var(--color--info);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.info.swc input:checked + .thumb,
.info.swc input:hover + .thumb {
    --btn--bg-c: #feed74;
    --btn--c: #000
}

.info.swc input:focus:hover + .thumb {
    --btn--bd-c: #fcdf10
}

.info.swc input:active + .thumb {
    --btn--bg-c: #FDE642;
    --btn--bd-c: #d7bd02 #FDE642 #FDE642;
    --btn--c: #000
}

.info.swc input:active:hover + .thumb {
    --btn--bd-c: #d7bd02
}

.info.swc input:disabled + .thumb,
.info.swc input:disabled:active + .thumb {
    --btn--bg-c: #fef3a7;
    --btn--bd-c: #fef3a7;
    --btn--c: #d7bd02;
    box-shadow: none
}

.warning.swc::before {
    background-color: rgba(230, 120, 0, .25)
}

.warning.swc input + .thumb {
    --btn--bg-c: var(--color--warning);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.warning.swc input:checked + .thumb,
.warning.swc input:hover + .thumb {
    --btn--bg-c: #ff911a;
    --btn--c: #000
}

.warning.swc input:focus:hover + .thumb {
    --btn--bd-c: #b35d00
}

.warning.swc input:active + .thumb {
    --btn--bg-c: #E67800;
    --btn--bd-c: #804300 #E67800 #E67800;
    --btn--c: #000
}

.warning.swc input:active:hover + .thumb {
    --btn--bd-c: #804300
}

.warning.swc input:disabled + .thumb,
.warning.swc input:disabled:active + .thumb {
    --btn--bg-c: #ffaa4d;
    --btn--bd-c: #ffaa4d;
    --btn--c: #804300;
    box-shadow: none
}

.danger.swc::before {
    background-color: rgba(221, 31, 38, .25)
}

.danger.swc input + .thumb {
    --btn--bg-c: var(--color--danger);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #fff
}

.danger.swc input:checked + .thumb,
.danger.swc input:hover + .thumb {
    --btn--bg-c: #e6494f;
    --btn--c: #000
}

.danger.swc input:focus:hover + .thumb {
    --btn--bd-c: #b0191e
}

.danger.swc input:active + .thumb {
    --btn--bg-c: #DD1F26;
    --btn--bd-c: #841217 #DD1F26 #DD1F26;
    --btn--c: #fff
}

.danger.swc input:active:hover + .thumb {
    --btn--bd-c: #841217
}

.danger.swc input:disabled + .thumb,
.danger.swc input:disabled:active + .thumb {
    --btn--bg-c: #ec767b;
    --btn--bd-c: #ec767b;
    --btn--c: #841217;
    box-shadow: none
}

.capsule .swc,
.capsule.swc {
    --control__box--shape: var(--control__box--shape--capsule)
}

.round .swc,
.round.swc {
    --control__box--shape: var(--control__box--shape--round)
}

.square .swc,
.square.swc {
    --control__box--shape: var(--control__box--shape--square)
}

.xs .swc,
.xs.swc {
    --control__box--size: var(--control__box--size--xs)
}

.sm .swc,
.sm.swc {
    --control__box--size: var(--control__box--size--sm)
}

.md .swc,
.md.swc {
    --control__box--size: var(--control__box--size--md)
}

.lg .swc,
.lg.swc {
    --control__box--size: var(--control__box--size--lg)
}

[dir=ltr] .swc {
    padding-right: 3em
}

[dir=rtl] .swc {
    padding-left: 3em
}

.swc:not([for])::before,
.swc > input:not([id]) + .thumb::before,
.swc > input:not([type=checkbox]) + .thumb::before {
    display: inline-block;
    color: #fff;
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.block.swc > span:first-of-type {
    line-height: 24px
}

.disabled.swc {
    cursor: not-allowed
}

.disabled.swc::before,
.disabled.swc > span:first-of-type {
    opacity: .75
}

.swc > span:first-of-type {
    line-height: 2em
}

[dir=ltr] .swc > input:checked + .thumb {
    right: 0
}

[dir=rtl] .swc > input:checked + .thumb {
    left: 0
}

.swc > input:disabled,
.swc > input:disabled + .thumb {
    cursor: not-allowed;
    opacity: .75
}

.swc:not([for]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.swc:not([for])::before {
    background-color: red;
    content: 'This <label class="swc"> tag must have a non-empty for="" attribute. It must point at the child <input> ID. Example: <label class="swc" for="[ child input ID ]">.'
}

.swc > input:not([type=checkbox]) + .thumb {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.swc > input:not([type=checkbox]) + .thumb::before {
    background-color: red;
    content: 'This <input> tag must be of type="checkbox". Example: <input type="checkbox">.'
}

.swc > input:not([id]) + .thumb {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.swc > input:not([id]) + .thumb::before {
    background-color: red;
    content: 'This <input> tag must have a non-empty id="" attribute. Remember, the parent <label class="swc"> for="" attribute must be this <input> ID. Example: <input id="[ some ID ]">.'
}

.swc .thumb > img:not([aria-hidden=true]),
.swc .thumb > svg:not([aria-hidden=true]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.swc .thumb > img:not([aria-hidden=true])::before,
.swc .thumb > svg:not([aria-hidden=true])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This <img> OR <svg> tag must have aria-hidden="true". Example: <img aria-hidden="true"> OR <svg aria-hidden="true">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.rng {
    align-items: baseline;
    border-radius: var(--control__box--shape);
    cursor: pointer;
    display: inline-flex;
    font-size: var(--control__box--size)
}

.rng > input::-moz-range-thumb {
    --btn--bg-c: #fff;
    --btn--bd-c: #fff
}

.rng > input::-ms-thumb {
    --btn--bg-c: #fff;
    --btn--bd-c: #fff
}

.rng > input::-webkit-slider-thumb {
    --btn--bg-c: #fff;
    --btn--bd-c: #fff
}

.rng > input:hover::-moz-range-thumb {
    --btn--bg-c: #f7f7f7;
    --btn--bd-c: #f7f7f7
}

.rng > input:hover::-ms-thumb {
    --btn--bg-c: #f7f7f7;
    --btn--bd-c: #f7f7f7
}

.rng > input:hover::-webkit-slider-thumb {
    --btn--bg-c: #f7f7f7;
    --btn--bd-c: #f7f7f7
}

.rng > input:active::-moz-range-thumb {
    --btn--bg-c: #DDD;
    --btn--bd-c: #DDD #f7f7f7 #f7f7f7
}

.rng > input:active::-ms-thumb {
    --btn--bg-c: #DDD;
    --btn--bd-c: #DDD #f7f7f7 #f7f7f7
}

.rng > input:active::-webkit-slider-thumb {
    --btn--bg-c: #DDD;
    --btn--bd-c: #DDD #f7f7f7 #f7f7f7
}

.rng > input:active:hover::-moz-range-thumb {
    --btn--bd-c: #DDD
}

.rng > input:active:hover::-ms-thumb {
    --btn--bd-c: #DDD
}

.rng > input:active:hover::-webkit-slider-thumb {
    --btn--bd-c: #DDD
}

.rng > input:disabled::-moz-range-thumb {
    --btn--bg-c: #fff;
    --btn--bd-c: #fff
}

.rng > input:disabled::-ms-thumb {
    --btn--bg-c: #fff;
    --btn--bd-c: #fff
}

.rng > input:disabled::-webkit-slider-thumb {
    --btn--bg-c: #fff;
    --btn--bd-c: #fff
}

.primary.rng {
    --txt--c: #005AE6
}

.primary.rng > input::-moz-range-track {
    background-color: rgba(0, 90, 230, .25)
}

.primary.rng > input::-ms-track {
    background-color: rgba(0, 90, 230, .25)
}

.primary.rng > input::-webkit-slider-runnable-track {
    background-color: rgba(0, 90, 230, .25)
}

.primary.rng > input::-moz-range-thumb {
    --btn--bg-c: var(--color--primary);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #fff
}

.primary.rng > input::-ms-thumb {
    --btn--bg-c: var(--color--primary);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #fff
}

.primary.rng > input::-webkit-slider-thumb {
    --btn--bg-c: var(--color--primary);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #fff
}

.primary.rng > input:focus::-moz-range-thumb,
.primary.rng > input:hover::-moz-range-thumb {
    --btn--bg-c: #1a74ff;
    --btn--c: #000
}

.primary.rng > input:focus::-ms-thumb,
.primary.rng > input:hover::-ms-thumb {
    --btn--bg-c: #1a74ff;
    --btn--c: #000
}

.primary.rng > input:focus::-webkit-slider-thumb,
.primary.rng > input:hover::-webkit-slider-thumb {
    --btn--bg-c: #1a74ff;
    --btn--c: #000
}

.primary.rng > input:active::-moz-range-thumb {
    --btn--bg-c: #005AE6;
    --btn--bd-c: #003280 #005AE6 #005AE6;
    --btn--c: #fff
}

.primary.rng > input:active::-ms-thumb {
    --btn--bg-c: #005AE6;
    --btn--bd-c: #003280 #005AE6 #005AE6;
    --btn--c: #fff
}

.primary.rng > input:active::-webkit-slider-thumb {
    --btn--bg-c: #005AE6;
    --btn--bd-c: #003280 #005AE6 #005AE6;
    --btn--c: #fff
}

.primary.rng > input:active:hover::-moz-range-thumb {
    --btn--bd-c: #003280
}

.primary.rng > input:active:hover::-ms-thumb {
    --btn--bd-c: #003280
}

.primary.rng > input:active:hover::-webkit-slider-thumb {
    --btn--bd-c: #003280
}

.primary.rng > input:disabled::-moz-range-thumb,
.primary.rng > input:disabled:active::-moz-range-thumb,
.primary.rng > input:disabled:active:hover::-moz-range-thumb {
    --btn--bg-c: #4d93ff;
    --btn--bd-c: #4d93ff;
    --btn--c: #003280
}

.primary.rng > input:disabled::-ms-thumb,
.primary.rng > input:disabled:active::-ms-thumb,
.primary.rng > input:disabled:active:hover::-ms-thumb {
    --btn--bg-c: #4d93ff;
    --btn--bd-c: #4d93ff;
    --btn--c: #003280
}

.primary.rng > input:disabled::-webkit-slider-thumb,
.primary.rng > input:disabled:active::-webkit-slider-thumb,
.primary.rng > input:disabled:active:hover::-webkit-slider-thumb {
    --btn--bg-c: #4d93ff;
    --btn--bd-c: #4d93ff;
    --btn--c: #003280
}

.secondary.rng {
    --txt--c: #747474
}

.secondary.rng > input::-moz-range-track {
    background-color: rgba(221, 221, 221, .25)
}

.secondary.rng > input::-ms-track {
    background-color: rgba(221, 221, 221, .25)
}

.secondary.rng > input::-webkit-slider-runnable-track {
    background-color: rgba(221, 221, 221, .25)
}

.secondary.rng > input::-moz-range-thumb {
    --btn--bg-c: var(--color--secondary);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.secondary.rng > input::-ms-thumb {
    --btn--bg-c: var(--color--secondary);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.secondary.rng > input::-webkit-slider-thumb {
    --btn--bg-c: var(--color--secondary);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.secondary.rng > input:focus::-moz-range-thumb,
.secondary.rng > input:hover::-moz-range-thumb {
    --btn--bg-c: #f7f7f7;
    --btn--c: #000
}

.secondary.rng > input:focus::-ms-thumb,
.secondary.rng > input:hover::-ms-thumb {
    --btn--bg-c: #f7f7f7;
    --btn--c: #000
}

.secondary.rng > input:focus::-webkit-slider-thumb,
.secondary.rng > input:hover::-webkit-slider-thumb {
    --btn--bg-c: #f7f7f7;
    --btn--c: #000
}

.secondary.rng > input:active::-moz-range-thumb {
    --btn--bg-c: #DDD;
    --btn--bd-c: #aaa #DDD #DDD;
    --btn--c: #000
}

.secondary.rng > input:active::-ms-thumb {
    --btn--bg-c: #DDD;
    --btn--bd-c: #aaa #DDD #DDD;
    --btn--c: #000
}

.secondary.rng > input:active::-webkit-slider-thumb {
    --btn--bg-c: #DDD;
    --btn--bd-c: #aaa #DDD #DDD;
    --btn--c: #000
}

.secondary.rng > input:active:hover::-moz-range-thumb {
    --btn--bd-c: #aaa
}

.secondary.rng > input:active:hover::-ms-thumb {
    --btn--bd-c: #aaa
}

.secondary.rng > input:active:hover::-webkit-slider-thumb {
    --btn--bd-c: #aaa
}

.secondary.rng > input:disabled::-moz-range-thumb,
.secondary.rng > input:disabled:active::-moz-range-thumb,
.secondary.rng > input:disabled:active:hover::-moz-range-thumb {
    --btn--bg-c: #fff;
    --btn--bd-c: #fff;
    --btn--c: #aaa
}

.secondary.rng > input:disabled::-ms-thumb,
.secondary.rng > input:disabled:active::-ms-thumb,
.secondary.rng > input:disabled:active:hover::-ms-thumb {
    --btn--bg-c: #fff;
    --btn--bd-c: #fff;
    --btn--c: #aaa
}

.secondary.rng > input:disabled::-webkit-slider-thumb,
.secondary.rng > input:disabled:active::-webkit-slider-thumb,
.secondary.rng > input:disabled:active:hover::-webkit-slider-thumb {
    --btn--bg-c: #fff;
    --btn--bd-c: #fff;
    --btn--c: #aaa
}

.success.rng {
    --txt--c: #158646
}

.success.rng > input::-moz-range-track {
    background-color: rgba(28, 178, 93, .25)
}

.success.rng > input::-ms-track {
    background-color: rgba(28, 178, 93, .25)
}

.success.rng > input::-webkit-slider-runnable-track {
    background-color: rgba(28, 178, 93, .25)
}

.success.rng > input::-moz-range-thumb {
    --btn--bg-c: var(--color--success);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.success.rng > input::-ms-thumb {
    --btn--bg-c: var(--color--success);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.success.rng > input::-webkit-slider-thumb {
    --btn--bg-c: var(--color--success);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.success.rng > input:focus::-moz-range-thumb,
.success.rng > input:hover::-moz-range-thumb {
    --btn--bg-c: #24dd74;
    --btn--c: #000
}

.success.rng > input:focus::-ms-thumb,
.success.rng > input:hover::-ms-thumb {
    --btn--bg-c: #24dd74;
    --btn--c: #000
}

.success.rng > input:focus::-webkit-slider-thumb,
.success.rng > input:hover::-webkit-slider-thumb {
    --btn--bg-c: #24dd74;
    --btn--c: #000
}

.success.rng > input:active::-moz-range-thumb {
    --btn--bg-c: #1CB25D;
    --btn--bd-c: #0e5a2f #1CB25D #1CB25D;
    --btn--c: #000
}

.success.rng > input:active::-ms-thumb {
    --btn--bg-c: #1CB25D;
    --btn--bd-c: #0e5a2f #1CB25D #1CB25D;
    --btn--c: #000
}

.success.rng > input:active::-webkit-slider-thumb {
    --btn--bg-c: #1CB25D;
    --btn--bd-c: #0e5a2f #1CB25D #1CB25D;
    --btn--c: #000
}

.success.rng > input:active:hover::-moz-range-thumb {
    --btn--bd-c: #0e5a2f
}

.success.rng > input:active:hover::-ms-thumb {
    --btn--bd-c: #0e5a2f
}

.success.rng > input:active:hover::-webkit-slider-thumb {
    --btn--bd-c: #0e5a2f
}

.success.rng > input:disabled::-moz-range-thumb,
.success.rng > input:disabled:active::-moz-range-thumb,
.success.rng > input:disabled:active:hover::-moz-range-thumb {
    --btn--bg-c: #50e490;
    --btn--bd-c: #50e490;
    --btn--c: #0e5a2f
}

.success.rng > input:disabled::-ms-thumb,
.success.rng > input:disabled:active::-ms-thumb,
.success.rng > input:disabled:active:hover::-ms-thumb {
    --btn--bg-c: #50e490;
    --btn--bd-c: #50e490;
    --btn--c: #0e5a2f
}

.success.rng > input:disabled::-webkit-slider-thumb,
.success.rng > input:disabled:active::-webkit-slider-thumb,
.success.rng > input:disabled:active:hover::-webkit-slider-thumb {
    --btn--bg-c: #50e490;
    --btn--bd-c: #50e490;
    --btn--c: #0e5a2f
}

.info.rng {
    --txt--c: #867601
}

.info.rng > input::-moz-range-track {
    background-color: rgba(253, 230, 66, .25)
}

.info.rng > input::-ms-track {
    background-color: rgba(253, 230, 66, .25)
}

.info.rng > input::-webkit-slider-runnable-track {
    background-color: rgba(253, 230, 66, .25)
}

.info.rng > input::-moz-range-thumb {
    --btn--bg-c: var(--color--info);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.info.rng > input::-ms-thumb {
    --btn--bg-c: var(--color--info);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.info.rng > input::-webkit-slider-thumb {
    --btn--bg-c: var(--color--info);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.info.rng > input:focus::-moz-range-thumb,
.info.rng > input:hover::-moz-range-thumb {
    --btn--bg-c: #feed74;
    --btn--c: #000
}

.info.rng > input:focus::-ms-thumb,
.info.rng > input:hover::-ms-thumb {
    --btn--bg-c: #feed74;
    --btn--c: #000
}

.info.rng > input:focus::-webkit-slider-thumb,
.info.rng > input:hover::-webkit-slider-thumb {
    --btn--bg-c: #feed74;
    --btn--c: #000
}

.info.rng > input:active::-moz-range-thumb {
    --btn--bg-c: #FDE642;
    --btn--bd-c: #d7bd02 #FDE642 #FDE642;
    --btn--c: #000
}

.info.rng > input:active::-ms-thumb {
    --btn--bg-c: #FDE642;
    --btn--bd-c: #d7bd02 #FDE642 #FDE642;
    --btn--c: #000
}

.info.rng > input:active::-webkit-slider-thumb {
    --btn--bg-c: #FDE642;
    --btn--bd-c: #d7bd02 #FDE642 #FDE642;
    --btn--c: #000
}

.info.rng > input:active:hover::-moz-range-thumb {
    --btn--bd-c: #d7bd02
}

.info.rng > input:active:hover::-ms-thumb {
    --btn--bd-c: #d7bd02
}

.info.rng > input:active:hover::-webkit-slider-thumb {
    --btn--bd-c: #d7bd02
}

.info.rng > input:disabled::-moz-range-thumb,
.info.rng > input:disabled:active::-moz-range-thumb,
.info.rng > input:disabled:active:hover::-moz-range-thumb {
    --btn--bg-c: #fef3a7;
    --btn--bd-c: #fef3a7;
    --btn--c: #d7bd02
}

.info.rng > input:disabled::-ms-thumb,
.info.rng > input:disabled:active::-ms-thumb,
.info.rng > input:disabled:active:hover::-ms-thumb {
    --btn--bg-c: #fef3a7;
    --btn--bd-c: #fef3a7;
    --btn--c: #d7bd02
}

.info.rng > input:disabled::-webkit-slider-thumb,
.info.rng > input:disabled:active::-webkit-slider-thumb,
.info.rng > input:disabled:active:hover::-webkit-slider-thumb {
    --btn--bg-c: #fef3a7;
    --btn--bd-c: #fef3a7;
    --btn--c: #d7bd02
}

.warning.rng {
    --txt--c: #b35d00
}

.warning.rng > input::-moz-range-track {
    background-color: rgba(230, 120, 0, .25)
}

.warning.rng > input::-ms-track {
    background-color: rgba(230, 120, 0, .25)
}

.warning.rng > input::-webkit-slider-runnable-track {
    background-color: rgba(230, 120, 0, .25)
}

.warning.rng > input::-moz-range-thumb {
    --btn--bg-c: var(--color--warning);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.warning.rng > input::-ms-thumb {
    --btn--bg-c: var(--color--warning);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.warning.rng > input::-webkit-slider-thumb {
    --btn--bg-c: var(--color--warning);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #000
}

.warning.rng > input:focus::-moz-range-thumb,
.warning.rng > input:hover::-moz-range-thumb {
    --btn--bg-c: #ff911a;
    --btn--c: #000
}

.warning.rng > input:focus::-ms-thumb,
.warning.rng > input:hover::-ms-thumb {
    --btn--bg-c: #ff911a;
    --btn--c: #000
}

.warning.rng > input:focus::-webkit-slider-thumb,
.warning.rng > input:hover::-webkit-slider-thumb {
    --btn--bg-c: #ff911a;
    --btn--c: #000
}

.warning.rng > input:active::-moz-range-thumb {
    --btn--bg-c: #E67800;
    --btn--bd-c: #804300 #E67800 #E67800;
    --btn--c: #000
}

.warning.rng > input:active::-ms-thumb {
    --btn--bg-c: #E67800;
    --btn--bd-c: #804300 #E67800 #E67800;
    --btn--c: #000
}

.warning.rng > input:active::-webkit-slider-thumb {
    --btn--bg-c: #E67800;
    --btn--bd-c: #804300 #E67800 #E67800;
    --btn--c: #000
}

.warning.rng > input:active:hover::-moz-range-thumb {
    --btn--bd-c: #804300
}

.warning.rng > input:active:hover::-ms-thumb {
    --btn--bd-c: #804300
}

.warning.rng > input:active:hover::-webkit-slider-thumb {
    --btn--bd-c: #804300
}

.warning.rng > input:disabled::-moz-range-thumb,
.warning.rng > input:disabled:active::-moz-range-thumb,
.warning.rng > input:disabled:active:hover::-moz-range-thumb {
    --btn--bg-c: #ffaa4d;
    --btn--bd-c: #ffaa4d;
    --btn--c: #804300
}

.warning.rng > input:disabled::-ms-thumb,
.warning.rng > input:disabled:active::-ms-thumb,
.warning.rng > input:disabled:active:hover::-ms-thumb {
    --btn--bg-c: #ffaa4d;
    --btn--bd-c: #ffaa4d;
    --btn--c: #804300
}

.warning.rng > input:disabled::-webkit-slider-thumb,
.warning.rng > input:disabled:active::-webkit-slider-thumb,
.warning.rng > input:disabled:active:hover::-webkit-slider-thumb {
    --btn--bg-c: #ffaa4d;
    --btn--bd-c: #ffaa4d;
    --btn--c: #804300
}

.danger.rng {
    --txt--c: #DD1F26
}

.danger.rng > input::-moz-range-track {
    background-color: rgba(221, 31, 38, .25)
}

.danger.rng > input::-ms-track {
    background-color: rgba(221, 31, 38, .25)
}

.danger.rng > input::-webkit-slider-runnable-track {
    background-color: rgba(221, 31, 38, .25)
}

.danger.rng > input::-moz-range-thumb {
    --btn--bg-c: var(--color--danger);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #fff
}

.danger.rng > input::-ms-thumb {
    --btn--bg-c: var(--color--danger);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #fff
}

.danger.rng > input::-webkit-slider-thumb {
    --btn--bg-c: var(--color--danger);
    --btn--bd-c: var(--btn--bg-c);
    --btn--c: #fff
}

.danger.rng > input:focus::-moz-range-thumb,
.danger.rng > input:hover::-moz-range-thumb {
    --btn--bg-c: #e6494f;
    --btn--c: #000
}

.danger.rng > input:focus::-ms-thumb,
.danger.rng > input:hover::-ms-thumb {
    --btn--bg-c: #e6494f;
    --btn--c: #000
}

.danger.rng > input:focus::-webkit-slider-thumb,
.danger.rng > input:hover::-webkit-slider-thumb {
    --btn--bg-c: #e6494f;
    --btn--c: #000
}

.danger.rng > input:active::-moz-range-thumb {
    --btn--bg-c: #DD1F26;
    --btn--bd-c: #841217 #DD1F26 #DD1F26;
    --btn--c: #fff
}

.danger.rng > input:active::-ms-thumb {
    --btn--bg-c: #DD1F26;
    --btn--bd-c: #841217 #DD1F26 #DD1F26;
    --btn--c: #fff
}

.danger.rng > input:active::-webkit-slider-thumb {
    --btn--bg-c: #DD1F26;
    --btn--bd-c: #841217 #DD1F26 #DD1F26;
    --btn--c: #fff
}

.danger.rng > input:active:hover::-moz-range-thumb {
    --btn--bd-c: #841217
}

.danger.rng > input:active:hover::-ms-thumb {
    --btn--bd-c: #841217
}

.danger.rng > input:active:hover::-webkit-slider-thumb {
    --btn--bd-c: #841217
}

.danger.rng > input:disabled::-moz-range-thumb,
.danger.rng > input:disabled:active::-moz-range-thumb,
.danger.rng > input:disabled:active:hover::-moz-range-thumb {
    --btn--bg-c: #ec767b;
    --btn--bd-c: #ec767b;
    --btn--c: #841217
}

.danger.rng > input:disabled::-ms-thumb,
.danger.rng > input:disabled:active::-ms-thumb,
.danger.rng > input:disabled:active:hover::-ms-thumb {
    --btn--bg-c: #ec767b;
    --btn--bd-c: #ec767b;
    --btn--c: #841217
}

.danger.rng > input:disabled::-webkit-slider-thumb,
.danger.rng > input:disabled:active::-webkit-slider-thumb,
.danger.rng > input:disabled:active:hover::-webkit-slider-thumb {
    --btn--bg-c: #ec767b;
    --btn--bd-c: #ec767b;
    --btn--c: #841217
}

.capsule .rng,
.capsule.rng {
    --control__box--shape: var(--control__box--shape--capsule)
}

.round .rng,
.round.rng {
    --control__box--shape: var(--control__box--shape--round)
}

.square .rng,
.square.rng {
    --control__box--shape: var(--control__box--shape--square)
}

.xs .rng,
.xs.rng {
    --control__box--size: var(--control__box--size--xs)
}

.sm .rng,
.sm.rng {
    --control__box--size: var(--control__box--size--sm)
}

.md .rng,
.md.rng {
    --control__box--size: var(--control__box--size--md)
}

.lg .rng,
.lg.rng {
    --control__box--size: var(--control__box--size--lg)
}

.disabled.rng {
    cursor: not-allowed
}

.disabled.rng > small,
.disabled.rng > span {
    opacity: .75
}

.block.rng > input {
    flex-grow: 1
}

.capsule.rng {
    --control__box--shape: var(--control__box--shape--capsule)
}

.round.rng {
    --control__box--shape: var(--control__box--shape--round)
}

.square.rng {
    --control__box--shape: var(--control__box--shape--square)
}

.v.rng,
form.v .rng.ctrl {
    align-items: stretch;
    flex-direction: column
}

.v.rng > span,
form.v .rng.ctrl > span {
    line-height: var(--body--line-height);
    margin: 0 0 .25em
}

[dir=ltr] .v.rng > span,
[dir=ltr] form.v .rng.ctrl > span,
form.v [dir=ltr] .rng.ctrl > span {
    margin-right: 0
}

[dir=rtl] .v.rng > span,
[dir=rtl] form.v .rng.ctrl > span,
form.v [dir=rtl] .rng.ctrl > span {
    margin-left: 0
}

.v.rng > small,
form.v .rng.ctrl > small {
    margin: .25em 0 0
}

[dir=ltr] .v.rng > small,
[dir=ltr] form.v .rng.ctrl > small,
form.v [dir=ltr] .rng.ctrl > small {
    margin-left: 0
}

[dir=ltr] .rng > small,
[dir=rtl] .rng > span {
    margin-left: .5em
}

[dir=rtl] .v.rng > small,
[dir=rtl] form.v .rng.ctrl > small,
form.v [dir=rtl] .rng.ctrl > small {
    margin-right: 0
}

[dir=ltr] .rng > span,
[dir=rtl] .rng > small {
    margin-right: .5em
}

.rng > span {
    line-height: 2em
}

.rng > input {
    align-self: center;
    appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none;
    background: 0 0;
    border: 0;
    cursor: pointer;
    font-size: 1em;
    height: 2em;
    padding: 0;
    min-width: 10em
}

.rng > input:disabled {
    cursor: not-allowed
}

.rng > input:disabled::-moz-range-track {
    opacity: .75
}

.rng > input:disabled::-ms-track {
    opacity: .75
}

.rng > input:disabled::-webkit-slider-runnable-track {
    opacity: .75
}

.rng > input:disabled::-moz-range-thumb {
    box-shadow: none;
    cursor: not-allowed;
    opacity: .75
}

.rng > input:disabled::-ms-thumb {
    box-shadow: none;
    cursor: not-allowed;
    opacity: .75
}

.rng > input:disabled::-webkit-slider-thumb {
    box-shadow: none;
    cursor: not-allowed;
    opacity: .75
}

.rng > input::-moz-range-track {
    appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none;
    background-color: rgba(247, 247, 247, .5);
    border: 0;
    border-radius: var(--control__box--shape);
    box-shadow: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset;
    height: 2em
}

.rng > input::-ms-track {
    appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none;
    background-color: rgba(247, 247, 247, .5);
    border: 0;
    border-radius: var(--control__box--shape);
    box-shadow: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset;
    height: 2em
}

.rng > input::-webkit-slider-runnable-track {
    appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none;
    background-color: rgba(247, 247, 247, .5);
    border: 0;
    border-radius: var(--control__box--shape);
    box-shadow: 0 .0625rem .0625rem rgba(0, 0, 0, .15) inset, 0 0 .125rem rgba(0, 0, 0, .15) inset;
    height: 2em
}

.rng > input::-moz-range-thumb {
    box-shadow: 0 .5px 1px var(--box-shadow--color), 0 1px 2px var(--box-shadow--color);
    appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none;
    background-color: var(--btn--bg-c);
    border-color: var(--btn--bd-c);
    border-radius: var(--control__box--shape);
    border-style: solid;
    border-width: var(--control__box--border-width);
    box-sizing: border-box;
    cursor: ew-resize;
    height: 2em;
    min-width: 1em;
    width: 2em
}

.rng > input::-ms-thumb {
    box-shadow: 0 .5px 1px var(--box-shadow--color), 0 1px 2px var(--box-shadow--color);
    appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none;
    background-color: var(--btn--bg-c);
    border-color: var(--btn--bd-c);
    border-radius: var(--control__box--shape);
    border-style: solid;
    border-width: var(--control__box--border-width);
    box-sizing: border-box;
    cursor: ew-resize;
    height: 2em;
    min-width: 1em;
    width: 2em
}

.rng > input::-webkit-slider-thumb {
    box-shadow: 0 .5px 1px var(--box-shadow--color), 0 1px 2px var(--box-shadow--color);
    appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none;
    background-color: var(--btn--bg-c);
    border-color: var(--btn--bd-c);
    border-radius: var(--control__box--shape);
    border-style: solid;
    border-width: var(--control__box--border-width);
    box-sizing: border-box;
    cursor: ew-resize;
    height: 2em;
    min-width: 1em;
    width: 2em
}

.tbl.responsive--lg,
.tbl.responsive--md,
.tbl.responsive--sm,
.tbl.responsive--xs {
    width: 100%
}

.rng:not([for]),
.rng > input:not([id]),
.rng > input:not([type=range]),
.rng > small:not([id]) {
    border: .25rem dotted red !important
}

.rng > small {
    color: var(--txt--c);
    font-size: .875em;
    line-height: 1.25em
}

.rng:not([for])::before,
.rng > input:not([id])::before,
.rng > input:not([type=range])::before {
    display: inline-block;
    color: #fff;
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.rng:not([for]) {
    background-color: rgba(255, 0, 0, .1)
}

.rng:not([for])::before {
    background-color: red;
    content: 'This <label class="rng"> tag must have a non-empty for="" attribute. It must point at the child <input> ID. Example: <label class="rng" for="[ child input ID ]">.'
}

.rng > input:not([type=range]) {
    background-color: rgba(255, 0, 0, .1)
}

.rng > input:not([type=range])::before {
    background-color: red;
    content: 'This <input> tag must be of type="range". Example: <input type="range">.'
}

.rng > input:not([id]) {
    background-color: rgba(255, 0, 0, .1)
}

.rng > input:not([id])::before {
    background-color: red;
    content: 'This <input> tag must have a non-empty id="" attribute. Remember, the parent <label> for="" attribute must be this <input> ID. Example: <input id="[ some ID ]">.'
}

.rng > small:not([id]) {
    background-color: rgba(255, 0, 0, .1)
}

.rng > small:not([id])::before,
img:not([alt])::before,
img:not([src]):not([srcset])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.rng > small:not([id])::before {
    content: 'This <small> tag must have a non-empty id="" attribute. Remember, the precedent <input> tag must have a aria-describedby="" attribute whose value is this <small> tag ID. Example: <small id="[ some ID ]">.'
}

figure {
    margin: 0 0 var(--body--line-height)
}

figure:last-child {
    margin-bottom: 0
}

figcaption {
    color: #333;
    font-size: .875em
}

img {
    border-radius: 0
}

img:not([alt]),
img:not([src]):not([srcset]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

img:not([alt])::before {
    content: 'This <img> tag must have an alt="" attribute. Writing a value for ALT attribute is optional. Example: <img alt="">.'
}

img:not([src]):not([srcset])::before {
    content: 'This <img> tag must have a src="" OR a srcset="" attribute with a valid URL. Example: <img src="[ some URL ]"> OR <img srcset="[ some URL ]">.'
}

.tbl.xs td,
.tbl.xs th,
img.thumbnail {
    padding: .25em
}

img.capsule {
    border-radius: 1em
}

img.round {
    border-radius: .375em
}

img.square {
    border-radius: 0
}

img.grayscale {
    filter: grayscale(100%)
}

img.thumbnail {
    background-color: #fff;
    border: .0625em solid #f7f7f7;
    border-radius: .125em
}

.tbl {
    background-color: transparent;
    border-collapse: collapse;
    border-spacing: 0
}

.tbl.border tbody tr td,
.tbl.border tbody tr th {
    border-bottom: .0625rem solid rgba(221, 221, 221, .5)
}

.tbl.border tbody tr:last-child td,
.tbl.border tbody tr:last-child th {
    border-bottom: 0
}

.tbl.framed,
.tbl.framed td,
.tbl.framed th {
    border: rgba(221, 221, 221, .5) solid
}

.tbl.hover td:hover,
.tbl.hover th:hover,
.tbl.hover tr:hover {
    background-color: rgba(221, 221, 221, .5)
}

@media (max-width:479px) {
    .tbl.responsive--xs {
        display: block;
        overflow-x: auto
    }
}

@media (max-width:575px) {
    .tbl.responsive--sm {
        display: block;
        overflow-x: auto
    }
}

@media (max-width:767px) {
    .tbl.responsive--md {
        display: block;
        overflow-x: auto
    }
}

@media (max-width:991px) {
    .tbl.responsive--lg {
        display: block;
        overflow-x: auto
    }
}

.tbl.stripe--even tbody tr:nth-of-type(even),
.tbl.stripe--odd tbody tr:nth-of-type(odd) {
    background-color: rgba(221, 221, 221, .25)
}

.tbl caption {
    padding: .5em
}

.tbl caption.bottom {
    caption-side: bottom
}

.tbl td,
.tbl th {
    line-height: 1em;
    padding: .5em
}

.tbl thead td,
.tbl thead th {
    border-bottom: rgba(221, 221, 221, .5) solid .0625rem;
    vertical-align: bottom
}

.tbl tbody td,
.tbl tbody th {
    vertical-align: top
}

.tbl tfoot td,
.tbl tfoot th {
    border-top: rgba(221, 221, 221, .5) solid .0625rem;
    vertical-align: top
}

.tag {
    background-color: var(--color-secondary);
    border-color: #c4c4c4;
    border-radius: .125em;
    border-style: solid;
    border-width: .0625em;
    color: #000;
    padding: 0 .125em
}

.tag.primary {
    background-color: var(--color--primary);
    border-color: #0046b3;
    color: #fff
}

.tag.secondary {
    background-color: var(--color--secondary);
    border-color: #c4c4c4;
    color: #000
}

.tag.success {
    background-color: var(--color--success);
    border-color: #158646;
    color: #000
}

.tag.info {
    background-color: var(--color--info);
    border-color: #fcdf10;
    color: #000
}

.tag.warning {
    background-color: var(--color--warning);
    border-color: #b35d00;
    color: #000
}

.tag.danger {
    background-color: var(--color--danger);
    border-color: #b0191e;
    color: #fff
}

[class^=alert] {
    background-color: var(--body--background-color);
    border-radius: .375em;
    border-style: solid;
    padding: 1rem
}

[dir=ltr] [class^=alert] {
    border-width: .0625rem .0625rem .0625rem .25rem
}

[dir=rtl] [class^=alert] {
    border-width: .0625rem .25rem .0625rem .0625rem
}

[class^=alert].primary {
    border-color: #005AE6
}

[class^=alert].primary h4 {
    color: #005AE6
}

[class^=alert].secondary {
    border-color: #747474
}

[class^=alert].secondary h4 {
    color: #747474
}

[class^=alert].success {
    border-color: #158646;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(21,134,70)"%3E%3Cpath d="M10 28c-.512 0-1.024-.195-1.414-.586l-8-8c-.78-.78-.78-2.047 0-2.828.78-.78 2.048-.78 2.828 0L10 23.172 28.586 4.586c.78-.78 2.047-.78 2.828 0 .78.78.78 2.047 0 2.828l-20 20c-.39.39-.902.586-1.414.586z"/%3E%3C/svg%3E')
}

[class^=alert].success h4 {
    color: #158646
}

[class^=alert].info {
    border-color: #867601;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(134,118,1)"%3E%3Cpath d="M20 23h-3V13c0-.552-.447-1-1-1h-4c-.552 0-1 .448-1 1s.448 1 1 1h3v9h-3c-.552 0-1 .447-1 1s.448 1 1 1h8c.553 0 1-.447 1-1s-.447-1-1-1z"/%3E%3Ccircle cx="16" cy="8" r="2"/%3E%3Cpath d="M16 1c8.27 0 15 6.73 15 15s-6.73 15-15 15S1 24.27 1 16 7.73 1 16 1m0-1C7.164 0 0 7.164 0 16c0 8.837 7.164 16 16 16 8.837 0 16-7.163 16-16 0-8.836-7.163-16-16-16z"/%3E%3C/svg%3E')
}

[class^=alert].info h4 {
    color: #867601
}

[class^=alert].warning {
    border-color: #b35d00;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(179,93,0)"%3E%3Cpath d="M16 1c8.3 0 15 6.7 15 15s-6.7 15-15 15S1 24.3 1 16 7.7 1 16 1m0-1C7.2 0 0 7.2 0 16s7.2 16 16 16 16-7.2 16-16S24.8 0 16 0z"/%3E%3Ccircle cx="16" cy="24" r="2"/%3E%3Cpath d="M17 18h-2L14 6h4l-1 12z"/%3E%3C/svg%3E')
}

[class^=alert].warning h4 {
    color: #b35d00
}

[class^=alert].danger {
    border-color: #DD1F26;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(221,31,38)"%3E%3Cpath d="M16 1c8.3 0 15 6.7 15 15s-6.7 15-15 15S1 24.3 1 16 7.7 1 16 1m0-1C7.2 0 0 7.2 0 16s7.2 16 16 16 16-7.2 16-16S24.8 0 16 0z"/%3E%3Cpath d="M14.6 16L8.3 9.7c-.4-.4-.4-1 0-1.4.4-.4 1-.4 1.4 0l6.3 6.3 6.3-6.3c.4-.4 1-.4 1.4 0 .4.4.4 1 0 1.4L17.4 16l6.3 6.3c.4.4.4 1 0 1.4-.4.4-1 .4-1.4 0L16 17.4l-6.3 6.3c-.4.4-1 .4-1.4 0-.4-.4-.4-1 0-1.4l6.3-6.3z"/%3E%3C/svg%3E')
}

[class^=alert].danger h4 {
    color: #DD1F26
}

[class^=alert].danger,
[class^=alert].info,
[class^=alert].success,
[class^=alert].warning {
    background-repeat: no-repeat;
    background-size: 1.5rem
}

[dir=ltr] [class^=alert].danger,
[dir=ltr] [class^=alert].info,
[dir=ltr] [class^=alert].success,
[dir=ltr] [class^=alert].warning {
    background-position: 1rem 1rem;
    padding-left: 3.5rem
}

[dir=rtl] [class^=alert].danger,
[dir=rtl] [class^=alert].info,
[dir=rtl] [class^=alert].success,
[dir=rtl] [class^=alert].warning {
    background-position: calc(100% - ($alert__icon--size / 2)) 1rem;
    padding-right: 3.5rem
}

[class^=alert] h4 {
    font-size: 1.5rem;
    font-weight: 400;
    line-height: 1em;
    margin: 0 0 1rem
}

.alert:not([role=alert]),
[class^=alert] h4:not([id]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.alert:not([role=alert])::before,
[class^=alert] h4:not([id])::before {
    font-weight: 700;
    display: inline-block;
    color: #fff;
    font-size: 16px;
    padding: .125rem .25rem;
    background-color: red
}

[class^=alert] h4:not([id])::before {
    content: 'This <h4> tag must have an id="" attribute. Example: <h4 id="[ some ID ]">. Remember, the tag with role="alert" (or role="alertdialog") that is parent of this <h4> tag must have an aria-labelledby="" attribute value that matches the id="" of this <h4> tag. Example: <tag role="alert (or  alertdialog)" aria-labelledby="[ this <h4> tag ID ]">.'
}

[class^=alert] ol,
[class^=alert] p,
[class^=alert] ul {
    margin-bottom: 1rem
}

[class^=alert] ol:last-child,
[class^=alert] p:last-child,
[class^=alert] ul:last-child {
    margin-bottom: 0
}

[class^=alert] p {
    width: 100%
}

.alert:not([role=alert])::before {
    content: 'This <tag> with class="alert" must have a role="alert" attribute. Example: <tag class="alert" role="alert">.'
}

.alertdialog {
    box-shadow: 0 12px 24px var(--box-shadow--color), 0 24px 48px var(--box-shadow--color);
    z-index: 24
}

.alertdialog:not([role=alertdialog]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.alertdialog:not([role=alertdialog])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This <tag> with class="alertdialog" must have a role="alertdialog" attribute. Example: <tag class="alertdialog" role="alertdialog">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.alertdialog:not([aria-labelledby]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.alertdialog:not([aria-labelledby])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This tag with role="alertdialog" must have an aria-labelledby="" attribute. The value of the aria-labelledby="" attribute must be the id="" value of the <h4> in <header>. Example: <tag role="alertdialog" aria-labelledby="[ <h4> tag ID ]">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.alertdialog:not([aria-describedby]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.alertdialog:not([aria-describedby])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This tag with role="alertdialog" must have an aria-describedby="" attribute. The value of the aria-describedby="" attribute must be the id="" value of the <div> that follows <header>: <tag aria-describedby="[ <div> tag ID ]">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.alertdialog header + div:not([id]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.alertdialog header + div:not([id])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This <div> tag must have an id="" attribute. Example: <div id="[ some ID ]">. Remember, the role="alertdialog" that is parent of this <div> tag must have an aria-describedby="" attribute value that matches the id="" of this <div> tag. Example: <tag role="alertdialog" aria-describedby="[ this <div> tag ID ]">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.alertdialog header + div:not([tabindex]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.alertdialog header + div:not([tabindex])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'Make this content focusable using tabindex="0". Example: <div tabindex="0">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.alertdialog header + div:not([role=document]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.alertdialog header + div:not([role=document])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This <div> tag must have a role="document" attribute. Example: <div role="document">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.app.bar,
.bar {
    background-color: var(--body--background-color);
    color: var(--body--color)
}

.alertdialog footer {
    align-items: center;
    border-top: solid .0625rem #fff;
    display: flex;
    justify-content: flex-end;
    margin-top: 1rem;
    padding-top: 1rem
}

[dir=ltr] .alertdialog footer > * {
    margin-right: 1rem
}

[dir=ltr] .alertdialog footer > :last-child {
    margin-right: 0
}

[dir=rtl] .alertdialog footer > * {
    margin-left: 1rem
}

[dir=rtl] .alertdialog footer > :last-child {
    margin-left: 0
}

[dir=ltr] .alertdialog footer .space--before,
[dir=rtl] .alertdialog footer .space--after {
    margin-left: auto
}

[dir=ltr] .alertdialog footer .space--after,
[dir=rtl] .alertdialog footer .space--before {
    margin-right: auto
}

.js body.app-bar--top {
    padding-top: var(--app-bar--height)
}

.js body.app-bar--top--double {
    padding-top: calc(2 * var(--app-bar--height))
}

.js body.app-bar--bottom {
    padding-bottom: var(--app-bar--height)
}

.js body.app-bar--bottom--double {
    padding-bottom: calc(2 * var(--app-bar--height))
}

.bar {
    align-items: center;
    display: flex;
    min-height: var(--app-bar--height);
    padding: 0
}

.bar.double {
    min-height: calc(2 * var(--app-bar--height))
}

.bar ul {
    display: inline-flex;
    flex-direction: row;
    margin: 0;
    padding: 0
}

[dir=ltr] .bar .space--before,
[dir=rtl] .bar .space--after {
    margin-left: auto
}

.bar ul li {
    padding: .5rem;
    text-align: center
}

@media (min-width:480px) {
    .bar .xs--down {
        display: none
    }
}

@media (max-width:479px) {
    .bar .xs--up {
        display: none
    }
}

@media (min-width:576px) {
    .bar .sm--down {
        display: none
    }
}

@media (max-width:575px) {
    .bar .sm--up {
        display: none
    }
}

@media (min-width:992px) {
    .bar .lg--down {
        display: none
    }
}

@media (max-width:991px) {
    .bar .lg--up {
        display: none
    }
}

@media (min-width:1200px) {
    .bar .xl--down {
        display: none
    }
}

@media (max-width:1199px) {
    .bar .xl--up {
        display: none
    }
}

@media (min-width:768px) {

    .bar .md--down,
    .bar .mobile--down {
        display: none
    }
}

@media (max-width:767px) {

    .bar .md--up,
    .bar .mobile--up {
        display: none
    }
}

[dir=ltr] .bar .space--after,
[dir=rtl] .bar .space--before {
    margin-right: auto
}

.bar [class*=bar-btn] {
    border-radius: 0;
    font-size: inherit;
    height: var(--app-bar--height);
    min-width: var(--app-bar--height);
    padding: .5rem
}

.bar .bar-btn-icn > img,
.bar .bar-btn-icn > svg {
    height: 1.5em;
    width: 1.5em
}

.bar .bar-btn-icn-txt.v > img,
.bar .bar-btn-icn-txt.v > svg,
.bar .bar-btn-icn-txt > img,
.bar .bar-btn-icn-txt > svg,
.bar form.v .bar-btn-icn-txt.ctrl.rng > img,
.bar form.v .bar-btn-icn-txt.ctrl.rng > svg,
.bar form.v .bar-btn-icn-txt.ctrl.sel-mul > img,
.bar form.v .bar-btn-icn-txt.ctrl.sel-mul > svg,
.bar form.v .bar-btn-icn-txt.ctrl.sel > img,
.bar form.v .bar-btn-icn-txt.ctrl.sel > svg,
.bar form.v .bar-btn-icn-txt.ctrl.txt > img,
.bar form.v .bar-btn-icn-txt.ctrl.txt > svg,
.bar form.v .bar-btn-icn-txt.ctrl.txta > img,
.bar form.v .bar-btn-icn-txt.ctrl.txta > svg,
form.v .bar .bar-btn-icn-txt.ctrl.rng > img,
form.v .bar .bar-btn-icn-txt.ctrl.rng > svg,
form.v .bar .bar-btn-icn-txt.ctrl.sel-mul > img,
form.v .bar .bar-btn-icn-txt.ctrl.sel-mul > svg,
form.v .bar .bar-btn-icn-txt.ctrl.sel > img,
form.v .bar .bar-btn-icn-txt.ctrl.sel > svg,
form.v .bar .bar-btn-icn-txt.ctrl.txt > img,
form.v .bar .bar-btn-icn-txt.ctrl.txt > svg,
form.v .bar .bar-btn-icn-txt.ctrl.txta > img,
form.v .bar .bar-btn-icn-txt.ctrl.txta > svg {
    height: 1.25em;
    width: 1.25em
}

.bar a.bar-btn-icn {
    line-height: 2.875em
}

.bar .bar-btn-icn-txt.v > span,
.bar form.v .bar-btn-icn-txt.ctrl.rng > span,
.bar form.v .bar-btn-icn-txt.ctrl.sel-mul > span,
.bar form.v .bar-btn-icn-txt.ctrl.sel > span,
.bar form.v .bar-btn-icn-txt.ctrl.txt > span,
.bar form.v .bar-btn-icn-txt.ctrl.txta > span,
form.v .bar .bar-btn-icn-txt.ctrl.rng > span,
form.v .bar .bar-btn-icn-txt.ctrl.sel-mul > span,
form.v .bar .bar-btn-icn-txt.ctrl.sel > span,
form.v .bar .bar-btn-icn-txt.ctrl.txt > span,
form.v .bar .bar-btn-icn-txt.ctrl.txta > span {
    font-size: .875em
}

.bar a.bar-btn-icn-txt {
    line-height: 2.5em
}

.bar a.bar-btn-icn-txt.v,
.bar form.v a.bar-btn-icn-txt.ctrl.rng,
.bar form.v a.bar-btn-icn-txt.ctrl.sel,
.bar form.v a.bar-btn-icn-txt.ctrl.sel-mul,
.bar form.v a.bar-btn-icn-txt.ctrl.txt,
.bar form.v a.bar-btn-icn-txt.ctrl.txta,
form.v .bar a.bar-btn-icn-txt.ctrl.rng,
form.v .bar a.bar-btn-icn-txt.ctrl.sel,
form.v .bar a.bar-btn-icn-txt.ctrl.sel-mul,
form.v .bar a.bar-btn-icn-txt.ctrl.txt,
form.v .bar a.bar-btn-icn-txt.ctrl.txta {
    line-height: 1em
}

.app.bar {
    font-size: 1em;
    max-height: 60vh;
    padding: 0;
    width: 100%;
    z-index: 4
}

.app.bar:not([id]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.app.bar:not([id])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This <header class="app bar"> tag must have a non-empty id="" attribute. Example: <header class="app bar" id="[ some ID ]">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.js .app.bar {
    left: 0;
    position: fixed
}

@media (max-width:767px) {
    .app.bar {
        align-items: stretch;
        flex-direction: column
    }
}

@media (min-width:768px) {
    .app.bar {
        flex-direction: row
    }
}

.app.bar.top {
    box-shadow: 0 2px 4px var(--box-shadow--color), 0 4px 8px var(--box-shadow--color)
}

.js .app.bar.top {
    top: var(--app-bar--top)
}

.app.bar.bottom {
    box-shadow: 0 -2px 4px var(--box-shadow--color), 0 -4px 8px var(--box-shadow--color)
}

.js .app.bar.bottom {
    bottom: var(--app-bar--bottom)
}

.app.bar > header {
    align-items: center;
    display: flex;
    min-height: var(--app-bar--height)
}

.app.bar > header > h1 {
    align-items: center;
    background-color: transparent;
    color: var(--body--color);
    display: inline-flex;
    font-size: 1.125em;
    font-weight: 400;
    height: var(--app-bar--height);
    line-height: 1em;
    margin-bottom: 0
}

.app.bar > header > h1 img,
.app.bar > header > h1 svg {
    height: 2rem;
    width: 2rem
}

.app.bar > header > h1 svg {
    color: currentColor
}

[dir=ltr] .app.bar > header > h1 span {
    margin-left: .5rem
}

[dir=rtl] .app.bar > header > h1 span {
    margin-right: .5rem
}

.app.bar > header > h1 > a {
    align-items: center;
    background-color: inherit;
    border-bottom: 0;
    border-radius: 0;
    color: inherit;
    display: inline-flex;
    font-size: inherit;
    height: inherit;
    line-height: inherit;
    padding: .5rem 1rem;
    text-decoration: none
}

.app.bar button.toggler:not([aria-controls])::before,
.app.bar button.toggler:not([aria-expanded=true]):not([aria-expanded=false])::before,
.app.bar button.toggler:not([aria-haspopup=true])::before,
.app.bar button.toggler:not([id])::before,
.app.bar > nav:not([role=navigation])::before {
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem;
    display: inline-block
}

.app.bar > header > h1 > a:focus,
.app.bar > header > h1 > a:hover {
    background-color: transparent;
    color: var(--body--color)
}

.app.bar button.toggler:not([id]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.app.bar button.toggler:not([id])::before {
    background-color: red;
    color: #fff;
    content: 'This <button class="toggler"> tag must have a non-empty id="" attribute. Example: <button class="toggler" id="[ some ID ]">.'
}

.app.bar button.toggler:not([aria-controls]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.app.bar button.toggler:not([aria-controls])::before {
    background-color: red;
    color: #fff;
    content: 'This <button class="toggler"> tag must have a not empty aria-controls="" attribute with the ID attribute of the element it toggles. Example: <button class="toggler" aria-controls="[ The toggled element ID ]">.'
}

.app.bar button.toggler:not([aria-haspopup=true]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.app.bar button.toggler:not([aria-haspopup=true])::before {
    background-color: red;
    color: #fff;
    content: 'This <button class="toggler"> tag must have a aria-haspopup="true" attribute. Example: <button class="toggler" aria-haspopup="true">.'
}

.app.bar button.toggler:not([aria-expanded=true]):not([aria-expanded=false]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.app.bar button.toggler:not([aria-expanded=true]):not([aria-expanded=false])::before {
    background-color: red;
    color: #fff;
    content: 'This <button class="toggler"> tag must have a true OR false aria-expanded="" attribute. Example: <button class="toggler" aria-expanded="[ true OR false ]">.'
}

.app.bar button.toggler:not([type=button]),
.app.bar button.toggler[type=reset],
.app.bar button.toggler[type=submit] {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.app.bar button.toggler:not([type=button])::before,
.app.bar button.toggler[type=reset]::before,
.app.bar button.toggler[type=submit]::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This <button class="toggler"> tag must have a type="button" attribute. Example: <button class="toggler" type="button">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.app.bar > nav {
    max-height: calc(60vh - var(--app-bar--height));
    overflow: auto
}

.app.bar > nav:not([role=navigation]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.app.bar > nav:not([role=navigation])::before {
    background-color: red;
    color: #fff;
    content: 'This <nav> tag must have a role="navigation" attribute. Example: <nav role="navigation">.'
}

@media (min-width:768px) {
    .app.bar > nav {
        flex-grow: 1
    }
}

.app.bar .subheading {
    display: flex;
    min-height: var(--app-bar--height)
}

.app.bar .subheading:not([id]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.app.bar .subheading:not([id])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This <div class="subheading"> tag must have a non-empty id="" attribute. Example: <div class="subheading" id="[ some ID ]">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.app.bar .subheading:not([aria-hidden=true]):not([aria-hidden=false]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.app.bar .subheading:not([aria-hidden=true]):not([aria-hidden=false])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This <div class="subheading"> tag must have a true OR false aria-hidden="" attribute. Example: <div class="subheading" aria-hidden="[ true OR false ]">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.app.bar .subheading[aria-hidden=false] {
    display: flex
}

.app.bar .subheading[aria-hidden=true] {
    display: none
}

@media (max-width:767px) {

    .app.bar > nav .space--after,
    .app.bar > nav .space--before {
        margin-left: 0;
        margin-right: 0
    }

    .app.bar .subheading {
        align-items: stretch;
        flex-direction: column
    }
}

@media (min-width:768px) {
    .app.bar .subheading {
        align-items: center;
        flex-direction: row
    }
}

@media (max-width:767px) {
    .app.bar .subheading ul {
        flex-direction: column
    }
}

@media (min-width:768px) {
    .app.bar .subheading ul {
        flex-direction: row
    }
}

div.breadcrumbs:not([role=navigation]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

div.breadcrumbs:not([role=navigation])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This <div class="breadcrumbs"> must have role="navigation". Example: <div class="breadcrumbs"  role="navigation">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.breadcrumbs {
    display: inline-block;
    margin: 0
}

.breadcrumbs:not([aria-label]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.breadcrumbs:not([aria-label])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This tag with class class="breadcrumbs" must have a non empty aria-label="" to be named. Example: <tag class="breadcrumbs" aria-label="[ tag.breadcrumbs name ]">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.breadcrumbs > ol {
    display: inline-flex;
    padding: 0
}

.breadcrumbs > ol > li {
    align-items: center;
    background-repeat: no-repeat;
    background-size: 1em;
    display: inline-flex
}

[dir=ltr] .breadcrumbs > ol > li {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(221,221,221)"%3E%3Cpath d="M25 16c0 .512-.195 1.023-.586 1.414l-14 14c-.78.78-2.047.78-2.828 0-.78-.78-.78-2.048 0-2.828L20.172 16 7.586 3.414c-.78-.78-.78-2.047 0-2.828.78-.78 2.047-.78 2.828 0l14 14c.39.39.586.902.586 1.414z"/%3E%3C/svg%3E');
    background-position: .25em center;
    padding-left: 1.5em
}

[dir=ltr] .breadcrumbs > ol > li:first-child {
    background: 0 0;
    padding-left: 0
}

[dir=rtl] .breadcrumbs > ol > li {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="rgb(221,221,221)"%3E%3Cpath d="M7 16c0-.512.195-1.024.586-1.414l14-14c.78-.78 2.047-.78 2.828 0 .78.78.78 2.048 0 2.828L11.828 16l12.586 12.586c.78.78.78 2.047 0 2.828s-2.047.78-2.828 0l-14-14C7.196 17.024 7 16.512 7 16z"/%3E%3C/svg%3E');
    background-position: center right .25em;
    padding-right: 1.5em
}

[dir=rtl] .breadcrumbs > ol > li:first-child {
    background: 0 0;
    padding-right: 0
}

.card > .content,
.card > header {
    padding: 1rem
}

.card {
    background-color: #fff;
    border-radius: var(--control__box--shape);
    overflow: hidden;
    box-shadow: 0 .5px 1px var(--box-shadow--color), 0 1px 2px var(--box-shadow--color)
}

.card.primary {
    background-color: var(--color--primary);
    color: #fff;
    --txt--c: #fff
}

.card.info,
.card.secondary,
.card.success,
.card.warning {
    color: #000;
    --txt--c: #000
}

.card.secondary {
    background-color: var(--color--secondary)
}

.card.success {
    background-color: var(--color--success)
}

.card.info {
    background-color: var(--color--info)
}

.card.warning {
    background-color: var(--color--warning)
}

.card.danger {
    background-color: var(--color--danger);
    color: #fff;
    --txt--c: #fff
}

.card.elevated {
    box-shadow: 0 4px 8px var(--box-shadow--color), 0 8px 16px var(--box-shadow--color)
}

.card.capsule {
    --control__box--shape: var(--control__box--shape--capsule)
}

.card.round {
    --control__box--shape: var(--control__box--shape--round)
}

.card.square {
    --control__box--shape: var(--control__box--shape--square)
}

.card > img,
.card > video {
    width: 100%
}

.card > header {
    font-size: 1.5rem
}

.card > header > .heading {
    font-size: 1.5rem;
    font-weight: 400;
    margin-bottom: .5rem
}

.card > header > .heading + p {
    font-size: .875rem;
    line-height: 1.5em;
    max-width: 100%
}

.card > header + .content {
    padding-top: 0
}

.card > footer {
    align-items: center;
    border-top: solid .0625rem #DDD;
    display: flex;
    justify-content: flex-end;
    padding: 1rem
}

[dir=ltr] .card > footer > * {
    margin-right: 1rem
}

[dir=ltr] .card > footer > :last-child {
    margin-right: 0
}

[dir=rtl] .card > footer > * {
    margin-left: 1rem
}

[dir=rtl] .card > footer > :last-child {
    margin-left: 0
}

[dir=ltr] .card > footer .space--before,
[dir=rtl] .card > footer .space--after {
    margin-left: auto
}

[dir=ltr] .card > footer .space--after,
[dir=rtl] .card > footer .space--before {
    margin-right: auto
}

.card .list {
    margin: 0;
    padding: 0
}

.card .list > li {
    border-bottom: solid .0625rem #DDD;
    padding: 1rem
}

.card .list > li:last-child {
    border-bottom: 0
}

.card .list > li .heading {
    display: block;
    font-size: 1em;
    line-height: 1.125em
}

.card .list > li .description {
    display: block;
    font-size: .875em;
    line-height: 1.5em
}

.card .list + footer {
    border-top: none
}

.card > .content > .list > li {
    padding: 1rem 0
}

a.card {
    color: inherit;
    display: block;
    text-decoration: none
}

.disclosure > h3 {
    border-bottom: #fff solid .0625rem;
    display: block;
    font-size: 1em;
    font-weight: 400;
    line-height: 1em;
    margin: 0;
    padding: 0
}

.disclosure > h3:not([id]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.disclosure > h3:not([id])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This <h3> must have a not empty id="" attribute. Example: <h3 id="[ some ID ]">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.disclosure > h3 > button {
    background-color: transparent;
    border: 0;
    border-radius: 0;
    color: inherit;
    cursor: pointer;
    font-size: inherit;
    padding: .125rem 0;
    width: 100%
}

.disclosure > div:not([aria-hidden=true]):not([aria-hidden=false])::before,
.disclosure > div:not([aria-labelledby])::before,
.disclosure > div:not([id])::before,
.disclosure > h3 > button:not([aria-controls])::before,
.disclosure > h3 > button:not([aria-expanded=true]):not([aria-expanded=false])::before,
.disclosure > h3 > button:not([type=button])::before {
    display: inline-block;
    color: #fff;
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.disclosure > h3 > button:not([aria-controls]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.disclosure > h3 > button:not([aria-controls])::before {
    background-color: red;
    content: 'This <button> must have an aria-controls="" attribute. The value of the aria-controls="" attribute must be the ID of this disclosure content. Example: <div aria-labelledby="[ this disclosure content ID ]">.'
}

.disclosure > h3 > button:not([aria-expanded=true]):not([aria-expanded=false]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.disclosure > h3 > button:not([aria-expanded=true]):not([aria-expanded=false])::before {
    background-color: red;
    content: 'This <button> must have a true OR false aria-expanded="" attribute. Example: <button aria-expanded="[ true OR false ]">.'
}

.disclosure > h3 > button:not([type=button]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.disclosure > h3 > button:not([type=button])::before {
    background-color: red;
    content: 'This <button> must have a role="button" attribute. Example: <button role="button">.'
}

[dir=ltr] .disclosure > h3 > button {
    text-align: left
}

[dir=rtl] .disclosure > h3 > button {
    text-align: right
}

.disclosure > h3 > button > img {
    height: 1em;
    width: 1em
}

[dir=ltr] .disclosure > h3 > button > img {
    float: right
}

[dir=ltr] form.classic .ctrl span:first-of-type,
[dir=rtl] .disclosure > h3 > button > img {
    float: left
}

.disclosure > div:not([id]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.disclosure > div:not([id])::before {
    background-color: red;
    content: 'This <div> must have a not empty id="" attribute. Example: <div id="[ some ID ]">.'
}

.disclosure > div:not([aria-labelledby]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.disclosure > div:not([aria-labelledby])::before {
    background-color: red;
    content: 'This <div> must have an aria-labelledby="" attribute. The value of the aria-labelledby="" attribute must be the ID of this disclosure heading. Example: <div aria-labelledby="[ this disclosure heading ID ]">.'
}

.disclosure > div:not([aria-hidden=true]):not([aria-hidden=false]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.disclosure > div:not([aria-hidden=true]):not([aria-hidden=false])::before {
    background-color: red;
    content: 'This <div> must have a true OR false aria-hidden="" attribute. Example: <div aria-hidden="[ true OR false ]">.'
}

.disclosure > div[aria-hidden=true] {
    display: none
}

.drawer--toggler:not([aria-controls])::before,
.drawer--toggler:not([aria-expanded=true]):not([aria-expanded=false])::before,
.drawer--toggler:not([aria-haspopup=true])::before,
.drawer--toggler:not([id])::before,
.drawer:not([id])::before {
    display: inline-block;
    color: #fff;
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.drawer--toggler:not([id]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.drawer--toggler:not([id])::before {
    background-color: red;
    content: 'This <button class="drawer--toggle"> tag must have a not empty aria-controls="" attribute with the id="" attribute of the drawer it toggles. Example: <button class="drawer--toggle" aria-controls="[ The toggled drawer ID ]">.'
}

.drawer--toggler:not([aria-controls]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.drawer--toggler:not([aria-controls])::before {
    background-color: red;
    content: 'This <button class="drawer--toggle"> tag must have a not empty aria-controls="" attribute with the id="" attribute of the drawer it toggles. Example: <button class="drawer--toggle" aria-controls="[ The toggled drawer ID ]">.'
}

.drawer--toggler:not([aria-haspopup=true]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.drawer--toggler:not([aria-haspopup=true])::before {
    background-color: red;
    content: 'This <button class="drawer--toggle"> tag must have a aria-haspopup="true" attribute. Example: <button class="drawer--toggle" aria-haspopup="true">.'
}

.drawer--toggler:not([aria-expanded=true]):not([aria-expanded=false]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.drawer--toggler:not([aria-expanded=true]):not([aria-expanded=false])::before {
    background-color: red;
    content: 'This <button class="drawer--toggle"> tag must have a true OR false aria-expanded="" attribute. Example: <button class="drawer--toggle" aria-expanded="[ true OR false ]">.'
}

.drawer {
    background-color: #fff;
    bottom: 0;
    overflow-y: auto;
    position: fixed;
    top: 0;
    width: 16rem;
    max-width: calc(100% - var(--app-bar--height));
    z-index: 16
}

.drawer:not([id]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.drawer:not([id])::before {
    background-color: red;
    content: 'This <div class="drawer"> tag must have a non-empty id="" attribute. Example: <div class="drawer" id="[ some ID ]">.'
}

[dir=ltr] .drawer[aria-hidden=false].left {
    box-shadow: 8px 0 16px var(--box-shadow--color), 16px 0 32px var(--box-shadow--color);
    left: 0
}

[dir=ltr] .drawer[aria-hidden=false].right,
[dir=rtl] .drawer[aria-hidden=false].left {
    box-shadow: -8px 0 16px var(--box-shadow--color), -16px 0 32px var(--box-shadow--color);
    right: 0
}

[dir=rtl] .drawer[aria-hidden=false].right {
    box-shadow: 8px 0 16px var(--box-shadow--color), 16px 0 32px var(--box-shadow--color);
    left: 0
}

[dir=ltr] .drawer[aria-hidden=true].left,
[dir=rtl] .drawer[aria-hidden=true].right {
    box-shadow: 0 0 0 var(--box-shadow--color), 0 0 0 var(--box-shadow--color);
    left: -16rem
}

[dir=ltr] .drawer[aria-hidden=true].right,
[dir=rtl] .drawer[aria-hidden=true].left {
    box-shadow: 0 0 0 var(--box-shadow--color), 0 0 0 var(--box-shadow--color);
    right: -16rem
}

.drawer.app-bar--top {
    top: var(--app-bar--height);
    z-index: 4
}

.drawer.app-bar--top--double {
    top: calc(2 * var(--app-bar--height))
}

.drawer > ol,
.drawer > ul {
    padding: 0
}

.drawer > ol li,
.drawer > ul li {
    padding: .5em
}

.flag {
    display: inline-flex;
    font-size: var(--control__box--size);
    padding: 0
}

.flag.xs {
    --control__box--size: var(--control__box--size--xs)
}

.flag.sm {
    --control__box--size: var(--control__box--size--sm)
}

.flag.md {
    --control__box--size: var(--control__box--size--md)
}

.flag.lg {
    --control__box--size: var(--control__box--size--lg)
}

.flag.block {
    width: 100%
}

.flag.flip {
    flex-direction: row-reverse
}

[dir=ltr] .flag.flip .visual {
    margin: 0 0 0 .5em
}

[dir=ltr] .flag .visual,
[dir=rtl] .flag.flip .visual {
    margin: 0 .5em 0 0
}

.flag .visual {
    height: 2em;
    min-height: 2em;
    min-width: 2em;
    width: 2em
}

[dir=rtl] .flag .visual {
    margin: 0 0 0 .5em
}

.flag .visual > img,
.flag .visual > svg {
    width: 100%
}

.flag .textual {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    justify-content: center
}

.flag .textual > :first-child {
    font-size: 1em;
    line-height: 1.125em
}

.flag .textual > :nth-child(2) {
    font-size: .875em;
    line-height: 1.5em
}

div.flyout .title:not([aria-expanded=true]):not([aria-expanded=false])::before,
div.flyout .title:not([aria-haspopup=true])::before,
div.flyout .title:not([id])::before {
    display: inline-block;
    color: #fff;
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

div.flyout {
    display: inline-block;
    position: relative
}

div.flyout.down .content {
    top: 1.5em
}

div.flyout.up .content {
    bottom: 1.5em
}

div.flyout .title:not([id]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

div.flyout .title:not([id])::before {
    background-color: red;
    content: 'This tag with class="title" must have a not empty id="" attribute. Example: <tag class="title" id="[ some ID ]">.'
}

div.flyout .title:not([aria-expanded=true]):not([aria-expanded=false]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

div.flyout .title:not([aria-expanded=true]):not([aria-expanded=false])::before {
    background-color: red;
    content: 'This tag with class="title" must have a true OR false aria-expanded="" attribute. Example: <tag class="title" aria-expanded="[ true OR false ]">.'
}

div.flyout .title:not([aria-haspopup=true]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

div.flyout .title:not([aria-haspopup=true])::before {
    background-color: red;
    content: 'This tag with class="title" must have a aria-haspopup="true" attribute. Example: <tag class="title" aria-haspopup="true">.'
}

div.flyout button.toggler {
    background: 0 0;
    border: 0;
    border-radius: .25em;
    font-size: 1em;
    padding: .25em
}

div.flyout button.toggler:not([aria-labelledby])::before,
div.flyout button.toggler:not([type=button])::before,
div.flyout button.toggler > img:not([aria-hidden=true])::before {
    display: inline-block;
    color: #fff;
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

div.flyout button.toggler:not([type=button]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

div.flyout button.toggler:not([type=button])::before {
    background-color: red;
    content: 'This <button class="toggler"> must have a type="button" attribute. Example: <button class="toggler" type="button">.'
}

div.flyout button.toggler:not([aria-labelledby]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

div.flyout button.toggler:not([aria-labelledby])::before {
    background-color: red;
    content: 'This <button class="toggler"> must have an aria-labelledby="" attribute. Remember, the value of aria-labbelledby="" must be the .title ID. Example: <button class="toggler" aria-labelledby="[ .title ID ]">.'
}

div.flyout button.toggler:not([aria-expanded=true]):not([aria-expanded=false]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

div.flyout button.toggler:not([aria-expanded=true]):not([aria-expanded=false])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This <button class="toggler"> must have a true OR false aria-expanded="" attribute. Example: <button class="toggler" aria-expanded="[ true OR false ]">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

div.flyout button.toggler:focus,
div.flyout button.toggler:hover {
    background-color: rgba(0, 0, 0, .05)
}

div.flyout button.toggler > img {
    height: 1em;
    margin-bottom: -.125em;
    width: 1em
}

div.flyout button.toggler > img:not([aria-hidden=true]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

div.flyout button.toggler > img:not([aria-hidden=true])::before {
    background-color: red;
    content: 'This <img> tag must have aria-hidden="true". Example: <img aria-hidden="true">.'
}

div.flyout .content {
    box-shadow: 0 5px 10px var(--box-shadow--color), 0 10px 20px var(--box-shadow--color);
    background-color: #fff;
    border-radius: .25em;
    max-height: 12em;
    overflow-y: auto;
    position: absolute;
    padding: 0;
    min-width: 10em;
    max-width: 16em;
    z-index: 10
}

div.flyout .content:not([aria-hidden=true]):not([aria-hidden=false])::before,
div.flyout .content:not([aria-labelledby])::before,
div.flyout .content:not([id])::before {
    display: inline-block;
    color: #fff;
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

div.flyout .content:not([id]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

div.flyout .content:not([id])::before {
    background-color: red;
    content: 'This tag with class="content" must have a not empty id="" attribute. Example: <tag class="content" id="[ some ID ]">.'
}

div.flyout .content:not([aria-hidden=true]):not([aria-hidden=false]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

div.flyout .content:not([aria-hidden=true]):not([aria-hidden=false])::before {
    background-color: red;
    content: 'This tag with class="content" must have an aria-hidden="true" OR aria-hidden="false" attribute. Example: <tag class="content" aria-hidden="[ true OR false ]">.'
}

div.flyout .content:not([aria-labelledby]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

div.flyout .content:not([aria-labelledby])::before {
    background-color: red;
    content: 'This tag with class="content" must have an aria-labelledby="" attribute. Remember, the value of aria-labbelledby="" must be the .title ID. Example: <tag class="content" aria-labelledby="[ .title ID ]">.'
}

[dir=ltr] div.flyout .content {
    right: 0
}

[dir=rtl] div.flyout .content {
    left: 0
}

div.flyout .content[aria-hidden=true] {
    display: none
}

div.flyout .content h6 {
    background-color: #f7f7f7;
    font-size: 1em;
    font-weight: 400;
    line-height: 1em;
    margin: 0;
    padding: .5em 1.25em
}

div.flyout .content > ul,
div.flyout ul.content {
    list-style: none;
    margin: 0;
    padding: 0
}

div.flyout .item {
    background-color: transparent;
    display: block;
    padding: .75em 1.25em
}

[dir=ltr] div.flyout .item {
    text-align: left
}

[dir=rtl] div.flyout .item {
    text-align: right
}

div.flyout a.item,
div.flyout button.item {
    color: var(--color--primary)
}

div.flyout a.item:active,
div.flyout a.item:focus,
div.flyout a.item:hover,
div.flyout button.item:active,
div.flyout button.item:focus,
div.flyout button.item:hover {
    background-color: #005AE6;
    color: #fff
}

div.flyout a.item {
    border: 0 !important;
    border-radius: 0 !important;
    padding: .75em 1.25em !important
}

div.flyout a.item[aria-disabled=true] {
    background-color: #F2F2F2 !important;
    color: #515151 !important;
    cursor: not-allowed !important;
    opacity: .75 !important;
    pointer-events: none
}

div.flyout button.item {
    border: 0;
    font-size: 1em;
    width: 100%
}

div.flyout button.item:not([type=button]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

div.flyout button.item:not([type=button])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This <button role="menuitem"> must have a type="button" attribute. Example: <button role="menuitem" type="button">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

div.flyout button.item[disabled] {
    background-color: #F2F2F2;
    color: #515151;
    cursor: not-allowed;
    opacity: .75
}

div.flyout [role=separator] {
    border-top: rgba(0, 0, 0, .1) solid .0625rem;
    display: block
}

div.flyout [role=separator]:not([tabindex="-1"]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

div.flyout [role=separator]:not([tabindex="-1"])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This tag with role="separator" must have a tabindex="-1" attribute. Example: <tag role="separator" tabindex="-1">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

form {
    overflow: auto;
    padding: .5rem
}

form.classic .ctrl {
    display: inline-block;
    height: auto;
    width: calc(100% - 1rem)
}

form.classic .ctrl span:first-of-type {
    margin-top: .25em;
    width: calc(35% - .5em)
}

[dir=rtl] form.classic .ctrl span:first-of-type {
    float: right
}

form.classic .ctrl input,
form.classic .ctrl select,
form.classic .ctrl textarea {
    width: calc(100% - 35%)
}

.group.block,
.input-group.block {
    width: 100%
}

form.classic .ctrl small {
    display: block
}

[dir=ltr] form.classic .ctrl small {
    margin-left: 35%
}

[dir=rtl] form.classic .ctrl small {
    margin-right: 35%
}

form.classic .ctrl.swc span:first-of-type {
    margin-top: 0
}

form.v,
form.v form.ctrl.rng,
form.v form.ctrl.sel,
form.v form.ctrl.sel-mul,
form.v form.ctrl.txt,
form.v form.ctrl.txta {
    display: flex;
    flex-direction: column
}

form input :not([name]),
form select :not([name]),
form textarea :not([name]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

form input :not([name])::before,
form select :not([name])::before,
form textarea :not([name])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This element must have a non-empty name="" attribute. Example: <element name="[ some NAME ]">';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

form p {
    min-width: 100%
}

form .ctrl {
    margin: .5rem
}

fieldset {
    border-color: #fff;
    border-radius: var(--control__box--shape);
    border-style: solid;
    border-width: .0625em;
    margin: 1rem;
    padding: 0
}

fieldset legend {
    border: 0;
    height: 1em;
    line-height: 1em;
    margin: 0;
    opacity: .75;
    padding: 0
}

fieldset:disabled {
    border-color: rgba(255, 255, 255, .25)
}

fieldset:disabled legend {
    opacity: .75
}

fieldset fieldset {
    margin: 1rem;
    padding: 0
}

.group {
    border-radius: var(--control__box--shape);
    display: inline-flex
}

.group:not([aria-label])::before,
.group:not([role=group])::before {
    font-weight: 700;
    display: inline-block;
    color: #fff;
    font-size: 16px;
    padding: .125rem .25rem
}

.group:not([aria-label]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.group:not([aria-label])::before {
    background-color: red;
    content: 'This <div class="group"> must have a non empty aria-label="" to be named. Example: <div class="group" aria-label="[ div.group name ]">.'
}

.group:not([role=group]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.group:not([role=group])::before {
    background-color: red;
    content: 'This <div class="group"> must have role="group". Example: <div class="group" role="group">.'
}

.input-group,
.searchbox {
    font-size: var(--control__box--size)
}

.group.xs {
    --control__box--size: var(--control__box--size--xs)
}

.group.sm {
    --control__box--size: var(--control__box--size--sm)
}

.group.md {
    --control__box--size: var(--control__box--size--md)
}

.group.lg {
    --control__box--size: var(--control__box--size--lg)
}

.group.block > * {
    flex-grow: 1;
    flex-shrink: 0
}

.group.capsule {
    --control__box--shape: var(--control__box--shape--capsule)
}

.group.round {
    --control__box--shape: var(--control__box--shape--round)
}

.group.square {
    --control__box--shape: var(--control__box--shape--square)
}

.group.v,
form.v .group.ctrl.rng,
form.v .group.ctrl.sel,
form.v .group.ctrl.sel-mul,
form.v .group.ctrl.txt,
form.v .group.ctrl.txta {
    flex-direction: column
}

[dir=ltr] .group.v > :first-child,
[dir=ltr] .group.v > :first-child.sel > select,
[dir=ltr] .group.v > :first-child.txt > input,
[dir=ltr] .group.v > :first-child[class*=lbl-btn] > span,
[dir=ltr] form.v .group.ctrl.rng > :first-child,
[dir=ltr] form.v .group.ctrl.rng > :first-child.sel > select,
[dir=ltr] form.v .group.ctrl.rng > :first-child.txt > input,
[dir=ltr] form.v .group.ctrl.rng > :first-child[class*=lbl-btn] > span,
[dir=ltr] form.v .group.ctrl.sel-mul > :first-child,
[dir=ltr] form.v .group.ctrl.sel-mul > :first-child.sel > select,
[dir=ltr] form.v .group.ctrl.sel-mul > :first-child.txt > input,
[dir=ltr] form.v .group.ctrl.sel-mul > :first-child[class*=lbl-btn] > span,
[dir=ltr] form.v .group.ctrl.sel > :first-child,
[dir=ltr] form.v .group.ctrl.sel > :first-child.sel > select,
[dir=ltr] form.v .group.ctrl.sel > :first-child.txt > input,
[dir=ltr] form.v .group.ctrl.sel > :first-child[class*=lbl-btn] > span,
[dir=ltr] form.v .group.ctrl.txt > :first-child,
[dir=ltr] form.v .group.ctrl.txt > :first-child.sel > select,
[dir=ltr] form.v .group.ctrl.txt > :first-child.txt > input,
[dir=ltr] form.v .group.ctrl.txt > :first-child[class*=lbl-btn] > span,
[dir=ltr] form.v .group.ctrl.txta > :first-child,
[dir=ltr] form.v .group.ctrl.txta > :first-child.sel > select,
[dir=ltr] form.v .group.ctrl.txta > :first-child.txt > input,
[dir=ltr] form.v .group.ctrl.txta > :first-child[class*=lbl-btn] > span,
form.v [dir=ltr] .group.ctrl.rng > :first-child,
form.v [dir=ltr] .group.ctrl.rng > :first-child.sel > select,
form.v [dir=ltr] .group.ctrl.rng > :first-child.txt > input,
form.v [dir=ltr] .group.ctrl.rng > :first-child[class*=lbl-btn] > span,
form.v [dir=ltr] .group.ctrl.sel-mul > :first-child,
form.v [dir=ltr] .group.ctrl.sel-mul > :first-child.sel > select,
form.v [dir=ltr] .group.ctrl.sel-mul > :first-child.txt > input,
form.v [dir=ltr] .group.ctrl.sel-mul > :first-child[class*=lbl-btn] > span,
form.v [dir=ltr] .group.ctrl.sel > :first-child,
form.v [dir=ltr] .group.ctrl.sel > :first-child.sel > select,
form.v [dir=ltr] .group.ctrl.sel > :first-child.txt > input,
form.v [dir=ltr] .group.ctrl.sel > :first-child[class*=lbl-btn] > span,
form.v [dir=ltr] .group.ctrl.txt > :first-child,
form.v [dir=ltr] .group.ctrl.txt > :first-child.sel > select,
form.v [dir=ltr] .group.ctrl.txt > :first-child.txt > input,
form.v [dir=ltr] .group.ctrl.txt > :first-child[class*=lbl-btn] > span,
form.v [dir=ltr] .group.ctrl.txta > :first-child,
form.v [dir=ltr] .group.ctrl.txta > :first-child.sel > select,
form.v [dir=ltr] .group.ctrl.txta > :first-child.txt > input,
form.v [dir=ltr] .group.ctrl.txta > :first-child[class*=lbl-btn] > span {
    border-radius: var(--control__box--shape)var(--control__box--shape)0 0
}

[dir=ltr] .group.v > :last-child,
[dir=ltr] .group.v > :last-child.sel > select,
[dir=ltr] .group.v > :last-child.txt > input,
[dir=ltr] .group.v > :last-child[class*=lbl-btn] > span,
[dir=ltr] form.v .group.ctrl.rng > :last-child,
[dir=ltr] form.v .group.ctrl.rng > :last-child.sel > select,
[dir=ltr] form.v .group.ctrl.rng > :last-child.txt > input,
[dir=ltr] form.v .group.ctrl.rng > :last-child[class*=lbl-btn] > span,
[dir=ltr] form.v .group.ctrl.sel-mul > :last-child,
[dir=ltr] form.v .group.ctrl.sel-mul > :last-child.sel > select,
[dir=ltr] form.v .group.ctrl.sel-mul > :last-child.txt > input,
[dir=ltr] form.v .group.ctrl.sel-mul > :last-child[class*=lbl-btn] > span,
[dir=ltr] form.v .group.ctrl.sel > :last-child,
[dir=ltr] form.v .group.ctrl.sel > :last-child.sel > select,
[dir=ltr] form.v .group.ctrl.sel > :last-child.txt > input,
[dir=ltr] form.v .group.ctrl.sel > :last-child[class*=lbl-btn] > span,
[dir=ltr] form.v .group.ctrl.txt > :last-child,
[dir=ltr] form.v .group.ctrl.txt > :last-child.sel > select,
[dir=ltr] form.v .group.ctrl.txt > :last-child.txt > input,
[dir=ltr] form.v .group.ctrl.txt > :last-child[class*=lbl-btn] > span,
[dir=ltr] form.v .group.ctrl.txta > :last-child,
[dir=ltr] form.v .group.ctrl.txta > :last-child.sel > select,
[dir=ltr] form.v .group.ctrl.txta > :last-child.txt > input,
[dir=ltr] form.v .group.ctrl.txta > :last-child[class*=lbl-btn] > span,
form.v [dir=ltr] .group.ctrl.rng > :last-child,
form.v [dir=ltr] .group.ctrl.rng > :last-child.sel > select,
form.v [dir=ltr] .group.ctrl.rng > :last-child.txt > input,
form.v [dir=ltr] .group.ctrl.rng > :last-child[class*=lbl-btn] > span,
form.v [dir=ltr] .group.ctrl.sel-mul > :last-child,
form.v [dir=ltr] .group.ctrl.sel-mul > :last-child.sel > select,
form.v [dir=ltr] .group.ctrl.sel-mul > :last-child.txt > input,
form.v [dir=ltr] .group.ctrl.sel-mul > :last-child[class*=lbl-btn] > span,
form.v [dir=ltr] .group.ctrl.sel > :last-child,
form.v [dir=ltr] .group.ctrl.sel > :last-child.sel > select,
form.v [dir=ltr] .group.ctrl.sel > :last-child.txt > input,
form.v [dir=ltr] .group.ctrl.sel > :last-child[class*=lbl-btn] > span,
form.v [dir=ltr] .group.ctrl.txt > :last-child,
form.v [dir=ltr] .group.ctrl.txt > :last-child.sel > select,
form.v [dir=ltr] .group.ctrl.txt > :last-child.txt > input,
form.v [dir=ltr] .group.ctrl.txt > :last-child[class*=lbl-btn] > span,
form.v [dir=ltr] .group.ctrl.txta > :last-child,
form.v [dir=ltr] .group.ctrl.txta > :last-child.sel > select,
form.v [dir=ltr] .group.ctrl.txta > :last-child.txt > input,
form.v [dir=ltr] .group.ctrl.txta > :last-child[class*=lbl-btn] > span {
    border-radius: 0 0 var(--control__box--shape)var(--control__box--shape)
}

[dir=ltr] .group > :first-child,
[dir=ltr] .group > :first-child.sel > select,
[dir=ltr] .group > :first-child.txt > input,
[dir=ltr] .group > :first-child[class*=lbl-btn] > span {
    border-radius: var(--control__box--shape)0 0 var(--control__box--shape)
}

[dir=rtl] .group > :first-child,
[dir=rtl] .group > :first-child.sel > select,
[dir=rtl] .group > :first-child.txt > input,
[dir=rtl] .group > :first-child[class*=lbl-btn] > span {
    border-radius: 0 var(--control__box--shape)var(--control__box--shape)0
}

.group > :not(:first-child):not(:last-child),
.group > :not(:first-child):not(:last-child) > * {
    border-radius: 0
}

[dir=ltr] .group > :last-child,
[dir=ltr] .group > :last-child.sel > select,
[dir=ltr] .group > :last-child.txt > input,
[dir=ltr] .group > :last-child[class*=lbl-btn] > span {
    border-radius: 0 var(--control__box--shape)var(--control__box--shape)0
}

[dir=rtl] .group > :last-child,
[dir=rtl] .group > :last-child.sel > select,
[dir=rtl] .group > :last-child.txt > input,
[dir=rtl] .group > :last-child[class*=lbl-btn] > span {
    border-radius: var(--control__box--shape)0 0 var(--control__box--shape)
}

.input-group {
    border-radius: var(--control__box--shape);
    display: inline-flex
}

.input-group.xs,
.xs .input-group {
    --control__box--size: var(--control__box--size--xs)
}

.input-group.sm,
.sm .input-group {
    --control__box--size: var(--control__box--size--sm)
}

.input-group.md,
.md .input-group {
    --control__box--size: var(--control__box--size--md)
}

.input-group.lg,
.lg .input-group {
    --control__box--size: var(--control__box--size--lg)
}

.capsule .input-group,
.input-group.capsule {
    --control__box--shape: var(--control__box--shape--capsule)
}

.input-group.round,
.round .input-group {
    --control__box--shape: var(--control__box--shape--round)
}

.input-group.square,
.square .input-group {
    --control__box--shape: var(--control__box--shape--square)
}

[dir=ltr] .input-group > :first-child,
[dir=ltr] .input-group > :first-child * {
    border-radius: var(--control__box--shape)0 0 var(--control__box--shape)
}

[dir=rtl] .input-group > :first-child,
[dir=rtl] .input-group > :first-child * {
    border-radius: 0 var(--control__box--shape)var(--control__box--shape)0
}

.input-group > :not(:first-child):not(:last-child),
.input-group > :not(:first-child):not(:last-child) * {
    border-radius: 0
}

[dir=ltr] .input-group > :last-child,
[dir=ltr] .input-group > :last-child * {
    border-radius: 0 var(--control__box--shape)var(--control__box--shape)0
}

[dir=rtl] .input-group > :last-child,
[dir=rtl] .input-group > :last-child * {
    border-radius: var(--control__box--shape)0 0 var(--control__box--shape)
}

.input-group .addon {
    background-color: #fff;
    flex-grow: 0;
    line-height: 1.25em;
    padding: .375em .5em
}

.input-group .addon img,
.input-group .addon svg {
    display: block;
    height: 1.25em;
    width: 1.25em
}

.input-group .addon .chk > span {
    border-radius: 0;
    display: block;
    overflow: hidden;
    width: 1em
}

[dir=ltr] .input-group .addon .chk > span {
    padding-left: 1em
}

[dir=rtl] .input-group .addon .chk > span {
    padding-right: 1em
}

.input-group .txt,
.input-group .txt > input {
    flex-grow: 1
}

.responsive-embed {
    height: 0;
    margin: 0 0 var(--body--line-height);
    overflow: hidden;
    padding-bottom: 56.25%;
    position: relative
}

.responsive-embed:last-child {
    margin-bottom: 0
}

.responsive-embed.ratio--21by9 {
    padding-bottom: 42.85714%
}

.responsive-embed.ratio--16by9,
.responsive-embed.widescreen {
    padding-bottom: 56.25%
}

.responsive-embed.ratio--9by16,
.responsive-embed.widescreen--vertical {
    padding-bottom: 177.77778%
}

.responsive-embed.ratio--4by3 {
    padding-bottom: 75%
}

.responsive-embed.panorama {
    padding-bottom: 31.64062%
}

.responsive-embed.ratio--1by1,
.responsive-embed.square {
    padding-bottom: 100%
}

.responsive-embed > :first-of-type {
    height: 100%;
    position: absolute;
    width: 100%
}

.jump-link,
.jump-link:active,
.jump-link:focus {
    position: fixed
}

.searchbox {
    background-color: var(--txt--bg-c);
    border-color: var(--txt--bd-c);
    border-radius: var(--control__box--shape);
    display: inline-flex;
    color: var(--txt--c);
    cursor: pointer;
    height: 2em;
    vertical-align: middle
}

.searchbox:not([role=search]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.searchbox:not([role=search])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This <tag class="searchbox"> must have a role="search" attribute. Example: <tag class="searchbox" role="search">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.searchbox.block {
    width: 100%
}

.capsule .searchbox,
.searchbox.capsule {
    --control__box--shape: var(--control__box--shape--capsule)
}

.round .searchbox,
.searchbox.round {
    --control__box--shape: var(--control__box--shape--round)
}

.searchbox.square,
.square .searchbox {
    --control__box--shape: var(--control__box--shape--square)
}

.searchbox.xs,
.xs .searchbox {
    --control__box--size: var(--control__box--size--xs)
}

.searchbox.sm,
.sm .searchbox {
    --control__box--size: var(--control__box--size--sm)
}

.md .searchbox,
.searchbox.md {
    --control__box--size: var(--control__box--size--md)
}

.lg .searchbox,
.searchbox.lg {
    --control__box--size: var(--control__box--size--lg)
}

.searchbox input {
    background: 0 0;
    border: none;
    border-radius: var(--control__box--shape);
    flex-grow: 1;
    font-size: 1em
}

.searchbox input:not([type=search]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.searchbox input:not([type=search])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This <input> tag must have a type="search" attribute. Example: <input type="search">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.searchbox input:not([aria-label]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.searchbox input:not([aria-label])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This <input> tag must have a non-empty aria-label="" attribute. Example: <input aria-label="[ some labelling for input ]">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

[dir=ltr] .searchbox input {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    padding: calc(.25em - .0625rem) 0 calc(.25em - .0625rem) calc(.5em - .0625rem)
}

[dir=rtl] .searchbox input {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    padding: calc(.25em - .0625rem) calc(.5em - .0625rem) calc(.25em - .0625rem) 0
}

.searchbox button:not([type=submit])::before,
.tabs:not([aria-label])::before,
.tabs > div:first-of-type:not([role=tablist])::before {
    color: #fff;
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.searchbox button:not([type=submit]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.searchbox button:not([type=submit])::before {
    background-color: red;
    display: inline-block;
    content: 'This <button> tag must have a type="submit" attribute. Example: <button type="submit">.'
}

[dir=ltr] .searchbox button {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0
}

[dir=rtl] .searchbox button {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0
}

.tabs {
    display: flex;
    flex-direction: column
}

.tabs:not([aria-label]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.tabs:not([aria-label])::before {
    background-color: red;
    display: inline-block;
    content: 'This <div class="tabs"> must have a non empty aria-label="" attribute. Example: <div class="tabs" aria-label="[ tabs component name ]">.'
}

.tabs > div:first-of-type {
    flex-direction: row;
    display: flex
}

.tabs > div:first-of-type > button {
    border-style: none none solid;
    border-width: .125em 0
}

.tabs.h {
    flex-direction: row
}

.tabs.h > div:first-of-type {
    flex-direction: column
}

.tabs.h > div:first-of-type > button {
    border-width: 0 .125em
}

[dir=ltr] .tabs.h > div:first-of-type > button {
    border-style: none solid none none
}

[dir=rtl] .tabs.h > div:first-of-type > button {
    border-style: none none none solid
}

.tabs.tabs--start > div:first-of-type {
    justify-content: flex-start
}

.tabs.tabs--end > div:first-of-type {
    justify-content: flex-end
}

.tabs.tabs--wide > div:first-of-type > button {
    flex-grow: 1
}

.tabs > div:first-of-type:not([role=tablist]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.tabs > div:first-of-type:not([role=tablist])::before {
    background-color: red;
    display: inline-block;
    content: 'This <div> must have a role="tablist" attribute. Example: <div role="tablist">.'
}

.tabs > div:first-of-type > button {
    background-color: transparent;
    border-color: transparent;
    border-radius: 0;
    cursor: pointer;
    font-size: 1em;
    padding: .875em;
    text-align: center
}

.tabs > div:first-of-type > button:not([aria-controls])::before,
.tabs > div:first-of-type > button:not([aria-selected=false]):not([aria-selected=true])::before,
.tabs > div:first-of-type > button:not([id])::before,
.tabs > div:first-of-type > button:not([role=tab])::before {
    display: inline-block;
    color: #fff;
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.tabs > div:first-of-type > button:not([role=tab]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.tabs > div:first-of-type > button:not([role=tab])::before {
    background-color: red;
    content: 'This <button> must have a role="tab" attribute. Example: <button role="tab">.'
}

.tabs > div:first-of-type > button:not([id]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.tabs > div:first-of-type > button:not([id])::before {
    background-color: red;
    content: 'This <button role="tab"> must have a non empty id="" attribute. Example: <button role="tab" id="[ some ID ]">.'
}

.tabs > div:first-of-type > button:not([aria-controls]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.tabs > div:first-of-type > button:not([aria-controls])::before {
    background-color: red;
    content: 'This <button role="tab"> must have a non empty aria-controls="" attribute. The value of aria-controls attribute must be the ID of the tabpanel this tab points at. Example: <button role="tab" aria-controls="[ pointed tabpanel ID ]">.'
}

.tabs > div:first-of-type > button:not([aria-selected=false]):not([aria-selected=true]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.tabs > div:first-of-type > button:not([aria-selected=false]):not([aria-selected=true])::before {
    background-color: red;
    content: 'This <button role="tab"> must have a aria-selected="false" OR aria-selected="true" attribute. Example: <button role="tab" aria-selected="[ false OR true ]">.'
}

.tabs > div:first-of-type > button:not([tabindex="0"]):not([tabindex="-1"]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.tabs > div:first-of-type > button:not([tabindex="0"]):not([tabindex="-1"])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This <button role="tab"> must have a tabindex="0" OR tabindex="-1" attribute. Example: <button role="tab" tabindex="[ 0 OR -1 ]">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.tabs > div:first-of-type > button:focus,
.tabs > div:first-of-type > button:hover {
    border-color: #0046b3
}

.tabs > div:first-of-type > button[aria-selected=true] {
    border-color: #1a74ff
}

.tabs > div:first-of-type > button[disabled] {
    background-color: rgba(255, 255, 255, .25);
    cursor: not-allowed;
    opacity: .75
}

.tabs > div:first-of-type > button[class*=icn] > img,
.tabs > div:first-of-type > button[class*=icn] > svg {
    height: 1.25em;
    margin: 0 0 -.25em;
    width: 1.25em
}

.tabs > div:first-of-type > button.tab-icn-txt.v,
form.v .tabs > div:first-of-type > button.tab-icn-txt.ctrl.rng,
form.v .tabs > div:first-of-type > button.tab-icn-txt.ctrl.sel,
form.v .tabs > div:first-of-type > button.tab-icn-txt.ctrl.sel-mul,
form.v .tabs > div:first-of-type > button.tab-icn-txt.ctrl.txt,
form.v .tabs > div:first-of-type > button.tab-icn-txt.ctrl.txta {
    padding: .375em .875em
}

.tabs > div:first-of-type > button.tab-icn-txt.v > img,
.tabs > div:first-of-type > button.tab-icn-txt.v > svg,
form.v .tabs > div:first-of-type > button.tab-icn-txt.ctrl.rng > img,
form.v .tabs > div:first-of-type > button.tab-icn-txt.ctrl.rng > svg,
form.v .tabs > div:first-of-type > button.tab-icn-txt.ctrl.sel-mul > img,
form.v .tabs > div:first-of-type > button.tab-icn-txt.ctrl.sel-mul > svg,
form.v .tabs > div:first-of-type > button.tab-icn-txt.ctrl.sel > img,
form.v .tabs > div:first-of-type > button.tab-icn-txt.ctrl.sel > svg,
form.v .tabs > div:first-of-type > button.tab-icn-txt.ctrl.txt > img,
form.v .tabs > div:first-of-type > button.tab-icn-txt.ctrl.txt > svg,
form.v .tabs > div:first-of-type > button.tab-icn-txt.ctrl.txta > img,
form.v .tabs > div:first-of-type > button.tab-icn-txt.ctrl.txta > svg {
    display: block;
    margin: 0 auto
}

.tabs > div:not(:first-of-type):not([aria-labelledby])::before,
.tabs > div:not(:first-of-type):not([id])::before,
.tabs > div:not(:first-of-type):not([role=tabpanel])::before {
    display: inline-block;
    color: #fff;
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.tabs > div:not(:first-of-type) {
    flex-grow: 1
}

.tabs > div:not(:first-of-type):not([role=tabpanel]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.tabs > div:not(:first-of-type):not([role=tabpanel])::before {
    background-color: red;
    content: 'This <div> must have a role="tabpanel" attribute. Example: <div role="tabpanel">.'
}

.tabs > div:not(:first-of-type):not([id]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.tabs > div:not(:first-of-type):not([id])::before {
    background-color: red;
    content: 'This <div role="tabpanel"> must have a non empty id="" attribute. Example: <div role="tabpanel" id="[ some ID ]">.'
}

.tabs > div:not(:first-of-type):not([aria-labelledby]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.tabs > div:not(:first-of-type):not([aria-labelledby])::before {
    background-color: red;
    content: 'This <div role="tabpanel"> must have a non empty aria-labelledby="" attribute. The value of aria-labelledby attribute must be the ID of the tab pointing at this tabpanel. Example: <div role="tabpanel" aria-labelledby="[ pointing tab ID ]">.'
}

.tabs > div:not(:first-of-type):not([tabindex="0"]):not([tabindex="-1"]) {
    background-color: rgba(255, 0, 0, .1);
    border: .25rem dotted red !important
}

.tabs > div:not(:first-of-type):not([tabindex="0"]):not([tabindex="-1"])::before {
    background-color: red;
    display: inline-block;
    color: #fff;
    content: 'This <div role="tabpanel"> must have a tabindex="0" OR tabindex="-1" attribute. Example: <div role="tabpanel" tabindex="[ 0 OR -1 ]">.';
    font-size: 16px;
    font-weight: 700;
    padding: .125rem .25rem
}

.jump-link {
    top: .5rem;
    z-index: 5
}

[dir=ltr] .jump-link {
    left: .5rem
}

[dir=rtl] .jump-link {
    right: .5rem
}

[dir=ltr] .text--left {
    text-align: left
}

[dir=rtl] .text--left {
    text-align: right
}

.text--center {
    text-align: center
}

[dir=ltr] .text--right {
    text-align: right
}

[dir=rtl] .text--right {
    text-align: left
}

.text--blur {
    color: transparent;
    text-shadow: 0 0 1em rgba(0, 0, 0, .75)
}

.text--primary {
    color: #005AE6
}

.text--secondary {
    color: #747474
}

.text--success {
    color: #158646
}

.text--info {
    color: #867601
}

.text--warning {
    color: #b35d00
}

.text--danger {
    color: #DD1F26
}

.text--uppercase {
    text-transform: uppercase
}

@font-face {
    font-family: OpenDyslexic;
    src: url(../font/open_dyslexic/OpenDyslexic-Regular.eot);
    src: url(../font/open_dyslexic/OpenDyslexic-Regular.eot?#iefix) format("embedded-opentype"), url(../font/open_dyslexic/OpenDyslexic-Regular.woff) format("woff"), url(../font/open_dyslexic/OpenDyslexic-Regular.ttf) format("truetype"), url(../font/open_dyslexic/OpenDyslexic-Regular.svg#opendyslexicregular) format("svg")
}

@font-face {
    font-family: OpenDyslexic;
    font-weight: 700;
    src: url(../font/open_dyslexic/OpenDyslexic-Bold.eot);
    src: url(../font/open_dyslexic/OpenDyslexic-Bold.eot?#iefix) format("embedded-opentype"), url(../font/open_dyslexic/OpenDyslexic-Bold.woff) format("woff"), url(../font/open_dyslexic/OpenDyslexic-Bold.ttf) format("truetype"), url(../font/open_dyslexic/OpenDyslexic-Bold.svg#opendyslexicbold) format("svg")
}

@font-face {
    font-family: OpenDyslexic;
    font-style: italic;
    src: url(../font/open_dyslexic/OpenDyslexic-Italic.eot);
    src: url(../font/open_dyslexic/OpenDyslexic-Italic.eot?#iefix) format("embedded-opentype"), url(../font/open_dyslexic/OpenDyslexic-Italic.woff) format("woff"), url(../font/open_dyslexic/OpenDyslexic-Italic.ttf) format("truetype"), url(../font/open_dyslexic/OpenDyslexic-Italic.svg#opendyslexicitalic) format("svg")
}

@font-face {
    font-family: OpenDyslexic;
    font-style: italic;
    font-weight: 700;
    src: url(../font/open_dyslexic/OpenDyslexic-BoldItalic.eot);
    src: url(../font/open_dyslexic/OpenDyslexic-BoldItalic.eot?#iefix) format("embedded-opentype"), url(../font/open_dyslexic/OpenDyslexic-BoldItalic.woff) format("woff"), url(../font/open_dyslexic/OpenDyslexic-BoldItalic.ttf) format("truetype"), url(../font/open_dyslexic/OpenDyslexic-BoldItalic.svg#opendyslexicbold_italic) format("svg")
}

@font-face {
    font-family: OpenDyslexicMono;
    src: url(../font/open_dyslexic/OpenDyslexicMono-Regular.otf);
    src: url(../font/open_dyslexic/OpenDyslexicMono-Regular.ttf) format("truetype")
}